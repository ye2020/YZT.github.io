<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>电机驱动(一)——FOC坐标变换</title>
    <url>/2023/04/08/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8(%E4%B8%80)%E2%80%94%E2%80%94FOC%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="电机驱动一foc坐标变换"><a class="markdownIt-Anchor" href="#电机驱动一foc坐标变换"></a> 电机驱动(一)——FOC坐标变换</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.28」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<p><strong>摘要：</strong> 简要介绍FOC驱动从坐标变换到SVPWM 各个部分在MATLAB仿真和硬件平台实现的学习过程</p>
<br>
<p><strong>备注：</strong>  ❗️面向自己的笔记 , 有的地方可能说的不是很清晰</p>
</blockquote>
<br>
<span id="more"></span>
<hr />
<hr />
<br>
<h2 id="1️⃣-前言"><a class="markdownIt-Anchor" href="#1️⃣-前言"></a> 1️⃣ 前言</h2>
<p><em><strong>六步换向控制无刷直流电机</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958acfb1fccdcd3651c85b.png" alt="image-20221015150424630" /></p>
<p>通过ABC三相电流方向来控制直流无刷电机选择 ,</p>
<table>
<thead>
<tr>
<th>步骤</th>
<th>A相电压</th>
<th>B相电压</th>
<th>C相电压</th>
<th>转子目标角度</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>+</td>
<td>-</td>
<td>悬空</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>15</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">150^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>2</td>
<td>+</td>
<td>悬空</td>
<td>-</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>21</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">210^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>3</td>
<td>悬空</td>
<td>+</td>
<td>-</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>27</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">270^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>4</td>
<td>-</td>
<td>+</td>
<td>悬空</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>33</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">330^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>5</td>
<td>-</td>
<td>悬空</td>
<td>+</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">30^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>6</td>
<td>悬空</td>
<td>-</td>
<td>+</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">90^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
</tbody>
</table>
<blockquote>
<p>通过不断重复这六步换向 , 就可以让BLDC转动起来</p>
</blockquote>
<br>
<hr />
<h3 id="12-有感foc控制流程"><a class="markdownIt-Anchor" href="#12-有感foc控制流程"></a> 1.2 有感FOC控制流程</h3>
<p><img src="https://pic.imgdb.cn/item/63958ad6b1fccdcd3651d056.png" alt="image-20221004205032040" /></p>
<hr />
<h3 id="13-无感foc控制流程"><a class="markdownIt-Anchor" href="#13-无感foc控制流程"></a> 1.3 无感FOC控制流程</h3>
<p><img src="https://pic.imgdb.cn/item/63958adeb1fccdcd3651dc75.png" alt="image-20221004205036856" /></p>
<p><strong>反park变换 ：</strong>  由直流信息转变为交流信息，把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> 和D轴Q轴信息进行合成 为一个交流信息</p>
<p><strong>Clark变换 :</strong>  把三相的<strong>电流正弦波</strong>分解成二维的直角坐标系(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> <strong>坐标</strong> )</p>
<p><img src="https://pic.imgdb.cn/item/63958ae3b1fccdcd3651e1a6.png" alt="image-20221005165836664" /></p>
<p><em><strong>park变换 :</strong></em></p>
<ul>
<li>把<code>Clark变换</code>后的(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> <strong>坐标</strong> ) 旋转<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> 度(即 <strong>d - q 坐标系</strong>),  其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> <strong>是转子当前的角度</strong> ;</li>
<li><strong>d - q坐标系</strong>是一个始终跟随转子进行旋转的坐标系</li>
<li>通过将一个匀速旋转向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>在这个坐标系下变成了一个定值 , 实现将两个控制量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">I_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">I_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 线性化.</li>
</ul>
<p>​	<img src="https://pic.imgdb.cn/item/63958ae6b1fccdcd3651e5da.png" alt="img" /></p>
<hr />
<hr />
<p>FOC驱动电机的速度由 电机的<strong>转矩和负载</strong>的大小动态决定</p>
<p><strong>例:</strong>  速度开环的情况下</p>
<ul>
<li>当负载不变时转矩 = 负载时 ,电机转速恒定;</li>
<li>转矩增大, 电机转速增快 , 负载阻力增大 ,直到转矩和负载重新达到平衡</li>
<li>转矩减小, 电机转速减小 , 负载阻力减小 ,直到转矩和负载重新达到平衡</li>
</ul>
<hr />
<h2 id="2️⃣-坐标变换"><a class="markdownIt-Anchor" href="#2️⃣-坐标变换"></a> 2️⃣ 坐标变换</h2>
<blockquote>
<p>(👇 关于这各个变换的目的是什么 , 可以参考一下这篇文章)</p>
<p><a href="https://zhuanlan.zhihu.com/p/147659820">深入浅出讲解FOC算法与SVPWM技术</a></p>
</blockquote>
<h3 id="21为什么要进行坐标变换"><a class="markdownIt-Anchor" href="#21为什么要进行坐标变换"></a> 2.1为什么要进行坐标变换</h3>
<blockquote>
<p>即将角度信息、磁场信息、转矩信息进行解耦，方便控制</p>
</blockquote>
<h4 id="211-目标"><a class="markdownIt-Anchor" href="#211-目标"></a> 2.1.1 目标</h4>
<ol>
<li>利用三相线圈产生<strong>旋转的磁场</strong>来控制转子的转动。</li>
<li>因此我们需要在三相线圈里面产生<strong>正弦的交流电流</strong></li>
<li>通过在三相线圈内通入 ， 互差120度的<strong>正弦的电压</strong>来产生正弦交流电流。</li>
</ol>
<hr />
<h4 id="212-将交流信息转变成直流信息"><a class="markdownIt-Anchor" href="#212-将交流信息转变成直流信息"></a> 2.1.2 <em><strong>将交流信息转变成直流信息</strong></em></h4>
<ul>
<li>因为foc电机的速度是通过转矩来控制的 ， 如果想要<strong>改变电机转矩</strong> ；</li>
<li>则需要改变通入线圈的正弦交流电的幅值 ；</li>
<li>要改变电流幅值 ，则需要改变<strong>正弦交流电压</strong>的幅值</li>
<li>现在我们想要动态的调节， 输入电压的幅值 ，一般是使用闭环的PID进行控制；</li>
<li>为了方便进行控制 ， 所以需要将正弦的交流电压转变为直流的，所以需要进行坐标变换</li>
</ul>
<hr />
<h4 id="213坐标变换需要做到"><a class="markdownIt-Anchor" href="#213坐标变换需要做到"></a> 2.1.3坐标变换需要做到</h4>
<p>我们需要的控制量有 ①幅值信息 ， ②角度信息</p>
<blockquote>
<p>把正弦交流信息分解成<strong>角度信息</strong>和<strong>幅值信息</strong></p>
<p>最终分解成 <strong>角度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></strong>  、<strong>转矩Q</strong>、<strong>磁场D</strong></p>
</blockquote>
<br>
<p><em><strong>补充:</strong></em></p>
<ul>
<li>park变换和clark变换 , 正向变换都是对电流进行变换 ;</li>
<li>反向变换都是对电压进行变换;</li>
</ul>
<br>
<hr />
<h3 id="22反park变换"><a class="markdownIt-Anchor" href="#22反park变换"></a> 2.2反park变换</h3>
<blockquote>
<p>经过Park反变换将<strong>旋转坐标系</strong>(d - q 坐标系)变成了<strong>静止坐标系</strong>(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 坐标系); 方便接下来让静止的两相坐标系向3相绕组坐标系进行变换。</p>
</blockquote>
<br>
<h4 id="221-基本公式"><a class="markdownIt-Anchor" href="#221-基本公式"></a> 2.2.1 <em><strong>基本公式:</strong></em></h4>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>α</mi></msub><mo>=</mo><mtext> </mtext><msub><mi>V</mi><mi>d</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>V</mi><mi>q</mi></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>β</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>V</mi><mi>d</mi></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>V</mi><mi>q</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}

V_\alpha =\ V_d\cdot\cos{\theta}\ -\ V_q\cdot\sin{\theta}  \\
V_\beta\ =\ V_d\cdot\sin{\theta}\ +\ V_q\cdot\cos{\theta} 
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><img src="https://pic.imgdb.cn/item/63958aedb1fccdcd3651edda.png" alt="image-20221005205642809" /></p>
<br>
<hr />
<h4 id="222-matlab-仿真"><a class="markdownIt-Anchor" href="#222-matlab-仿真"></a> 2.2.2 Matlab 仿真:</h4>
<p><img src="https://pic.imgdb.cn/item/63958af2b1fccdcd3651f30d.png" alt="image-20221006220536197" /></p>
<p>可以看到matlab仿真结果,  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>  和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 相位差为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">90^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></p>
<br>
<hr />
<h4 id="223-硬件平台实现"><a class="markdownIt-Anchor" href="#223-硬件平台实现"></a> 2.2.3 <em><strong>硬件平台实现:</strong></em></h4>
<blockquote>
<ul>
<li>通过上位机打印参数波形</li>
<li>theta为 (0~2pi)的锯齿波</li>
<li>V_d = 0.0f</li>
<li>V_q = 1.0f</li>
</ul>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/63958af5b1fccdcd3651f718.png" alt="image-20221015000036380" /></p>
<br>
<hr />
<h3 id="23反clark变换"><a class="markdownIt-Anchor" href="#23反clark变换"></a> 2.3反Clark变换</h3>
<blockquote>
<p>反clark变换的目的是把两个垂直的坐标系(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 坐标系 )转变为三相绕组坐标系;</p>
<p>(在FOC的控制中, 并没有使用反Clark变换 , 因为通过后边公式的化简发现只需要Iα和Iβ即可)</p>
</blockquote>
<br>
<h4 id="231-基本公式"><a class="markdownIt-Anchor" href="#231-基本公式"></a> 2.3.1 <em><strong>基本公式:</strong></em></h4>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>a</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>V</mi><mi>α</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><msup><mn>0</mn><mo>∘</mo></msup><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>V</mi><mi>β</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mrow><mn>9</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>b</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><msub><mi>V</mi><mi>α</mi></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mrow><mn>3</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>V</mi><mi>β</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mrow><mn>3</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>c</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><msub><mi>V</mi><mi>α</mi></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mrow><mn>3</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>V</mi><mi>β</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mrow><mn>3</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}

V_a\ =\ V_\alpha\cdot\cos{0^{\circ}}\ +\ V_\beta\cdot\cos{90^{\circ}}  \\
V_b\ =\ -V_\alpha\cdot\sin{30^{\circ}}\ +\ V_\beta\cdot\cos{30^{\circ}} \\
V_c \ =\ -V_\alpha\cdot\sin{30^{\circ}}\ -\ V_\beta\cdot\cos{30^{\circ}}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">9</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<p><em><strong>化简得:</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>a</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>V</mi><mi>α</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>b</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>⋅</mo><msub><mi>V</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><mo>⋅</mo><msub><mi>V</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>c</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>⋅</mo><msub><mi>V</mi><mi>α</mi></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><mo>⋅</mo><msub><mi>V</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}

V_a\ =\ V_\alpha  \\
V_b\ =\ -\frac{1}{2}\cdot V_\alpha\ +\ \frac{\sqrt{3}}{2}\cdot V_\beta \\
V_c \ =\ -\frac{1}{2}\cdot V_\alpha\ -\ \frac{\sqrt{3}}{2}\cdot V_\beta
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.379999999999999em;vertical-align:-1.9399999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.44em;"><span style="top:-4.47em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9399999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><em><strong>坐标图:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958af9b1fccdcd3651fb99.png" alt="image-20221005212529859" /></p>
<br>
<hr />
<h4 id="232-matlab-仿真"><a class="markdownIt-Anchor" href="#232-matlab-仿真"></a> 2.3.2 <em><strong>Matlab 仿真</strong></em></h4>
<p><img src="https://pic.imgdb.cn/item/63958b0eb1fccdcd36521297.png" alt="image-20221006230158773" /></p>
<p><img src="https://pic.imgdb.cn/item/63958b16b1fccdcd36521e81.png" alt="image-20221006230131147" /></p>
<ul>
<li>可以看到a, b, c三个方向互差<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>12</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">120^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<br>
<hr />
<br>
<h4 id="233-硬件平台实现"><a class="markdownIt-Anchor" href="#233-硬件平台实现"></a> 2.3.3 硬件平台实现</h4>
<blockquote>
<ul>
<li>通过上位机打印参数波形</li>
<li>theta为 (0~2pi)的锯齿波</li>
<li>V_d = 0.0f</li>
<li>V_q = 1.0f</li>
</ul>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/63958b1db1fccdcd3652284e.png" alt="image-20221015002613794" /></p>
<br>
<hr />
<h3 id="24-clark变换"><a class="markdownIt-Anchor" href="#24-clark变换"></a> 2.4 Clark变换</h3>
<blockquote>
<p>把三相的<strong>电流正弦波</strong>分解成二维的直角坐标系(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> <strong>坐标</strong> )</p>
</blockquote>
<h4 id="241-基本公式"><a class="markdownIt-Anchor" href="#241-基本公式"></a> 2.4.1 <em><strong>基本公式 :</strong></em></h4>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>a</mi></msub><mo>+</mo><msub><mi>I</mi><mi>b</mi></msub><mo>+</mo><msub><mi>I</mi><mi>c</mi></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>α</mi></msub><mo>=</mo><msub><mi>I</mi><mi>a</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><msup><mn>0</mn><mo>∘</mo></msup><mo>−</mo><mtext> </mtext><msub><mi>I</mi><mi>b</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>I</mi><mi>c</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>β</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>I</mi><mi>a</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mrow><mn>9</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><mo>+</mo><mtext> </mtext><msub><mi>I</mi><mi>b</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>6</mn></mfrac><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>I</mi><mi>c</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>6</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
I_a + I_b + I_c = 0 \\
I_\alpha =I_a\cdot\cos{0^{\circ}}  -\  I_b \cdot\cos{\frac{\pi}{3}}\ -\ I_c\cdot\cos{\frac{\pi}{3} }\\
I_\beta\ =\ I_a\cdot\cos{90^{\circ}}  +\  I_b \cdot\cos{\frac{\pi}{6}}\ -\ I_c\cdot\cos{\frac{\pi}{6} }
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">9</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><em><strong>化简得:</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>α</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>⋅</mo><msub><mi>I</mi><mi>a</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>β</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>I</mi><mi>a</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mn>2</mn><msub><mi>I</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
I_\alpha\ =\ \frac{3}{2}\cdot I_a \\
I_\beta\ =\ \frac{\sqrt{3}}{2}\cdot (I_a \ +\ 2I_b)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7049999999999996em;"><span style="top:-3.7349999999999994em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.2649999999999997em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.205em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><font face="华文彩云" color=red size=5>注意：</font ></p>
<p>为了保证<strong>变换前后幅值不变</strong> , 需要乘上<code>clark变换系数</code> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>(后续在<a href="#SVPWM">SVPWM</a>变换部分, 会乘上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>3</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>  补回来 )</p>
<br>
<p><em><strong>最终公式:</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>a</mi></msub><mo>+</mo><msub><mi>I</mi><mi>b</mi></msub><mo>+</mo><msub><mi>I</mi><mi>c</mi></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>a</mi></msub><mo>=</mo><msub><mi>I</mi><mi>α</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>β</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><msqrt><mn>3</mn></msqrt><mn>3</mn></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>I</mi><mi>a</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mn>2</mn><msub><mi>I</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
I_a + I_b + I_c = 0 \\
I_a = I_\alpha \\
I_\beta\ =\ \frac{\sqrt{3}}{3}\cdot (I_a \ +\ 2I_b)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.35em;vertical-align:-1.9249999999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.425em;"><span style="top:-4.455em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-3.0149999999999997em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.545em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9249999999999998em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<p><em><strong>坐标图:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958b46b1fccdcd36525da8.gif" alt="在这里插入图片描述" /></p>
<p><img src="https://pic.imgdb.cn/item/63958b60b1fccdcd36527ce6.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="242-matlab-仿真"><a class="markdownIt-Anchor" href="#242-matlab-仿真"></a> 2.4.2 Matlab 仿真:</h4>
<p><img src="https://pic.imgdb.cn/item/63958b75b1fccdcd36529537.png" alt="image-20221007164224758" /></p>
<p><img src="https://pic.imgdb.cn/item/63958b7db1fccdcd36529e3e.png" alt="image-20221007164051286" /></p>
<ul>
<li>可以看到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 两相相差<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">90^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<br>
<hr />
<h3 id="25park变换"><a class="markdownIt-Anchor" href="#25park变换"></a> 2.5Park变换</h3>
<blockquote>
<p>park变换的目的是把静止的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> <strong>坐标系</strong> 变成跟随转子转动的坐标系</p>
</blockquote>
<br>
<h4 id="251-基础公式"><a class="markdownIt-Anchor" href="#251-基础公式"></a> 2.5.1 <em><strong>基础公式:</strong></em></h4>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>d</mi></msub><mo>=</mo><mtext> </mtext><msub><mi>I</mi><mi>α</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>I</mi><mi>β</mi></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>I</mi><mi>q</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><msub><mi>I</mi><mi>α</mi></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>I</mi><mi>β</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}

I_d =\ I_\alpha\cdot\cos{\theta}\ +\ I_\beta\cdot\sin{\theta}  \\
I_q\ =\ -I_\alpha\cdot\sin{\theta}\ +\ I_\beta\cdot\cos{\theta} 
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<p><em><strong>写成矩阵形式:</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>d</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>q</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>α</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>β</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[
 \begin{matrix}
   I_d \\
   I_q \\

  \end{matrix}
  \right] 
  =
  \left[
   \begin{matrix}
   \cos{\theta } &amp; \sin{\theta}\\
   -\sin{\theta} &amp; \cos{\theta } \\

  \end{matrix}
  \right]
  
 \left[
 \begin{matrix}
 I_\alpha\\
 I_\beta
 \end{matrix}
 \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p>
<br>
<p><em><strong>坐标图:</strong></em></p>
<img src="https://pic.imgdb.cn/item/63958b82b1fccdcd3652a585.png" alt="image-20221005203445196" style="zoom:80%;" />
<p><img src="https://pic.imgdb.cn/item/63958b86b1fccdcd3652ab65.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="252-matlab-仿真"><a class="markdownIt-Anchor" href="#252-matlab-仿真"></a> 2.5.2 <em><strong>Matlab 仿真:</strong></em></h4>
<p><img src="https://pic.imgdb.cn/item/63958b8ab1fccdcd3652b0cf.png" alt="image-20221007201607635" /></p>
<img src="https://pic.imgdb.cn/item/63958b8cb1fccdcd3652b494.png" alt="image-20221007170053508" style="zoom: 50%;" />
<br>
<blockquote>
<ul>
<li>可以看到经过反park、反clark、clark、park变换，最终输入值不变, 证明公式无误</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>FOC</category>
        <category>stm32</category>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>单片机</tag>
        <tag>驱动开发</tag>
      </tags>
  </entry>
  <entry>
    <title>电机驱动(二)——SVPWM</title>
    <url>/2023/04/08/%E7%94%B5%E6%9C%BA%E9%A9%B1%E5%8A%A8(%E4%BA%8C)%E2%80%94%E2%80%94SVPWM/</url>
    <content><![CDATA[<h1 id="电机驱动二svpwm"><a class="markdownIt-Anchor" href="#电机驱动二svpwm"></a> 电机驱动(二)——SVPWM</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.28」</em>   最后补充<br />
<br><br />
<strong>author：</strong>  <em>Y.Z.T.</em></p>
<br>
<p><strong>摘要：</strong> 简要介绍FOC驱动从坐标变换到SVPWM 各个部分在MATLAB仿真和硬件平台实现的学习过程<br />
<br><br />
<strong>备注：</strong>  ❗️面向自己的笔记 , 有的地方可能说的不是很清晰</p>
</blockquote>
<br>
<span id="more"></span>
<hr />
<h2 id="3️⃣-svpwm-控制流程"><a class="markdownIt-Anchor" href="#3️⃣-svpwm-控制流程"></a> 3️⃣ SVPWM 控制流程</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>V</mi><mi>P</mi><mi>W</mi><mi>M</mi><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">输</mi><mi mathvariant="normal">入</mi><msub><mi>V</mi><mi>α</mi></msub><mi mathvariant="normal">和</mi><msub><mi>V</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">输</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">三</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">定</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">器</mi><mi mathvariant="normal">的</mi><mi>p</mi><mi>w</mi><mi>m</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">SVPWM
\begin{cases}
输入V_\alpha 和 V_\beta\\
输出三相定时器的pwm
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">入</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">三</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">器</span><span class="mord cjk_fallback">的</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><em><strong>控制流程:</strong></em></p>
<p>①获取<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>②根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 判断当前扇区</p>
<p>③计算相邻两个矢量 , 每个<strong>矢量的作用时长</strong></p>
<p>④通过矢量作用时长计算出<strong>定时器</strong>的高电平时间</p>
<p>⑤通过定时器每个高电平时间计算出每个<strong>通道的CCR值</strong></p>
<hr />
<h3 id="31-引入"><a class="markdownIt-Anchor" href="#31-引入"></a> 3.1 引入</h3>
<ul>
<li>首先我们需要在三相线圈里面产生<strong>正弦的交流电流</strong> ,来产生 <em><strong>旋转的磁场</strong></em>  , 进而控制转子的转动 ;</li>
<li>而三相正弦电流 由 <em><strong>三相正弦电压</strong></em> 产生 , 但是我们的供电是 <em><strong>直流供电</strong></em> 的方式</li>
<li>通过mos管控制 , 只有  <em><strong>通和不通</strong></em> 两种状态 ， 所以通过 <em><strong>平均值等效</strong></em> 的方式, 将 <strong>正弦波转换为pwm波</strong></li>
<li>最终实现 , 通过直流mos管的开关 , 来模拟正弦的电压信号</li>
</ul>
<br>
<p><em><strong>正弦波转换成pwm波</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c31b1fccdcd3653b317.png" alt="image-20221005141253629" /></p>
<blockquote>
<p>用上面坐标系中的正弦波和三角波的<strong>交点</strong>投影到下面的坐标轴，以此确定PWM的占空比变化规律，这样合成的PWM波，经过 <em><strong>低通滤波器</strong></em> 之后，其实就等效为了一个正弦波</p>
</blockquote>
<hr />
<h3 id="32-空间电压矢量"><a class="markdownIt-Anchor" href="#32-空间电压矢量"></a> 3.2 空间电压矢量</h3>
<blockquote>
<ul>
<li>前面提到了6步换向的驱动方式 , 通过ABC三个桥臂的组合 , 总共有8个状态.</li>
<li>即有8个矢量方向,  通过相邻两个矢量的合成 , 就可以合成任意方向的矢量</li>
</ul>
</blockquote>
<h4 id="321-等效电路"><a class="markdownIt-Anchor" href="#321-等效电路"></a> 3.2.1 等效电路</h4>
<p><img src="https://pic.imgdb.cn/item/63958c34b1fccdcd3653b612.png" alt="image-20221015211910937" /></p>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font > <strong>以(110) 和 (011)为例</strong></p>
<p><img src="https://pic.imgdb.cn/item/63958c3fb1fccdcd3653c4ac.png" alt="image-20221016215020022" /></p>
<hr />
<br>
<h4 id="322-八个矢量对应的电压关系"><a class="markdownIt-Anchor" href="#322-八个矢量对应的电压关系"></a> 3.2.2 <em><strong>八个矢量对应的电压关系</strong></em></h4>
<p><span id="two" name="two"></span></p>
<p><img src="https://pic.imgdb.cn/item/63958c3fb1fccdcd3653c4b3.png" alt="image-20221015212111169" /></p>
<br>
<hr />
<h4 id="333-合成矢量-u"><a class="markdownIt-Anchor" href="#333-合成矢量-u"></a> 3.3.3 合成矢量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span></h4>
<p><span id="SVPWM" name="SVPWM"></span></p>
<blockquote>
<p>三相电压矢量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mi>a</mi></msub><mi mathvariant="normal">、</mi><msub><mi>U</mi><mi>b</mi></msub><mi mathvariant="normal">、</mi><msub><mi>U</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">U_a 、U_b、U_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 合成矢量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span></p>
</blockquote>
<img src="https://pic.imgdb.cn/item/63958c3fb1fccdcd3653c4b9.png" alt="image-20221016225049166" style="zoom:50%;" />
<p><font face="华文彩云" color=red size=5>补充：</font ></p>
<ul>
<li>可以看到合成后的 <em><strong>矢量的模</strong></em> 是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U_{dc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> , 但六个 <em><strong>方向矢量的模</strong></em> 却是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\frac{2}{3}U_{dc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>这是因为, 在从 <em><strong><code>x - y</code>坐标系</strong></em>  等幅变换到 <em><strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>−</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha - \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>坐标系</strong></em> 的过程中 , 进行了缩放 (即矢量长度缩小了1.5倍)</li>
<li>但是这种缩放 , 并不影响最后的 <em><strong>占空比结果</strong></em></li>
</ul>
<br>
<hr />
<h4 id="334-小结"><a class="markdownIt-Anchor" href="#334-小结"></a> 3.3.4 小结</h4>
<p><font face="华文彩云" color=red size=5>小结：</font ></p>
<ul>
<li>八个电压矢量中, <code>000</code>和<code>111</code> 是 <em><strong>零矢量</strong></em>  ;</li>
<li>其他6个矢量将整个空间划分成了 <em><strong>6个扇区</strong></em></li>
<li>为了减少管子在开关过程中的损耗 , 要保证每次都 <em><strong>只改动一个桥臂</strong></em> 的动作</li>
<li>所以 <em><strong>六个矢量</strong></em> 的大小都是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac><msub><mi>V</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\frac{2}{3}V_{dc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63958c3fb1fccdcd3653c4c4.png" alt="image-20221203182651642" /></p>
<br>
<hr />
<h3 id="33-怎么合成任意向量"><a class="markdownIt-Anchor" href="#33-怎么合成任意向量"></a> 3.3 怎么合成任意向量</h3>
<blockquote>
<p>通过合理配置六个基向量 , 在一个PWM周期中的作用的时间 , 就能合成出任意的空间电压矢量</p>
</blockquote>
<img src="https://pic.imgdb.cn/item/63958c3fb1fccdcd3653c4d6.png" alt="image-20221018150449621" style="zoom:43%;" />
<blockquote>
<p>其中 :</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示合成的空间电压矢量;</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">T_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示一个PWM的作用周期;</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">T_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">T_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 分别表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">向</mi><mi mathvariant="normal">矢</mi><mi mathvariant="normal">量</mi></mrow><annotation encoding="application/x-tex">X方向矢量</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">矢</span><span class="mord cjk_fallback">量</span></span></span></span>  和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">向</mi><mi mathvariant="normal">矢</mi><mi mathvariant="normal">量</mi></mrow><annotation encoding="application/x-tex">Y方向矢量</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">矢</span><span class="mord cjk_fallback">量</span></span></span></span>的作用时长</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>小结：</font ></p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">T_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">T_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的比值决定合成<strong>矢量的方向</strong>  ;</p>
</li>
<li>
<p>空矢量决定了力矩的大小;</p>
</li>
<li>
<p>当空矢量作用时间长的时候 , 合成矢量就小 , 电压就小 ; 电压小,电流也小 , 电机的扭矩就变小;</p>
</li>
</ul>
<hr />
<h3 id="34-扇区判断"><a class="markdownIt-Anchor" href="#34-扇区判断"></a> 3.4 扇区判断</h3>
<blockquote>
<p>前面提到 , SVPWM的输入是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> , 我们需要通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 来获取角度信息, 进行扇区判断。</p>
</blockquote>
<h4 id="341-获取角度信息"><a class="markdownIt-Anchor" href="#341-获取角度信息"></a> 3.4.1 获取角度信息</h4>
<br>
<p><em><strong>ABC三相电压</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>a</mi></msub><mo>=</mo><msub><mi>V</mi><mi>m</mi></msub><mtext> </mtext><mo>×</mo><mtext> </mtext><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>b</mi></msub><mo>=</mo><msub><mi>V</mi><mi>m</mi></msub><mtext> </mtext><mo>×</mo><mtext> </mtext><mi>cos</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mi>θ</mi><mtext> </mtext><mo>−</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi><mo stretchy="false">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>b</mi></msub><mo>=</mo><msub><mi>V</mi><mi>m</mi></msub><mtext> </mtext><mo>×</mo><mtext> </mtext><mi>cos</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mi>θ</mi><mtext> </mtext><mo>+</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi><mo stretchy="false">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
V_a = V_m\  \times \ \cos{\theta} \\\\
V_b = V_m\  \times \ \cos{(\theta\ - \frac{2}{3}\pi)}\\\\
V_b = V_m\  \times \ \cos{(\theta\ + \frac{2}{3}\pi)}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<blockquote>
<ul>
<li>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">V_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为相电压有效值</li>
</ul>
</blockquote>
<br>
<p><em><strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 坐标系中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表达式</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>α</mi></msub><mo>=</mo><msub><mi>V</mi><mi>a</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><msup><mn>0</mn><mo>∘</mo></msup><mo>−</mo><mtext> </mtext><msub><mi>V</mi><mi>b</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>V</mi><mi>c</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>β</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>V</mi><mi>a</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mrow><mn>9</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><mo>+</mo><mtext> </mtext><msub><mi>V</mi><mi>b</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>6</mn></mfrac><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>V</mi><mi>c</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>6</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
V_\alpha =V_a\cdot\cos{0^{\circ}}  -\  V_b \cdot\cos{\frac{\pi}{3}}\ -\ V_c\cdot\cos{\frac{\pi}{3} }\\\\
V_\beta\ =\ V_a\cdot\cos{90^{\circ}}  +\  V_b \cdot\cos{\frac{\pi}{6}}\ -\ V_c\cdot\cos{\frac{\pi}{6} }
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">9</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<p><em><strong>将ABC三相电压代入得</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>α</mi></msub><mo>=</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><msub><mi>V</mi><mi>m</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi><mo>−</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mrow><mi>θ</mi><mo>−</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi></mrow><mo stretchy="false">)</mo><mtext> </mtext><mo>−</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mrow><mi>θ</mi><mo>+</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi></mrow><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>α</mi></msub><mo>=</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><msub><mi>V</mi><mi>m</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mrow><mi>θ</mi><mo>−</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi></mrow><mo stretchy="false">)</mo><mtext> </mtext><mo>−</mo><mtext> </mtext><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mrow><mi>θ</mi><mo>+</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi></mrow><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
V_\alpha =\frac{2}{3}V_m\cdot(cos{\theta}  -\ \frac{1}{2} \cdot\cos({\theta-\frac{2}{3}\pi})\ -\  \frac{1}{2} \cdot\cos({\theta+\frac{2}{3}\pi})\\\\
V_\alpha =\frac{2}{3}V_m\cdot(\frac{\sqrt{3}}{2} \cdot\cos({\theta-\frac{2}{3}\pi})\ -\  \frac{\sqrt{3}}{2} \cdot\cos({\theta+\frac{2}{3}\pi})\\
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.35em;vertical-align:-1.9249999999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.425em;"><span style="top:-4.455em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span><span class="mclose">)</span></span></span><span style="top:-3.0149999999999997em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"></span></span><span style="top:-1.545em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9249999999999998em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<p><em><strong>化简得</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>α</mi></msub><mo>=</mo><msub><mi>V</mi><mi>m</mi></msub><mo>⋅</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>β</mi></msub><mo>=</mo><msub><mi>V</mi><mi>m</mi></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
V_\alpha = V_m \cdot\cos{\theta}\\\\
V_\beta = V_m \cdot\sin{\theta}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<p><em><strong>提取出角度信息</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\theta = \arctan{(\frac{V_\beta}{V_\alpha})}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></span></p>
<br>
<hr />
<h4 id="342-扇区判断原理"><a class="markdownIt-Anchor" href="#342-扇区判断原理"></a> 3.4.2 扇区判断原理</h4>
<blockquote>
<p>扇区判断的原理是根据 <strong>矢量的角位置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></strong> 确定矢量在哪个区间</p>
</blockquote>
<p><br><em><strong>六个扇区对应的角度</strong></em></p>
<table>
<thead>
<tr>
<th>扇区</th>
<th>角度</th>
<th>消除<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>arctan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\arctan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mop">arctan</span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td>I</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mtext> </mtext><mo>&lt;</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><mo>&lt;</mo><mtext> </mtext><mn>6</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">0\ &lt;  \arctan{(\frac{V_\beta}{V_\alpha})}  &lt;\ 60^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>&lt;</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">0 &lt; \frac{V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>II</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>6</mn><msup><mn>0</mn><mo>∘</mo></msup><mtext> </mtext><mo>&lt;</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><mo>&lt;</mo><mtext> </mtext><mn>12</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">60^{\circ}\ &lt;\arctan{(\frac{V_\beta}{V_\alpha})}&lt;\ 120^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.713215em;vertical-align:-0.0391em;"></span><span class="mord">6</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∥</mi><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mi mathvariant="normal">∥</mi><mo>&gt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\| \frac{V_\beta}{V_\alpha} \|&gt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord">∥</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>III</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>12</mn><msup><mn>0</mn><mo>∘</mo></msup><mtext> </mtext><mo>&lt;</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><mo>&lt;</mo><mtext> </mtext><mn>18</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">120^{\circ}\ &lt;\arctan{(\frac{V_\beta}{V_\alpha})}&lt;\ 180^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.713215em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><msqrt><mn>3</mn></msqrt><mo>&lt;</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-\sqrt{3} &lt; \frac{V_\beta}{V_\alpha}&lt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord">−</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></td>
</tr>
<tr>
<td>IV</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>18</mn><msup><mn>0</mn><mo>∘</mo></msup><mtext> </mtext><mo>&lt;</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><mo>&lt;</mo><mtext> </mtext><mn>24</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">180^{\circ}\ &lt;\arctan{(\frac{V_\beta}{V_\alpha})}&lt;\ 240^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.713215em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>&lt;</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">0 &lt; \frac{V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>V</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>24</mn><msup><mn>0</mn><mo>∘</mo></msup><mtext> </mtext><mo>&lt;</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><mo>&lt;</mo><mtext> </mtext><mn>27</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">240^{\circ}\ &lt;\arctan{(\frac{V_\beta}{V_\alpha})}&lt;\ 270^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.713215em;vertical-align:-0.0391em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∥</mi><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mi mathvariant="normal">∥</mi><mo>&gt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\| \frac{V_\beta}{V_\alpha}\| &gt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord">∥</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>VI</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>27</mn><msup><mn>0</mn><mo>∘</mo></msup><mtext> </mtext><mo>&lt;</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><mo>&lt;</mo><mtext> </mtext><mn>36</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">270^{\circ}\ &lt;\arctan{(\frac{V_\beta}{V_\alpha})}&lt;\ 360^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.713215em;vertical-align:-0.0391em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">6</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><msqrt><mn>3</mn></msqrt><mo>&lt;</mo><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-\sqrt{3} &lt; \frac{V_\beta}{V_\alpha}&lt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord">−</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></td>
</tr>
</tbody>
</table>
<br>
<p><em><strong>由波形图像可获取<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>  在各个扇区的值</strong></em></p>
<img src="https://pic.imgdb.cn/item/63958c45b1fccdcd3653cccc.png" alt="image-20221015230944109" style="zoom: 67%;" />
<br>
<p><em><strong>汇总得</strong></em></p>
<table>
<thead>
<tr>
<th>扇区</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>值</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>值</th>
<th>代入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> , 化简<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{V_\alpha}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td>I</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>II</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><mrow><mi mathvariant="normal">∥</mi><msub><mi>V</mi><mi>α</mi></msub><mi mathvariant="normal">∥</mi></mrow></mfrac><mo>&gt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{\|V_\alpha \|}&gt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5114109999999998em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∥</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>III</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><mrow><mo>−</mo><msub><mi>V</mi><mi>α</mi></msub></mrow></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{-V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>IV</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>V</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><mrow><mi mathvariant="normal">∥</mi><msub><mi>V</mi><mi>α</mi></msub><mi mathvariant="normal">∥</mi></mrow></mfrac><mo>&gt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{\|V_\alpha \|}&gt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5114109999999998em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∥</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>VI</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">V_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mo>−</mo><msub><mi>V</mi><mi>β</mi></msub></mrow><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{-V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
</tr>
</tbody>
</table>
<br>
<p><em><strong>进行不等式展开</strong></em></p>
<table>
<thead>
<tr>
<th>扇区</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>值(A相)</th>
<th>原不等式</th>
<th>展开 (B相)</th>
<th>(C相)</th>
</tr>
</thead>
<tbody>
<tr>
<td>I</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">-\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
</tr>
<tr>
<td>II</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><mrow><mi mathvariant="normal">∥</mi><msub><mi>V</mi><mi>α</mi></msub><mi mathvariant="normal">∥</mi></mrow></mfrac><mo>&gt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{\|V_\alpha\|}&gt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5114109999999998em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∥</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">-\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
</tr>
<tr>
<td>III</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">-\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
</tr>
<tr>
<td>IV</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">-\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
</tr>
<tr>
<td>V</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>V</mi><mi>β</mi></msub><mrow><mi mathvariant="normal">∥</mi><msub><mi>V</mi><mi>α</mi></msub><mi mathvariant="normal">∥</mi></mrow></mfrac><mo>&gt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{V_\beta}{\| V_\alpha \|}&gt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5114109999999998em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∥</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">-\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
</tr>
<tr>
<td>VI</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mo>−</mo><msub><mi>V</mi><mi>β</mi></msub></mrow><msub><mi>V</mi><mi>α</mi></msub></mfrac><mo>&lt;</mo><msqrt><mn>3</mn></msqrt></mrow><annotation encoding="application/x-tex">\frac{-V_\beta}{V_\alpha}&lt; \sqrt{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4365109999999999em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9914109999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.51308em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">-\frac{\sqrt{3}}{2}V_\alpha -\frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> &lt; 0</td>
</tr>
</tbody>
</table>
<blockquote>
<p>如上所示:<br />
将ABC三相在<code>α-β</code> 坐标系下 , 建立以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>轴为参考的坐标系</p>
<img src="https://pic.imgdb.cn/item/63958c45b1fccdcd3653ccd1.png" alt="image-20221016160413780" style="zoom:33%;" />
</blockquote>
<br>
<p><em><strong>新的坐标系在<code>MATLAB</code>中的仿真</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c45b1fccdcd3653ccd7.png" alt="image-20221016153027213" /></p>
<blockquote>
<p>如上所示:</p>
<ul>
<li>可以观察到 , 在每一个扇区都存在 两条曲线在 其中一侧 , 一条曲线在另一侧</li>
<li>通过判断这三条曲线 与 0的关系即可确定当前所在的扇区.</li>
</ul>
</blockquote>
<br>
<hr />
<p><span id="three" name="three"></span></p>
<h4 id="343-小结"><a class="markdownIt-Anchor" href="#343-小结"></a> 3.4.3 小结</h4>
<blockquote>
<p>通过以上的计算结论 , 可以通过以下三个数值来判断扇区。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>a</mi></msub><mo>=</mo><msub><mi>V</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>b</mi></msub><mo>=</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>V</mi><mi>c</mi></msub><mo>=</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>a</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
V_a = V_\beta \\
V_b = \frac{\sqrt{3}}{2}V_\alpha - \frac{1}{2}V_\beta\\
V_c = -\frac{\sqrt{3}}{2}V_a - \frac{1}{2}V_\beta
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.379999999999999em;vertical-align:-1.9399999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.44em;"><span style="top:-4.47em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9399999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li><em><strong>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">V_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0时</strong></em>, 令 A = 1; else A = 0;</li>
<li><em><strong>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">V_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0时</strong></em> , 令B = 1; else B = 0;</li>
<li><em><strong>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">V_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &gt; 0 时,</strong></em> 令C = 1; else C = 0;</li>
<li>且 <code>N = 4C + 2B + A</code> ,</li>
<li>通过N , 与各个扇区进行 <em><strong>唯一的对应</strong></em>  , 且对ABC 三相利用一个 <em><strong>二进制数字</strong></em> 进行表示</li>
</ul>
</blockquote>
<br> 
<table>
<thead>
<tr>
<th>扇区</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>a</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">-\frac{\sqrt{3}}{2}V_a - \frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>  ( C)</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>V</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">\frac{\sqrt{3}}{2}V_\alpha - \frac{1}{2}V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> (B)</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">V_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> (A)</th>
<th>N=4C+2B+A</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>I</strong></td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>3</td>
</tr>
<tr>
<td><strong>II</strong></td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td><strong>III</strong></td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>5</td>
</tr>
<tr>
<td><strong>IV</strong></td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>4</td>
</tr>
<tr>
<td><strong>V</strong></td>
<td>1</td>
<td>1</td>
<td>0</td>
<td>6</td>
</tr>
<tr>
<td><strong>VI</strong></td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>2</td>
</tr>
</tbody>
</table>
<BR>
<hr />
<h3 id="35-电压利用率"><a class="markdownIt-Anchor" href="#35-电压利用率"></a> 3.5 电压利用率</h3>
<blockquote>
<p><em><strong>结论放前面:</strong></em>  SVPWM的<strong>电压利用率是100%</strong></p>
</blockquote>
<br>
<h4 id="351-公式与结论"><a class="markdownIt-Anchor" href="#351-公式与结论"></a> 3.5.1 公式与结论</h4>
<p><em><strong>首先电压利用率的公式:</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi mathvariant="normal">直</mi><mi mathvariant="normal">流</mi><mi mathvariant="normal">母</mi><mi mathvariant="normal">线</mi><mi mathvariant="normal">电</mi><mi mathvariant="normal">压</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">输</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">线</mi><mi mathvariant="normal">电</mi><mi mathvariant="normal">压</mi><mi mathvariant="normal">幅</mi><mi mathvariant="normal">值</mi></mrow><mrow><mi mathvariant="normal">直</mi><mi mathvariant="normal">流</mi><mi mathvariant="normal">母</mi><mi mathvariant="normal">线</mi><mi mathvariant="normal">电</mi><mi mathvariant="normal">压</mi></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(公式1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">直流母线电压利用率 = \frac{输出线电压幅值}{直流母线电压} \tag{公式1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">流</span><span class="mord cjk_fallback">母</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">流</span><span class="mord cjk_fallback">母</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span><span class="mord cjk_fallback">幅</span><span class="mord cjk_fallback">值</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:1.436em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">式</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p><em><strong>前面提到ABC三相电压空间矢量</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>a</mi></msub><mo>=</mo><msub><mi>U</mi><mi>m</mi></msub><mtext> </mtext><mo>×</mo><mtext> </mtext><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>b</mi></msub><mo>=</mo><msub><mi>U</mi><mi>m</mi></msub><mtext> </mtext><mo>×</mo><mtext> </mtext><mi>cos</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mi>θ</mi><mtext> </mtext><mo>−</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi><mo stretchy="false">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>b</mi></msub><mo>=</mo><msub><mi>U</mi><mi>m</mi></msub><mtext> </mtext><mo>×</mo><mtext> </mtext><mi>cos</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mi>θ</mi><mtext> </mtext><mo>+</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>π</mi><mo stretchy="false">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
U_a = U_m\  \times \ \cos{\theta} \\
U_b = U_m\  \times \ \cos{(\theta\ - \frac{2}{3}\pi)}\\
U_b = U_m\  \times \ \cos{(\theta\ + \frac{2}{3}\pi)}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<p><em><strong>三相电压合成的空间矢量(即输出电压)</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>U</mi><mo>=</mo><msub><mi>U</mi><mi>a</mi></msub><mtext> </mtext><mo>+</mo><msub><mi>U</mi><mi>b</mi></msub><mo>⋅</mo><msup><mi>e</mi><mrow><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mn>3</mn></mfrac></mrow></msup><mtext> </mtext><mo>+</mo><msub><mi>U</mi><mi>c</mi></msub><mo>⋅</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mn>3</mn></mfrac></mrow></msup><mtext> </mtext><mo>=</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>m</mi></msub><mo>⋅</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>θ</mi></mrow></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(结论1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">U = U_a \ +U_b\cdot e^{j\frac{2\pi}{3}} \ +U_c\cdot e^{-j\frac{2\pi}{3}}\ =
\frac{3}{2}U_m\cdot e^{j\theta}\tag{结论1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.08735em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0040200000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">论</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<blockquote>
<p><font face="华文彩云" color=red size=5>小结：</font ></p>
<ul>
<li>可以看到 , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 是一个幅值为<strong>相电压峰值1.5倍</strong>的旋转空间矢量</li>
<li>且空间矢量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>在三相坐标轴 (a , b , c)上投影是对称的 <em><strong>三相正弦量</strong></em></li>
</ul>
</blockquote>
<br>
<p><em><strong>合成空间矢量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>的推导过程 (记住结论就行 , 过程随便看看)</strong></em></p>
<img src="https://pic.imgdb.cn/item/63958c45b1fccdcd3653cce4.png" alt="image-20221017222645146" style="zoom: 20%;" />
<br>
<hr />
<h4 id="352-小结"><a class="markdownIt-Anchor" href="#352-小结"></a> 3.5.2 小结</h4>
<ul>
<li>
<p>三相正弦电压<strong>合成的空间矢量</strong>的幅值是相电压幅值的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>3</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>倍</p>
</li>
<li>
<p>三相的相电压幅值最高为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>2</mn><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mrow><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2U_{dc}}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.239191em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.894191em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> (怎么来的可以看前面提到的这个<a href="#two">表格</a>)</p>
</li>
<li>
<p>所以合成矢量电压幅值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><mo>=</mo><mfrac><mrow><mn>2</mn><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mrow><mn>3</mn></mfrac><mtext> </mtext><mo>×</mo><mtext> </mtext><mfrac><mn>3</mn><mn>2</mn></mfrac><mtext> </mtext><mo>=</mo><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U =\frac{2U_{dc}}{3}\ \times\ \frac{3}{2}\ = U_{dc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.239191em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.894191em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>代入 <strong>(公式1)</strong> 得 , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">直</mi><mi mathvariant="normal">流</mi><mi mathvariant="normal">母</mi><mi mathvariant="normal">线</mi><mi mathvariant="normal">电</mi><mi mathvariant="normal">压</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>=</mo><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">直流母线电压利用率 = \frac{U_{dc}}{U_{dc}} = 100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">流</span><span class="mord cjk_fallback">母</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3450509999999998em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.894191em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span></p>
<br>
</li>
</ul>
<hr />
<h3 id="36-矢量作用时间计算"><a class="markdownIt-Anchor" href="#36-矢量作用时间计算"></a> 3.6 矢量作用时间计算</h3>
<h4 id="361-第一扇区"><a class="markdownIt-Anchor" href="#361-第一扇区"></a> 3.6.1 第一扇区</h4>
<img src="https://pic.imgdb.cn/item/63958c45b1fccdcd3653cce9.png" alt="image-20221024223117346" style="zoom:33%;" />
<br>
<ul>
<li><em><strong>已知条件</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mn>4</mn></msub><mo fence="true">∣</mo></mrow><mo>=</mo><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mn>6</mn></msub><mo fence="true">∣</mo></mrow><mo>=</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>U</mi><mn>4</mn></msub><mo>⋅</mo><msub><mi>T</mi><mn>4</mn></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>U</mi><mn>6</mn></msub><mo>⋅</mo><msub><mi>T</mi><mn>6</mn></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>U</mi><mn>0</mn></msub><mo>⋅</mo><msub><mi>T</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo>=</mo><msub><mi>U</mi><mi>α</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>×</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mo>=</mo><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
\left |U_4 \right | = \left | U_6\right | = \frac{2}{3}\left | U_{dc}\right | \\
\ \\
U_{ref}\cdot T_s \ = \ U_4\cdot T_4\ +\ U_6\cdot T_6\ +\ U_0\cdot T_0 \\
\\
U_{ref}\times \cos{\theta} =  U_\alpha \\
\\
U_{ref}\times \sin{\theta} =  U_\beta 
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.080000000000002em;vertical-align:-4.790000000000001em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.050019999999998em;"><span style="top:0.5000100000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:0.5000100000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:0.20001000000000024em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.09998999999999958em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.3999899999999994em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.6999899999999992em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.999989999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.299989999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.5999899999999991em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8999899999999992em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1999899999999992em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500099999999995em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.300009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.600009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.900009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.8000099999999986em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.400009999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.700009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-7.000009999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-7.300019999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.290000000000002em;"><span style="top:-7.290000000000003em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-5.850000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span></span></span><span style="top:-4.410000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9700000000000015em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.5300000000000011em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:1.350000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.790000000000001em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<ul>
<li><em><strong>将目标矢量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>  投影到相邻两个矢量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mn>4</mn></msub><mi mathvariant="normal">和</mi><msub><mi>U</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">U_4和U_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo>=</mo><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mn>4</mn></msub><mo fence="true">∣</mo></mrow><mo>×</mo><mfrac><msub><mi>T</mi><mn>4</mn></msub><msub><mi>T</mi><mi>s</mi></msub></mfrac><mo>+</mo><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mn>6</mn></msub><mo fence="true">∣</mo></mrow><mo>×</mo><mfrac><msub><mi>T</mi><mn>6</mn></msub><msub><mi>T</mi><mi>s</mi></msub></mfrac><mo>×</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>×</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mo>=</mo><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mn>6</mn></msub><mo fence="true">∣</mo></mrow><mo>×</mo><mfrac><msub><mi>T</mi><mn>6</mn></msub><msub><mi>T</mi><mi>s</mi></msub></mfrac><mo>×</mo><mi>sin</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
U_{ref}\times \cos{\theta} = \left | U_4\right | \times \frac{T_4}{T_s} + \left | U_6\right | \times \frac{T_6}{T_s}\times\cos{\frac{\pi}{3}}\\
\ \\
 U_{ref} \times \sin{\theta} = \left | U_6\right | \times \frac{T_6}{T_s}\times\sin{\frac{\pi}{3}}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.3462em;vertical-align:-1.9231000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4231em;"><span style="top:-4.4231em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span></span></span><span style="top:-1.5299999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9231000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<ul>
<li><em><strong>代入已知条件得</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub><mo>=</mo><mtext> </mtext><mfrac><mn>2</mn><mn>3</mn></mfrac><mo>⋅</mo><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>T</mi><mn>4</mn></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><msub><mi>T</mi><mn>6</mn></msub><mo>⋅</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>β</mi></msub><mtext> </mtext><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub><mo>=</mo><mtext> </mtext><mfrac><mn>2</mn><mn>3</mn></mfrac><mo>⋅</mo><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub><mo>⋅</mo><msub><mi>T</mi><mn>6</mn></msub><mo>⋅</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
U_\alpha\ \cdot T_s= \ \frac{2}{3}\cdot U_{dc}(T_4\ +\ T_6\cdot\frac{1}{2})\\
\\
U_\beta\ \cdot T_s=\ \frac{2}{3}\cdot U_{dc}\cdot T_6\cdot \frac{\sqrt{3}}{2}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.35em;vertical-align:-1.9249999999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.425em;"><span style="top:-4.455em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-3.0149999999999997em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"></span></span><span style="top:-1.545em;"><span class="pstrut" style="height:3.038em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9249999999999998em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<ul>
<li><em><strong>整理解得</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>6</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>4</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>0</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>T</mi><mi>s</mi></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>6</mn></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>4</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
T_6\ = \ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta\\
\\
T_4\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}(\frac{\sqrt{3}}{2}U_\alpha\ -\ \frac{1}{2}U_\beta)\\
\\
T_0\ =\ T_s\ -\ T_6\ -\ T_4
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.319903em;vertical-align:-3.4099514999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9099515em;"><span style="top:-5.909951499999999em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.4510915em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.5111400000000006em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-0.07114000000000031em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4099514999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h4 id="362-第二扇区"><a class="markdownIt-Anchor" href="#362-第二扇区"></a> 3.6.2 第二扇区</h4>
<img src="https://pic.imgdb.cn/item/63958c4ab1fccdcd3653d278.png" alt="image-20221024223134420" style="zoom: 50%;" />
<blockquote>
<p>注意此时的角度定义</p>
</blockquote>
<br>
<ul>
<li><em><strong>将目标矢量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>  投影到相邻两个矢量$U_6 $ 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">U_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>θ</mi><mtext> </mtext><mo>−</mo><mtext> </mtext><mfrac><mi>π</mi><mn>3</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mn>6</mn></msub><mo fence="true">∣</mo></mrow><mo>×</mo><mfrac><msub><mi>T</mi><mn>6</mn></msub><msub><mi>T</mi><mi>s</mi></msub></mfrac><mo>+</mo><mrow><mo fence="true">∣</mo><msub><mi>U</mi><mn>2</mn></msub><mo fence="true">∣</mo></mrow><mo>×</mo><mfrac><msub><mi>T</mi><mn>2</mn></msub><msub><mi>T</mi><mi>s</mi></msub></mfrac><mo>×</mo><mi>cos</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>×</mo><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>θ</mi><mtext> </mtext><mo>−</mo><mtext> </mtext><mfrac><mi>π</mi><mn>3</mn></mfrac><mo stretchy="false">)</mo><mtext> </mtext><mo>=</mo><mtext> </mtext><mi mathvariant="normal">∣</mi><msub><mi>U</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mtext> </mtext><mo>×</mo><mtext> </mtext><mfrac><msub><mi>T</mi><mn>2</mn></msub><msub><mi>T</mi><mi>s</mi></msub></mfrac><mtext> </mtext><mo>×</mo><mtext> </mtext><mi>sin</mi><mo>⁡</mo><mfrac><mi>π</mi><mn>3</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
U_{ref}\times \cos({\theta}\ -\ \frac{\pi}{3}) = \left | U_6\right | \times \frac{T_6}{T_s} + \left | U_2\right | \times \frac{T_2}{T_s}\times\cos{\frac{\pi}{3}}\\
\\
U_{ref}\times \sin({\theta}\ -\ \frac{\pi}{3})\ =\ |U_2|\ \times\ \frac{T_2}{T_s}\ \times\ \sin{\frac{\pi}{3}}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.3462em;vertical-align:-1.9231000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4231em;"><span style="top:-4.4231em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.5299999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9231000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<ul>
<li><em><strong>最终整理解得</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>2</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>6</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>0</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>T</mi><mi>s</mi></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>2</mn></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>6</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
T_2\ = \ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(-\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta) \\
\\
T_6\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}(\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)\\
\\
T_0\ =\ T_s\ -\ T_2\ -\ T_6
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.319903em;vertical-align:-3.4099514999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9099515em;"><span style="top:-5.909951499999999em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.4510915em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.5111400000000006em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-0.07114000000000031em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4099514999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h4 id="363-第三到第六扇区"><a class="markdownIt-Anchor" href="#363-第三到第六扇区"></a> 3.6.3 第三到第六扇区</h4>
<blockquote>
<p>计算方法与上面都是一样的, 直接给出最终结果</p>
</blockquote>
<br>
<ul>
<li><em><strong>第三扇区</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>3</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>2</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>0</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>2</mn></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>3</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
T_3\ =\ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta) \\
\\
T_2\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta\\
\\
T_0\ = \ T_s-\ T_2\ -\ T_3
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.319903em;vertical-align:-3.4099514999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9099515em;"><span style="top:-5.909951499999999em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.4510915em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5111400000000006em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-0.07114000000000031em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4099514999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<ul>
<li><em><strong>第四扇区</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>1</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>3</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>0</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>1</mn></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>3</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
T_1\ =\ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta \\
\\
T_3\ = \ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(-\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta) \\
\\
T_0\ = \ T_s-\ T_1\ -\ T_3
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.319903em;vertical-align:-3.4099514999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9099515em;"><span style="top:-5.909951499999999em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.4510915em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.5111400000000006em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-0.07114000000000031em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4099514999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<ul>
<li><em><strong>第五扇区</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>5</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>1</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>0</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>1</mn></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>5</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
T_5\ =\ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot (-\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta) \\
\\
T_1\ = \ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta) \\
\\
T_0\ = \ T_s-\ T_1\ -\ T_5
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.319903em;vertical-align:-3.4099514999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9099515em;"><span style="top:-5.909951499999999em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.4510915em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.5111400000000006em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-0.07114000000000031em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4099514999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<ul>
<li><em><strong>第六扇区</strong></em></li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>4</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>5</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>T</mi><mn>0</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>4</mn></msub><mtext> </mtext><mo>−</mo><mtext> </mtext><msub><mi>T</mi><mn>5</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
T_4\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot (\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta) \\
\\
T_5\ = \ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta \\
\\
T_0\ = \ T_s-\ T_4\ -\ T_5
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.319903em;vertical-align:-3.4099514999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9099515em;"><span style="top:-5.909951499999999em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.4510915em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5111400000000006em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-0.07114000000000031em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4099514999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h4 id="364-小结"><a class="markdownIt-Anchor" href="#364-小结"></a> 3.6.4 小结</h4>
<br>
<blockquote>
<p>设每个扇区中先作用的矢量为Tx , 后作用的矢量为Ty</p>
</blockquote>
<table>
<thead>
<tr>
<th>扇区</th>
<th>N</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">T_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">T_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td><em><strong>I</strong></em></td>
<td><em><strong>N = 3</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>4</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_4\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}(\frac{\sqrt{3}}{2}U_\alpha-\frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>6</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">T_6\ = \ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td><em><strong>II</strong></em></td>
<td><em><strong>N = 1</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_2\ = \ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(-\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>6</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_6\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}(\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>III</strong></em></td>
<td><em><strong>N = 5</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">T_2\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>3</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_3\ =\ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>IV</strong></em></td>
<td><em><strong>N = 4</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">T_1\ =\ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>3</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_3\ = \ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(-\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>V</strong></em></td>
<td><em><strong>N = 6</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_1\ = \ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot(\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>5</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_5\ =\ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot (-\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>VI</strong></em></td>
<td><em><strong>N = 2</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>4</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_4\ =\ \frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot (\frac{\sqrt{3}}{2}U_\alpha\ +\ \frac{1}{2}U_\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3829999999999998em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>5</mn></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo>−</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac><mo>⋅</mo><msub><mi>U</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">T_5\ = \ -\frac{\sqrt{3}\cdot T_s}{U_{dc}}\cdot U_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></td>
</tr>
</tbody>
</table>
<br>
<p><font face="华文彩云" color=red size=5>补充：</font ></p>
<blockquote>
<ul>
<li>
<p>可以看到 , 整理出来的作用时间的表达式 与 之前<a href="#three">扇区判断</a>中 <em><strong>三相电压</strong></em> 表达式类似</p>
</li>
<li>
<p>可以进一步整理 , 方便后续与代码中的部分对应起来</p>
</li>
<li>
<p>假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>=</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">K= \frac{\sqrt{3}\cdot T_s}{U_{dc}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4999514999999999em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>a</mi></msub><mo>=</mo><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>b</mi></msub><mo>=</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>α</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>U</mi><mi>c</mi></msub><mo>=</mo><mo>−</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><msub><mi>U</mi><mi>a</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi>U</mi><mi>β</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>K</mi><mo>=</mo><mfrac><mrow><msqrt><mn>3</mn></msqrt><mo>⋅</mo><msub><mi>T</mi><mi>s</mi></msub></mrow><msub><mi>U</mi><mrow><mi>d</mi><mi>c</mi></mrow></msub></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
U_a = U_\beta \\\\
U_b = \frac{\sqrt{3}}{2}U_\alpha - \frac{1}{2}U_\beta\\\\
U_c = -\frac{\sqrt{3}}{2}U_a - \frac{1}{2}U_\beta\\\\
K= \frac{\sqrt{3}\cdot T_s}{U_{dc}}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.200039999999998em;vertical-align:-4.85002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.350019999999998em;"><span style="top:0.8000099999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:0.8000099999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:0.5000100000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:0.20001000000000024em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.09998999999999958em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.3999899999999994em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.6999899999999992em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.999989999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.299989999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.5999899999999991em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8999899999999992em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1999899999999992em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500099999999995em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.300009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.600009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.900009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.8000099999999986em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.400009999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.700009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-7.000009999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-7.3000099999999986em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-7.600019999999997em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.85002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.3499757500000005em;"><span style="top:-7.391067250000001em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-5.951067250000001em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-4.481067250000001em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0410672500000007em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:-1.571067250000001em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0379999999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3990085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.13106724999999975em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"></span></span><span style="top:1.3500242500000006em;"><span class="pstrut" style="height:3.0490915em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0490914999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">3</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.8499757500000005em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
</blockquote>
<br>
<p><em><strong>进一步整理出下表</strong></em></p>
<table>
<thead>
<tr>
<th>扇区</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">T_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">T_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">T_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">T_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">T_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">T_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">T_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">T_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td><em><strong>I</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_4-T_6)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">K\cdot U_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">K\cdot U_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_4-T_6)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>II</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_2-T_6)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">-K\cdot U_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">-K\cdot U_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_2-T_6)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>III</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_2-T_3)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">K\cdot U_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">K\cdot U_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_2-T_3)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>IV</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_1-T_3)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">-K\cdot U_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">-K\cdot U_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_1-T_3)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>V</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_1-T_5)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">K\cdot U_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">K\cdot U_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_1-T_5)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
</tr>
<tr>
<td><em><strong>VI</strong></em></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_4-T_5)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">-K\cdot U_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>K</mi><mo>⋅</mo><msub><mi>U</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">-K\cdot U_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>0</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(T_s-T_4-T_5)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td>
</tr>
</tbody>
</table>
<hr />
<h3 id="37-七段式svpwm"><a class="markdownIt-Anchor" href="#37-七段式svpwm"></a> 3.7 七段式SVPWM</h3>
<h5 id="371矢量作用顺序"><a class="markdownIt-Anchor" href="#371矢量作用顺序"></a> 3.7.1矢量作用顺序</h5>
<blockquote>
<ul>
<li>我们都知道一个任意<strong>方向和大小的矢量</strong>需要8个矢量的作用时长</li>
<li>为了确保每次在一个开关周期内, <em><strong>只改变一个桥臂的开关</strong></em> , 需要确定每个扇区内的矢量作用顺序</li>
<li>即矢量从起点到终点的路线 , 这里选用的是 <em><strong>七段式的SVPWM</strong></em></li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>以第一扇区为例：</font ></p>
<img src="https://pic.imgdb.cn/item/63958c4ab1fccdcd3653d27b.png" alt="image-20221026155400889"  />
<blockquote>
<ul>
<li>可以看到可以从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">U_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的方向开始 <em><strong>(0-4-6-7-6-4-0)</strong></em> , 也可以从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">U_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的方向开始 <em><strong>(7-6-4-0-4-6-7)</strong></em></li>
<li>两种方式唯一的不同就是零向量的插入方式不同</li>
</ul>
</blockquote>
<p><font face="华文彩云" color=red size=5>注意：</font > 不能直接先走完其中一个再走另一个 , 那样谐波比较大</p>
<br>
<p><em><strong>同样的方法可以得到其他扇区矢量作用顺序</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c4ab1fccdcd3653d27f.png" alt="image-20221026164413339" /></p>
<br>
<hr />
<h5 id="372-矢量切换时间"><a class="markdownIt-Anchor" href="#372-矢量切换时间"></a> 3.7.2 矢量切换时间</h5>
<blockquote>
<ul>
<li>在知道了矢量的作用顺序之后 , 就可以把矢量的作用时间换成 <em><strong>桥臂的开关时间</strong></em></li>
<li>即可以确定A、B、C三相 <em><strong>桥臂的切换时间点</strong></em></li>
</ul>
</blockquote>
<h6 id="3721-第一扇区"><a class="markdownIt-Anchor" href="#3721-第一扇区"></a> 3.7.2.1 第一扇区</h6>
<p><font face="华文彩云" color=red size=5>还是以第一扇区为例：</font ></p>
<p><em><strong>简单计算确定，七段SVPWM每段的作用时长 ;</strong></em></p>
<p><em><strong>(0-4-6-7-6-4-0)矢量持续时间如下图所示</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c4ab1fccdcd3653d286.png" alt="image-20221026170331272" /></p>
<br>
<blockquote>
<ul>
<li>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">S_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">S_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">S_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 分别是三相桥臂的开关状态</li>
<li>各段的作用时间分别是(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac><mi mathvariant="normal">、</mi><mfrac><msub><mi>T</mi><mn>4</mn></msub><mn>2</mn></mfrac><mi mathvariant="normal">、</mi><mfrac><msub><mi>T</mi><mn>6</mn></msub><mn>2</mn></mfrac><mi mathvariant="normal">、</mi><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>2</mn></mfrac><mi mathvariant="normal">、</mi><mfrac><msub><mi>T</mi><mn>6</mn></msub><mn>2</mn></mfrac><mi mathvariant="normal">、</mi><mfrac><msub><mi>T</mi><mn>4</mn></msub><mn>2</mn></mfrac><mi mathvariant="normal">、</mi><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{T_s-T_4-T_6}{4}、\frac{T_4}{2}、\frac{T_6}{2}、\frac{T_s-T_4-T_6}{2}、\frac{T_6}{2}、\frac{T_4}{2}、\frac{T_s-T_4-T_6}{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.233431em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>)</li>
</ul>
</blockquote>
<br>
<p><em><strong>由上图可以看出, 三相桥臂的切换时间(送入定时器的比较值)</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>a</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>b</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac><mo>+</mo><mfrac><msub><mi>T</mi><mn>4</mn></msub><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>c</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac><mo>+</mo><mfrac><msub><mi>T</mi><mn>4</mn></msub><mn>2</mn></mfrac><mo>+</mo><mfrac><msub><mi>T</mi><mn>6</mn></msub><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>4</mn></msub><mo>+</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
S_a切换时间 = \frac{T_s-T_4-T_6}{4} \\
\\
S_b切换时间= \frac{T_s-T_4-T_6}{4}+\frac{T_4}{2}=\frac{T_s+T_4-T_6}{4}\\
\\
S_c切换时间=\frac{T_s-T_4-T_6}{4}+\frac{T_4}{2}+\frac{T_6}{2}=\frac{T_s+T_4+T_6}{4}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h6 id="3722-第二扇区"><a class="markdownIt-Anchor" href="#3722-第二扇区"></a> 3.7.2.2 第二扇区</h6>
<p><img src="https://pic.imgdb.cn/item/63958c4ab1fccdcd3653d294.png" alt="image-20221026171916073" /></p>
<p><em><strong>桥臂切换时间</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>a</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>b</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>c</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>2</mn></msub><mo>+</mo><msub><mi>T</mi><mn>6</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
S_a切换时间 = \frac{T_s+T_2-T_6}{4} \\
\\
S_b切换时间= \frac{T_s-T_2-T_6}{4}\\
\\
S_c切换时间=\frac{T_s+T_2+T_6}{4}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h6 id="3723-第三扇区"><a class="markdownIt-Anchor" href="#3723-第三扇区"></a> 3.7.2.3 第三扇区</h6>
<p><img src="https://pic.imgdb.cn/item/63958c4bb1fccdcd3653d428.png" alt="image-20221026172600625" /></p>
<p><em><strong>桥臂切换时间</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>a</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>2</mn></msub><mo>+</mo><msub><mi>T</mi><mn>3</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>b</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>c</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
S_a切换时间 = \frac{T_s+T_2+T_3}{4} \\
\\
S_b切换时间= \frac{T_s-T_2-T_3}{4}\\
\\
S_c切换时间=\frac{T_s+T_2-T_3}{4}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h6 id="3724-第四扇区"><a class="markdownIt-Anchor" href="#3724-第四扇区"></a> 3.7.2.4 第四扇区</h6>
<p><img src="https://pic.imgdb.cn/item/63958c4bb1fccdcd3653d42d.png" alt="image-20221026172841132" /></p>
<p><em><strong>桥臂切换时间</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>a</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>1</mn></msub><mo>+</mo><msub><mi>T</mi><mn>3</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>b</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>c</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
S_a切换时间 = \frac{T_s+T_1+T_3}{4} \\
\\
S_b切换时间= \frac{T_s+T_1-T_3}{4}\\
\\
S_c切换时间=\frac{T_s-T_1-T_3}{4}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h6 id="3725-第五扇区"><a class="markdownIt-Anchor" href="#3725-第五扇区"></a> 3.7.2.5 第五扇区</h6>
<p><em><strong>(0-1-5-7-7-5-1-0)</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c4bb1fccdcd3653d435.png" alt="image-20221026173223407" /></p>
<p><em><strong>桥臂切换时间</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>a</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>b</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>1</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>c</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
S_a切换时间 = \frac{T_s+T_1-T_5}{4} \\
\\
S_b切换时间= \frac{T_s+T_1+T_5}{4}\\
\\
S_c切换时间=\frac{T_s-T_1-T_5}{4}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h6 id="3726-第六扇区"><a class="markdownIt-Anchor" href="#3726-第六扇区"></a> 3.7.2.6 第六扇区</h6>
<p><em><strong>(0-4-5-7–7-5-4-0)</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c4bb1fccdcd3653d43e.png" alt="image-20221026173359789" /></p>
<p><em><strong>桥臂切换时间</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>a</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>b</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>4</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mi>c</mi></msub><mi mathvariant="normal">切</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>5</mn></msub></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
S_a切换时间 = \frac{T_s-T_4-T_5}{4} \\
\\
S_b切换时间= \frac{T_s+T_4+T_5}{4}\\
\\
S_c切换时间=\frac{T_s+T_4-T_5}{4}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.2000399999999996em;vertical-align:-3.3500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500199999999998em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9999899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.29999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.200010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.100019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>
<hr />
<h3 id="38-matlab仿真"><a class="markdownIt-Anchor" href="#38-matlab仿真"></a> 3.8 MATLAB仿真</h3>
<h4 id="381-svpwm模块与函数代码"><a class="markdownIt-Anchor" href="#381-svpwm模块与函数代码"></a> 3.8.1 svpwm模块与函数代码</h4>
<h5 id="3811-仿真框图"><a class="markdownIt-Anchor" href="#3811-仿真框图"></a> 3.8.1.1 仿真框图</h5>
<p><img src="https://pic.imgdb.cn/item/63958c4bb1fccdcd3653d448.png" alt="image-20221030203017724" /></p>
<p><font face="华文彩云" color=red size=5>如图所示：</font ></p>
<ul>
<li>输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>d</mi></msub><mi mathvariant="normal">和</mi><msub><mi>V</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">V_d和V_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的 <em><strong>期望</strong></em> 以及角度信息</li>
<li>经过 <em><strong>反park变换</strong></em> 和  <em><strong>svpwm运算模块</strong></em> 后 输出三相桥臂的 <em><strong>切换时间</strong></em></li>
</ul>
<br>
<h5 id="3812-代码实现"><a class="markdownIt-Anchor" href="#3812-代码实现"></a> 3.8.1.2 代码实现</h5>
<blockquote>
<p>将前面<strong>扇区判断</strong>, <strong>矢量作用时长</strong>计算的公式结果写入代码即可</p>
</blockquote>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%输入输出</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[T_Sa,T_Sb,T_Sc,sector]</span> = <span class="title">fsvpwm</span><span class="params">(V_alpha,V_beta,Udc,Tpwm)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">%输出全部转换为单精度浮点型</span></span><br><span class="line">sector = single(<span class="number">0</span>);         <span class="comment">%扇区N值</span></span><br><span class="line">T_Sa = single(<span class="number">0</span>);           <span class="comment">%桥臂切换时间</span></span><br><span class="line">T_Sb = single(<span class="number">0</span>);           <span class="comment">%桥臂切换时间</span></span><br><span class="line">T_Sc = single(<span class="number">0</span>);           <span class="comment">%桥臂切换时间</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%========中间变量(用于判断扇区与矢量作用时间)================</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">%用于判断扇区</span></span><br><span class="line">    Vref1 = V_beta;							          <span class="comment">%A         </span></span><br><span class="line">    Vref2 = (<span class="built_in">sqrt</span>(<span class="number">3</span>)*V_alpha - V_beta)/<span class="number">2</span>;             <span class="comment">%B	    </span></span><br><span class="line">    Vref3 = (-<span class="built_in">sqrt</span>(<span class="number">3</span>)*V_alpha - V_beta)/<span class="number">2</span>;            <span class="comment">%C</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">%用于计算矢量作用时长</span></span><br><span class="line">    K = <span class="built_in">sqrt</span>(<span class="number">3</span>)*Tpwm/Udc;   </span><br><span class="line">    </span><br><span class="line">    X = K*Vref1;                </span><br><span class="line">    Y = K*Vref2;</span><br><span class="line">    Z = K*Vref3;</span><br><span class="line">    </span><br><span class="line"><span class="comment">%==========扇区判断================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% N = 4C + 2B + A</span></span><br><span class="line">  <span class="keyword">if</span> (Vref1&gt;<span class="number">0</span>)</span><br><span class="line">	   sector = single(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> (Vref2&gt;<span class="number">0</span>)</span><br><span class="line">	   sector = sector+single(<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> (Vref3&gt;<span class="number">0</span>)</span><br><span class="line">       sector = sector+single(<span class="number">4</span>);</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="comment">%======== 矢量作用时间计算 ===================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 设每个扇区中先作用的矢量为Tx , 后作用的矢量为Ty</span></span><br><span class="line"><span class="keyword">switch</span> (sector)   </span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span></span><br><span class="line">        Tx = -Y; Ty = -Z;           <span class="comment">%第二扇区</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span></span><br><span class="line">        Tx = -Z; Ty = -X;           <span class="comment">%第六扇区</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span></span><br><span class="line">        Tx = Y; Ty = X;             <span class="comment">%第一扇区</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span></span><br><span class="line">        Tx = -X; Ty = -Y;           <span class="comment">%第四扇区</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">5</span>  </span><br><span class="line">        Tx = X; Ty = Z;             <span class="comment">%第三扇区</span></span><br><span class="line">    <span class="keyword">otherwise</span></span><br><span class="line">        Tx = Z; Ty = Y;             <span class="comment">%第五扇区</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%防止过调制,采用比例缩小的方法 (确保Tx + Ty 不超过Tpwm)</span></span><br><span class="line"><span class="keyword">if</span> Tx+Ty &gt; Tpwm        </span><br><span class="line">    Tx = Tx*Tpwm/(Tx+Ty);</span><br><span class="line">    Ty = Ty*Tpwm/(Tx+Ty);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    Tx = Tx;</span><br><span class="line">    Ty = Ty;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%==========桥臂切换时间计算================</span></span><br><span class="line"></span><br><span class="line">ta = (Tpwm-(Tx+Ty))/<span class="number">4.0</span>;</span><br><span class="line">tb = ta+Tx/<span class="number">2</span>;</span><br><span class="line">tc = tb+Ty/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (sector)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>                  <span class="comment">%第二扇区</span></span><br><span class="line">        T_Sa=tb;</span><br><span class="line">        T_Sb=ta;</span><br><span class="line">        T_Sc=tc; </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>                  <span class="comment">%第六扇区</span></span><br><span class="line">        T_Sa=ta;</span><br><span class="line">        T_Sb=tc;</span><br><span class="line">        T_Sc=tb; </span><br><span class="line">       </span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>                  <span class="comment">%第一扇区</span></span><br><span class="line">        T_Sa=ta;</span><br><span class="line">        T_Sb=tb;</span><br><span class="line">        T_Sc=tc; </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>                  <span class="comment">%第四扇区</span></span><br><span class="line">        T_Sa=tc;</span><br><span class="line">        T_Sb=tb;</span><br><span class="line">        T_Sc=ta;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>                  <span class="comment">%第三扇区</span></span><br><span class="line">        T_Sa=tc;</span><br><span class="line">        T_Sb=ta;</span><br><span class="line">        T_Sc=tb;</span><br><span class="line">        </span><br><span class="line">   <span class="keyword">case</span> <span class="number">6</span>                   <span class="comment">%第五扇区</span></span><br><span class="line">       T_Sa=tb;</span><br><span class="line">       T_Sb=tc;</span><br><span class="line">       T_Sc=ta;</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="3813-仿真结果"><a class="markdownIt-Anchor" href="#3813-仿真结果"></a> 3.8.1.3 仿真结果</h5>
<img src="https://pic.imgdb.cn/item/63958c4db1fccdcd3653d67c.png" alt="image-20221030210955136" style="zoom:50%;" />
<br>
<p><em><strong>调制波形与扇区波形</strong></em></p>
<img src="https://pic.imgdb.cn/item/63958c4db1fccdcd3653d681.png" alt="image-20221030211914632" style="zoom:67%;" />
<br>
<p><em><strong>如图所示</strong></em></p>
<blockquote>
<ul>
<li>因为内部中点电位随零序波动，SVPWM模块调制后的波形是马鞍波</li>
<li>各个扇区对应的调制波形 , 符合之前的计算结果</li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="382-开环电机驱动仿真"><a class="markdownIt-Anchor" href="#382-开环电机驱动仿真"></a> 3.8.2 开环电机驱动仿真</h4>
<blockquote>
<p>通过之前的 <em><strong>坐标变换</strong></em> 和 <em><strong>svpwm模块</strong></em>  , 现在已经可以实现开环驱动电机转动</p>
</blockquote>
<h5 id="3821-仿真框图"><a class="markdownIt-Anchor" href="#3821-仿真框图"></a> 3.8.2.1 仿真框图</h5>
<blockquote>
<p><em><strong>控制流程</strong></em></p>
<ul>
<li>输入期望值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mi>d</mi></msub><mi mathvariant="normal">和</mi><msub><mi>U</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">U_d和U_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> , 通过 <strong>svpwm模块</strong> 进行调制 , 输出三相 <strong>桥臂切换时间</strong></li>
<li>输入模拟的定时器,  输出<strong>三相互补的六路pwm</strong></li>
<li>送入全桥, 驱动电机</li>
</ul>
</blockquote>
<p><em><strong>控制框图</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c4db1fccdcd3653d68d.png" alt="image-20221031150849186" /></p>
<p><em><strong>模拟定时器输出方波</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c4db1fccdcd3653d694.png" alt="image-20221031153653656" /></p>
<br>
<hr />
<h5 id="3822-仿真结果"><a class="markdownIt-Anchor" href="#3822-仿真结果"></a> 3.8.2.2 仿真结果</h5>
<p><em><strong>三相电流波形与速度角度波形</strong></em></p>
<img src="https://pic.imgdb.cn/item/63958c4db1fccdcd3653d6a2.png" alt="image-20221031160630150" style="zoom:67%;" />
<blockquote>
<ul>
<li>三相定子电流呈现较好的正弦特性</li>
<li>在到达给定转速后, 转速稳定</li>
</ul>
</blockquote>
<br>
<p><em><strong>三相互补六路pwm波形</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/63958c4eb1fccdcd3653d816.png" alt="image-20221031161354232" /></p>
<br>
<hr />
<h3 id="39-硬件平台"><a class="markdownIt-Anchor" href="#39-硬件平台"></a> 3.9 硬件平台</h3>
<p><img src="https://pic.imgdb.cn/item/63958c4eb1fccdcd3653d821.png" alt="image-20221031234403976" /></p>
<hr />
]]></content>
      <categories>
        <category>FOC</category>
        <category>stm32</category>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>单片机</tag>
        <tag>C语言</tag>
        <tag>驱动开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Keil调试汇总</title>
    <url>/2023/04/07/Keil%E8%B0%83%E8%AF%95%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h1 id="arm-mdk-调试汇总"><a class="markdownIt-Anchor" href="#arm-mdk-调试汇总"></a> ARM- MDK 调试汇总</h1>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.25」</em>    <em>第一版赶在回家前写出来的，可能存在问题，或链接视频失效什么的</em><br />
<br><br />
<strong>author：</strong>  <em>Y.Z.T.</em><br />
<br></p>
<p><strong>摘要：</strong>  <em>汇总在使用keil的过程中的一些调试方法</em></p>
<p><strong>简介：</strong></p>
<p><em>1️⃣前几天看哈工程直播的时候，发现他们是用的<strong>Ozone</strong>进行开发，花了点时间去简单了解了一下；</em><br />
<br><br />
<em>2️⃣发现了<strong>Ozone</strong>的调试功能是比较强的，具备了一些<strong>keil</strong>所没有的功能（如：DebugSnapshot（快照功能））,所以谁比较闲可以试一下用（<strong>VSCode 编辑代码 + Keil 编译 + Ozone 调试</strong>）来开发。</em><br />
<br><br />
<em>3️⃣但更多的，我发现<strong>Ozone</strong> 有的功能<strong>keil</strong>也基本都有，虽然很多因为硬件限制而用不了；所以我打算汇总一下keil的调试技巧 ,毕竟keil本身的调试功能是非常强的，我们平时用的很多都是比较浅的</em><br />
<br><br />
<em>4️⃣ 本篇文章的内容来自笔者的调试经验及网络，<strong>受限于硬件</strong>笔者并未全部尝试过，仅<strong>意在抛砖引玉</strong>。借用蔡老板一句话：</em> <font face="华文行楷" color=black size=4> “不要老是说什么学这个没用，我用keil就行了，不要搞那种奇奇怪怪的开发方式，有些东西就是得尝试一下”</font></p>
</blockquote>
<span id="more"></span>
<p><font face="华文彩云" color=red size=5> 特别注意：本文档可能并不完善，欢迎各位进行补充。</font></p>
<br>
<br>
<p>相关代码、资料、本文档源文件已放入 <em><strong>GitHub</strong></em>   需要修改的可以，自行下载源文件。</p>
<p>👇</p>
<p><a href="https://github.com/ye2020/ARM-MDK-Debug-collect">项目地址</a></p>
<hr />
<h2 id="️-前言"><a class="markdownIt-Anchor" href="#️-前言"></a> ❗️ 前言</h2>
<p><strong>接下来的调试介绍大概分成以下几个部分：</strong></p>
<ul>
<li>
<pre><code>基础调试
</code></pre>
</li>
<li>
<pre><code>具体调试
</code></pre>
</li>
<li>⭐️ITM程序跟踪</li>
<li>
<pre><code> 其他调试工具
</code></pre>
</li>
</ul>
<h3 id="测试环境"><a class="markdownIt-Anchor" href="#测试环境"></a> 测试环境</h3>
<blockquote>
<p><strong>开发板：</strong>             <em>ACE实验室F4工程板   //   正点原子精英板   // ACE实验室H7通用板</em></p>
<blockquote>
<p><strong>主控芯片：</strong>	<em>STM32F407VET6  // STM32F103ZET6   // STM32H750VBT6</em></p>
</blockquote>
<blockquote>
<p><strong>CPU：</strong>			<em>Cortex-M4  // Cortex-M3   //  Cortex-M7</em></p>
</blockquote>
<blockquote>
<p><strong>最高主频：</strong>     <em>168MHZ   // 72MHZ  // 480MHZ</em></p>
</blockquote>
<br>
<p><strong>测试程序：</strong>     			  <em>[debug_testF407]</em>  / <em>[debug_testH750_v1.3.5]</em></p>
<blockquote>
<p><strong>FreeRTOS版本：</strong> <em>v10.3.1</em></p>
</blockquote>
<blockquote>
<p><strong>FreeRTOS说明：</strong>  <em>FreeRTOS为STM32CubeMX配置的未修改版本。</em></p>
</blockquote>
<br>
<p><strong>开发平台：</strong>	    <em>VSCODE、MDK-ARM</em></p>
<blockquote>
<p><strong>程序编辑：</strong>    <em>VSCODE</em></p>
</blockquote>
<blockquote>
<p><strong>程序调试：</strong>     <em>MDK-ARM     [ v 5.35.0.2]</em></p>
</blockquote>
<br>
<p><strong>调试设备：</strong>			<em>J-Link仿真器 ：    [ACE - Sentry-哨兵]</em></p>
<p>​                               <em>CAN分析仪 ：    CANalyest - III</em></p>
<p>​                               <em>DJI电池、C610电调、3508电机</em></p>
</blockquote>
<br>
<hr />
<h2 id="1️⃣-基础调试"><a class="markdownIt-Anchor" href="#1️⃣-基础调试"></a> 1️⃣ 基础调试</h2>
<p><font face="华文彩云" color=red size=5> 本节的介绍都是比较基础的，写给22级或是一些刚接触MDK的；</font></p>
<p><font face="华文彩云" color=red size=5>你们会了的自己跳到后面部分去</font></p>
<p>👇 👇</p>
<p><a href="#two">传送门</a></p>
<hr />
<br>
<h3 id="11-keil5-进入调试"><a class="markdownIt-Anchor" href="#11-keil5-进入调试"></a> 1.1 keil5 进入调试</h3>
<h4 id="111-选择调试器"><a class="markdownIt-Anchor" href="#111-选择调试器"></a> 1.1.1 选择调试器</h4>
<p><strong>点击魔术棒 <img src="https://pic.imgdb.cn/item/642ff7c9a682492fccbd228b.png" alt="im" /> -&gt; Debug</strong></p>
<p><img src="https://pic.imgdb.cn/item/642ff7fca682492fccbd9fc6.png" alt="Im2" /></p>
<p>​	                                    	<mark>这里我是用的<strong>J-Link</strong>所以选<strong>J-Link</strong></mark></p>
<hr />
<h4 id="112-配置调试器"><a class="markdownIt-Anchor" href="#112-配置调试器"></a> 1.1.2  配置调试器</h4>
<br>
<p><strong>点击setting进入调速器的设置界面</strong></p>
<p><img src="https://pic.imgdb.cn/item/642ff9afa682492fccc16f2c.jpg" alt="" /></p>
<p><font face="宋体" color=red size=4>大致介绍一下SW 和 JTAG的区别：</font></p>
<ul>
<li>SWD需要的线很少，仅需要<strong>双向数据线</strong>（SWDIO）、<strong>时钟线</strong>（SWCLK）、以及<strong>VCC</strong>和<strong>GND</strong> 四根线；</li>
<li>而且SWD在高速模式下更可靠，而且再增加一根线<strong>SWO</strong>后，可以使用<a href="#ITM">ITM</a> 在线调试，功能更加强大。</li>
<li><strong>JTAG</strong>接口一般可转接成<strong>SWD</strong>，通常能用<strong>JTAG</strong>的都能使用<strong>SWD</strong>， 除非是在调试带宽不够时，不能一般用<strong>SWD</strong>就够了</li>
</ul>
<hr />
<h4 id="113-配置flash"><a class="markdownIt-Anchor" href="#113-配置flash"></a> 1.1.3 配置flash</h4>
<p><strong>点击flash Download</strong></p>
<p><img src="https://pic.imgdb.cn/item/642ffb91a682492fccc51d11.png" alt="" /></p>
<h4 id="114-进入debug"><a class="markdownIt-Anchor" href="#114-进入debug"></a> 1.1.4 进入debug</h4>
<p><img src="https://pic.imgdb.cn/item/642ffc33a682492fccc62d1c.png" alt="im3" /></p>
<hr />
<h3 id="12-调试窗口介绍"><a class="markdownIt-Anchor" href="#12-调试窗口介绍"></a> 1.2 调试窗口介绍</h3>
<p><strong>初始化后的默认调试窗口布局如下：</strong></p>
<p><img src="https://pic.imgdb.cn/item/642ffc8ea682492fccc6d76f.png" alt="im4" /></p>
<p>1️⃣调试操作栏</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[复位|运行|停止|单步运行|单行运行|跳出函数体|运行到光标处|跳转PC指针]</span><br><span class="line">调试时代码的运行操作在此设置</span><br></pre></td></tr></table></figure>
<p>2️⃣主界面窗口设置</p>
<p><strong>[命令行|反汇编窗口|符号窗口|内核寄存器|回调栈及局部变量|变量显示|内存窗口|虚拟串口|系统分析窗口|TRACE窗口|外设寄存器]</strong></p>
<ol>
<li><strong>命令行：</strong><mark>调试操作命令</mark>及返回等消息在这里显示，也可以直接在这里操作执行一些语法命令，如断点打开关闭显示等。</li>
<li><strong>反汇编窗口：<strong>C/C++编写的代码转换为<mark>汇编语言</mark>，此窗口与代码窗口同步滚动，但并不是代码执行时的顺序</strong>(可能是编译的顺序🤔)</strong></li>
<li><strong>符号窗口：</strong> 编译后所有的<mark>函数变量及类型</mark>均在此，可通过这里查看有没有编译某些变量</li>
<li><strong>内核寄存器：</strong> 显示内核先关的<mark>寄存器数值</mark></li>
<li><strong>回调部变量：</strong> 当调试时停留在断点时，这里会显示函数的调用关系，以及压进的变量值，这个一般和断点配合反推异常调用以及查看局部变量无需使用变量查看串口</li>
<li><strong>变量显示</strong>：用于查看单片机中某个<mark>变量的值</mark>，一般多用于查看全局变量以及外设寄存器数值、表达式显示变量，也<mark>可直接操作变量值。</mark> (<strong>相当于直接改变内存</strong>🤔)</li>
<li><strong>内存窗口：</strong> 显示内存地址以及地址处内存的数据，一般可<mark>查看变量</mark>以及<mark>寄存器数据</mark>、<mark>函数地址</mark>等</li>
<li><strong>虚拟串口窗口：</strong> 通过调试查看的串口，一些需要重定向才能使用。(也可用<code>ITM_SendChar(ch)</code>函数，详见<a href="#ITM">ITM</a> )</li>
<li><strong>系统分析窗口：<strong>这里有一些代码分析的高级功能，用的最多的是<mark>软件逻辑分析仪</mark>的功能。(可用作</strong>简易示波器</strong>，和<strong>显示变量波形</strong>）</li>
<li><strong>trace窗口：</strong> 与<mark>代码跟踪</mark>有关，<mark>相对高级的功能</mark>下面有介绍<a href="#ITM">ITM</a> ，具体可参考keil5的 <a href="https://developer.arm.com/documentation/101407/0537/Debugging/Debug-Windows-and-Dialogs/Trace-Exceptions">帮助文档</a>。</li>
<li><strong>外设寄存器窗口：</strong><mark>比较常用</mark>，用来查看你打开的串口/spi/can/Tim/rcc等等寄存器的内容,当然也可<mark>直接修改操作寄存器</mark>。</li>
</ol>
<p>3️⃣在线调试启动/关闭</p>
<p>4️⃣断点设置 设置、取消、关闭、删除所有断点等操作。<br />
5️⃣内核寄存器窗口<br />
6️⃣C代码对应的汇编程序窗口 <strong>注意代码左侧灰色部分代码已编译部分，可设置断点(此部分可以查看代码是否编译或者是否被编辑器优化)</strong></p>
<p>7️⃣   C/C++代码窗口<br />
8️⃣Command窗口 调试命令行，可通过设置命令执行所有调试操作，如断点设置、变量寄存器访问、数据转换、基本计算等功能<br />
9️⃣回调栈及局部变量窗口</p>
<p>🔟 用于查看单片机中某个<mark>变量的值</mark>，一般多用于查看全局变量以及外设寄存器数值、表达式显示变量，也<mark>可直接操作变量值。</mark> (<strong>相当于直接改变内存</strong>)</p>
<br>
<p>(👇更多的可以参考一下这篇文章)</p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU2MDgyNzgyMw==&amp;mid=2247483787&amp;idx=2&amp;sn=f52924e67df948b00c42bf4993c191d6&amp;chksm=fc035d4bcb74d45d844202d624b244b6931f568266a359eea51c15d5b8578059d34e89f9c605&amp;scene=178&amp;cur_album_id=1341389839287156737#rd">keil 基础调试</a></p>
<hr />
<h3 id="13-基本调试操作"><a class="markdownIt-Anchor" href="#13-基本调试操作"></a> 1.3  基本调试操作</h3>
<h4 id="131-全速运行-打断点-查看变量"><a class="markdownIt-Anchor" href="#131-全速运行-打断点-查看变量"></a> 1.3.1  全速运行、打断点、查看变量</h4>
<p><img src="https://pic.imgdb.cn/item/643000a2a682492fccce6508.gif" alt="在这里插入图片描述" /></p>
<h4 id="132-复位-停止程序"><a class="markdownIt-Anchor" href="#132-复位-停止程序"></a> 1.3.2  复位、停止程序</h4>
<p><img src="https://pic.imgdb.cn/item/643000cba682492fcccec227.gif" alt="m2" /></p>
<h4 id="133-单行单步运行"><a class="markdownIt-Anchor" href="#133-单行单步运行"></a> 1.3.3  单行/单步运行</h4>
<p><img src="https://pic.imgdb.cn/item/64300116a682492fcccf6283.gif" alt="m3" /></p>
<hr />
<h2 id="2️⃣-具体调试"><a class="markdownIt-Anchor" href="#2️⃣-具体调试"></a> 2️⃣ 具体调试</h2>
<p><span id="two" name="two"></span></p>
<h3 id="21-寄存器直接操作"><a class="markdownIt-Anchor" href="#21-寄存器直接操作"></a> 2.1  寄存器直接操作</h3>
<h4 id="211-中断控制器"><a class="markdownIt-Anchor" href="#211-中断控制器"></a> 2.1.1 中断控制器</h4>
<p>嵌套向量中断控制器 (NVIC) 对话框（适用于 Cortex-M3、Cortex-M4 和 Cortex-M7 内核）显示所有异常的状态。对于每个异常，对话框都会显示编号、来源、名称、状态和优先级。</p>
<h5 id="2111-官方文档"><a class="markdownIt-Anchor" href="#2111-官方文档"></a> 2.1.1.1 官方文档</h5>
<p><img src="https://pic.imgdb.cn/item/643001a2a682492fccd056f8.png" alt="im5" /></p>
<p>官方文档指出我们可以<mark>选定指定中断</mark>，并控制<mark>改变异常的状态</mark></p>
<p>（👇感兴趣的可以看一下官方文档）</p>
<p><a href="https://developer.arm.com/documentation/101407/0537/Debugging/Debug-Windows-and-Dialogs/Core-Peripherals/Armv7-M-cores/Armv7-M--Nested-Vector-Interrupt-Controller">官方文档</a></p>
<br>
<h5 id="2112-中断控制器介绍"><a class="markdownIt-Anchor" href="#2112-中断控制器介绍"></a> 2.1.1.2  中断控制器介绍</h5>
<p><img src="https://pic.imgdb.cn/item/643001d8a682492fccd0a94b.png" alt="" /></p>
<p>你的中断设置的<strong>优先级是多少</strong>，<strong>是否开启了</strong>，<strong>是否挂起了</strong>，<strong>是否处于活动状态</strong>，在这里一目了然。</p>
<p>假如你想要让程序<strong>尽快进入中断</strong>程序运行，只要<strong>勾选挂起选项</strong>，这样程序运行后马上就能到<strong>中断处理函数中</strong>执行了。</p>
<p>当然这里只是简单介绍，具体内容可以自己去看文档</p>
<p>（👇感兴趣的可以看一下官方文档）</p>
<p><a href="https://developer.arm.com/documentation/101407/0537/Debugging/Debug-Windows-and-Dialogs/Core-Peripherals/Armv7-M-cores/Armv7-M--Nested-Vector-Interrupt-Controller">官方文档</a></p>
<hr />
<h5 id="2113-开启方法"><a class="markdownIt-Anchor" href="#2113-开启方法"></a> 2.1.1.3 开启方法</h5>
<p><img src="https://pic.imgdb.cn/item/643002c9a682492fccd24c75.gif" alt="m4" /></p>
<hr />
<h4 id="212-外设寄存器查看"><a class="markdownIt-Anchor" href="#212-外设寄存器查看"></a> 2.1.2  外设寄存器查看</h4>
<h5 id="2121-开启方法"><a class="markdownIt-Anchor" href="#2121-开启方法"></a> 2.1.2.1 开启方法</h5>
<p>在<code>systemview window</code> 窗口可以查看各个外设的寄存器值</p>
<br>
<p><img src="https://pic.imgdb.cn/item/6430033ea682492fccd38efa.gif" alt="m5" /></p>
<br>
<h5 id="2122-外设寄存器查看"><a class="markdownIt-Anchor" href="#2122-外设寄存器查看"></a> 2.1.2.2 外设寄存器查看</h5>
<p>图中示例了串口1的寄存器查看，同样的<mark>中断设置</mark>/<mark>时钟分频</mark>/<mark>定时器</mark>均可通过此查看。甚至可以通过数据的变动与否判断外设是否正常打开。</p>
<p><img src="https://pic.imgdb.cn/item/64300396a682492fccd461a3.png" alt="" /></p>
<h5 id="2123-直接修改寄存器值"><a class="markdownIt-Anchor" href="#2123-直接修改寄存器值"></a> 2.1.2.3  直接修改寄存器值</h5>
<p>可通过在外设寄存器窗口，直接修改寄存器的值，以控制寄存器</p>
<p><img src="https://pic.imgdb.cn/item/643003c1a682492fccd4ea8a.gif" alt="m6" /></p>
<p>视频中，可以看到，通过控制<strong>TIM8的CCR寄存器</strong>，来改变<strong>PWM的占空比</strong>。</p>
<h5 id="2124-输出io控制"><a class="markdownIt-Anchor" href="#2124-输出io控制"></a> 2.1.2.4   输出IO控制</h5>
<p><span id="外设窗口" name="外设窗口"></span></p>
<p>可以通过控制GPIO的ODR寄存器</p>
<br>
<p><img src="https://pic.imgdb.cn/item/643003f8a682492fccd58b13.webp" alt="m7" /></p>
<br>
<h5 id="2125-输入io检测"><a class="markdownIt-Anchor" href="#2125-输入io检测"></a> 2.1.2.5  输入IO检测</h5>
<p>当某个单片机IO口设置为输入时，可直接通过输入寄存器查看电平状态即使代码处于断点停止状态也可以查看(断点停止有时需要手动点击<strong>toolbox</strong>中的更新窗口按钮)，在项目中可用来<strong>检测外部开关信号</strong>等省去了万用表测电压。</p>
<p><img src="https://pic.imgdb.cn/item/64300430a682492fccd5fcf6.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h5 id="2126-直接控制串口输出"><a class="markdownIt-Anchor" href="#2126-直接控制串口输出"></a> 2.1.2.6 直接控制串口输出</h5>
<p>通过直接修改串口的数据寄存器来进行操作</p>
<p><img src="https://pic.imgdb.cn/item/6430045aa682492fccd64d23.png" alt="" /></p>
<p><font face="华文彩云" color=red size=5>类似直接通过寄存器来进行调试还有很多示例，这里仅演示其中几种，有其他比较有用的也欢迎补充。</font></p>
<hr />
<br>
<h3 id="22-测量某段代码运行时间"><a class="markdownIt-Anchor" href="#22-测量某段代码运行时间"></a> 2.2  测量某段代码运行时间</h3>
<p>方法比较多， 如利用系统内核计算（dwt）、利用其它工具如<a href="#Systemview">Systemview</a> 、利用断点等</p>
<br>
<h4 id="221-利用内核计数dwt"><a class="markdownIt-Anchor" href="#221-利用内核计数dwt"></a> 2.2.1  利用内核计数（dwt）</h4>
<h5 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h5>
<p><img src="https://pic.imgdb.cn/item/64300497a682492fccd6bf9b.png" alt="" /></p>
<br>
<p>如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试代码运行时间（加在被测代码块之后）</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">DTW_Time_Difference_ms</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">static</span> <span class="type">uint32_t</span> old_counter;</span><br><span class="line">  <span class="type">uint32_t</span> counter,couter_current;</span><br><span class="line">  couter_current = DWT_get_time();</span><br><span class="line">  <span class="keyword">if</span>(couter_current &gt; old_counter)</span><br><span class="line">    counter = couter_current - old_counter;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    counter = couter_current + <span class="number">0XFFFFFFFF</span> - old_counter;</span><br><span class="line">  old_counter = couter_current;</span><br><span class="line">  <span class="keyword">return</span> (counter / (SystemCoreClock/<span class="number">1000</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************/</span></span><br><span class="line">&#123;</span><br><span class="line">DTW_Time_Difference_ms();</span><br><span class="line">... 被测代码</span><br><span class="line">    </span><br><span class="line">time = DTW_Time_Difference_ms();</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<br>
<h5 id="运行结果"><a class="markdownIt-Anchor" href="#运行结果"></a> <em>运行结果</em></h5>
<p><img src="https://pic.imgdb.cn/item/643004d6a682492fccd72dbf.png" alt="im8" /></p>
<p><img src="https://pic.imgdb.cn/item/64300525a682492fccd7a224.png" alt="im9" /></p>
<p><font face="华文彩云" color=red size=5>可以看到基本能实现US级的 测量</font></p>
<hr />
<br>
<h4 id="222-利用断点时间测量"><a class="markdownIt-Anchor" href="#222-利用断点时间测量"></a> 2.2.2  利用断点时间测量</h4>
<p>该方法也是基于基于内核时钟，进行计数测量的，经过笔者的测试，在大部分情况下，<strong>精度都是非常高的</strong></p>
<br>
<h5 id="2221-前置步骤"><a class="markdownIt-Anchor" href="#2221-前置步骤"></a> 2.2.2.1 前置步骤</h5>
<p>要用到断点，也即是keil本身来获取准确时间，需要先进行Trace功能的配置</p>
<p>（👇具体配置见下文）</p>
<p><a href="#Trace 配置">Trace 配置</a></p>
<br>
<h5 id="2222-测量前置"><a class="markdownIt-Anchor" href="#2222-测量前置"></a> 2.2.2.2  测量前置</h5>
<p><img src="https://pic.imgdb.cn/item/64300555a682492fccd7fcdb.png" alt="im10" /></p>
<ol>
<li>打开仿真界面</li>
<li>打开<mark>内核寄存器窗口</mark></li>
<li>将寄存器窗口保持固定在如图所示界面时钟显示（计时的时钟就是此处的Sec）</li>
<li>鼠标右键弹出菜单</li>
<li>复位<code>t1/t2</code>定时。</li>
</ol>
<p><font face="华文彩云" color=red size=5>为什么要打开寄存器窗口：</font></p>
<p>有的时候，右下角时间窗口<img src="https://pic.imgdb.cn/item/6430057aa682492fccd8447b.png" alt="(img-BEhXjcWp-1659093245270)(ARM- MDK 调试汇总.assets/image-20220726161524525.png)]" /></p>
<p>可能没有显示时间或时间不更新； 一个简单的解决方法是，切换到<strong>寄存器窗口</strong>，这样时间窗口就能正常显示了。</p>
<br>
<hr />
<h5 id="2223-测试原理"><a class="markdownIt-Anchor" href="#2223-测试原理"></a> 2.2.2.3  测试原理</h5>
<p>在<strong>寄存器窗口</strong>显示的时间是从单片机运行的<strong>第一条代码</strong> 开始的时间，这个时间是累计的。</p>
<p>而<strong>右下角时间窗口</strong></p>
<p><img src="https://pic.imgdb.cn/item/643005aaa682492fccd8a886.png" alt="im11" /></p>
<p>可以重置（Reset）时间，比如现在用t1显示的时间（t0 和 <strong>寄存器窗口</strong>显示的时间一样，不信你可以看看），只要先重置一下这个t1（最上面那个），然后运行代码后暂停，t1显示的就是这段代码的运行时间了。</p>
<br>
<hr />
<h5 id="2224-实际操作"><a class="markdownIt-Anchor" href="#2224-实际操作"></a> 2.2.2.4  实际操作</h5>
<h6 id="22241-关闭固定窗口刷新"><a class="markdownIt-Anchor" href="#22241-关闭固定窗口刷新"></a> 2.2.2.4.1 关闭固定窗口刷新</h6>
<p>(代码运行同时刷新变量窗口数据，会影响测量时间的准确性)</p>
<p><img src="https://pic.imgdb.cn/item/64300430a682492fccd5fcf6.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h6 id="22242-进行测量"><a class="markdownIt-Anchor" href="#22242-进行测量"></a> 2.2.2.4.2  进行测量</h6>
<p><mark>设置断点</mark>后，开启代码运行，下一次测量时应<mark>复位测量计时器T1/T2</mark>.</p>
<p><img src="https://pic.imgdb.cn/item/643005fba682492fccd95728.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h6 id="22243-测量结果"><a class="markdownIt-Anchor" href="#22243-测量结果"></a> 2.2.2.4.3  测量结果</h6>
<p><img src="https://pic.imgdb.cn/item/64300624a682492fccd9b5f3.png" alt="" /></p>
<p>可以看到<strong>测量结果</strong>和之前用<strong>DWT</strong>进行测量基本是一致的</p>
<hr />
<h3 id="23-高级断点调试"><a class="markdownIt-Anchor" href="#23-高级断点调试"></a> 2.3  高级断点调试</h3>
<h4 id="231-简介"><a class="markdownIt-Anchor" href="#231-简介"></a> 2.3.1 简介</h4>
<p>Keil5软件帮助文档中指明了断点有三种类型：<mark>存取断点</mark>，<mark>执行断点</mark>，<mark>条件断点</mark>。</p>
<ul>
<li><strong>存取断点：</strong> 某一个变量度或者写操作时执行断点操作。</li>
<li><strong>执行断点</strong>：执行到代码某个位置时产生断点操作。一般直接在代码左侧打的断点就是此类断点，用的最多。</li>
<li><strong>条件断点</strong>：当满足某个表达式时，如某个变量==0x01时执行断点。</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/643006aba682492fccdaed3c.png" alt="im11" /></p>
<p>​                                                                          <mark>图为官方文档介绍</mark></p>
<br>
<hr />
<h4 id="232-开启方法"><a class="markdownIt-Anchor" href="#232-开启方法"></a> 2.3.2 开启方法</h4>
<p><img src="https://pic.imgdb.cn/item/643005fba682492fccd95728.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="233-窗口介绍"><a class="markdownIt-Anchor" href="#233-窗口介绍"></a> 2.3.3  窗口介绍</h4>
<p><img src="https://pic.imgdb.cn/item/643006efa682492fccdb6dfc.png" alt="im15" /></p>
<ul>
<li>
<p>仅操作1处表达式，表达式为某个函数地址时为 <strong><mark>执行断点</mark></strong> ，Count表示 <strong>执行次数</strong> 。</p>
</li>
<li>
<p>1和3处同时操作时表示为<mark>存取断点</mark>，3中<code>SIZE</code>表示存取变量的字节大小，<code>Bytes</code>与<code>Objects</code>的区别在于单一变量与结构体的不同。当存取某个变量或者结构体中某个成员时使用<code>Bytes</code>，存取某个结构体时使用<code>Objects</code>。</p>
</li>
<li>
<p>仅操作1和2为<mark>条件断点</mark>，如变量==、&gt;=某个值时执行printf指令打印变量值。注意此处的printf仅输出到调试界面的Command窗口。command指令的执行并不会使程序中断停止，相当于此处为软件断点。</p>
</li>
</ul>
<p><strong>图中官方示例的各断点的定义的意义：</strong></p>
<p><img src="https://pic.imgdb.cn/item/64300720a682492fccdbd1aa.png" alt="im16" /></p>
<p><img src="https://pic.imgdb.cn/item/6430078ea682492fccdcba13.png" alt="" /></p>
<p><font face="华文彩云" color=red size=5>注意：</font></p>
<ol>
<li>除直接在代码左侧设置执行断点外，其余断点需要通过断点管理窗口来实现。</li>
<li>断点管理窗口中的断点需要停止代码执行才能正确设置。</li>
</ol>
<br>
<hr />
<h4 id="234-断点操作"><a class="markdownIt-Anchor" href="#234-断点操作"></a> 2.3.4 断点操作</h4>
<h5 id="2341-存取断点"><a class="markdownIt-Anchor" href="#2341-存取断点"></a> 2.3.4.1 存取断点</h5>
<h6 id="23411-存取断点定义"><a class="markdownIt-Anchor" href="#23411-存取断点定义"></a> 2.3.4.1.1  <strong>存取断点定义</strong></h6>
<p>可以在Watch中右键添加断点。</p>
<p><img src="https://pic.imgdb.cn/item/643007a8a682492fccdcf073.png" alt="im17" /></p>
<p>如果想知道某个变量在什么地方被访问，假定有一个变量a，可以按以下进行配置：</p>
<p><img src="https://pic.imgdb.cn/item/643007c8a682492fccdd335c.png" alt="im18" /></p>
<p>因为 Count 值设置为 1，所以<mark>每一次读取a的值</mark>，程序都会停止。</p>
<br>
<hr />
<h6 id="23412-运行结果"><a class="markdownIt-Anchor" href="#23412-运行结果"></a> 2.3.4.1.2  <strong>运行结果</strong></h6>
<p>在对<strong>变量a</strong> 进行读取的时候，程序自动停止运行</p>
<p><img src="https://pic.imgdb.cn/item/64300772a682492fccdc7e98.gif" alt="在这里插入图片描述" /></p>
<p>如果是写操作（Write）访问时，会发现从复位程序开始运行后，程序会停止在某个地方。</p>
<p>因为<mark>全局变量</mark>会在进入 main 函数之前被初始化。</p>
<p>还可以更改<code>Count</code> 的值，如把count 改成2， 则当a被<strong>写入两次</strong>时，程序会停止。</p>
<p><img src="https://pic.imgdb.cn/item/6430080ea682492fccddbd99.png" alt="" /></p>
<hr />
<h5 id="2342-结构体断点"><a class="markdownIt-Anchor" href="#2342-结构体断点"></a> 2.3.4.2 结构体断点</h5>
<p>实际结构体断点也是属于<mark>存取断点</mark>的一种，因为要写的比较多，单独列出来</p>
<p><font face="华文彩云" color=red size=5>注意：这部分我测试的时候感觉有点问题，没完全解决</font></p>
<h6 id="23421-设置结构断点"><a class="markdownIt-Anchor" href="#23421-设置结构断点"></a> 2.3.4.2.1  设置结构断点</h6>
<p>1️⃣ <font face="华文彩云" color=red size=5>出现的问题</font></p>
<p>试了一下，直接在<code>watch</code>窗口 将<strong>整个结构变量</strong>设为断点会报错(包括该变量里的其他结构体成员，如<strong>pitch.c</strong>)</p>
<p><img src="https://pic.imgdb.cn/item/643008c5a682492fccdf1154.gif" alt="在这里插入图片描述" /></p>
<p><img src="https://pic.imgdb.cn/item/643008e4a682492fccdf4be1.png" alt="im20" /></p>
<p>​																	<mark>试着解决了一下 ，没解决</mark></p>
<hr />
<p>2️⃣ <font face="华文彩云" color=red size=5>简单的解决方法</font></p>
<p>可以采用更加通用的方法：</p>
<p><img src="https://pic.imgdb.cn/item/64300914a682492fccdf9c6c.png" alt="im21" /></p>
<p>可以看到结构体变量各个成员的<strong>地址</strong>是不同的，比如我们<code>gimbal_control.auto.c</code> 的地址是<code>0x20004A10</code> （由此我们知道也可以通过这</p>
<p>个来看出一个结构体变量的地址是多少），所以设置后的结果如下：</p>
<p><img src="https://pic.imgdb.cn/item/6430094fa682492fccdff1ca.gif" alt="在这里插入图片描述" /></p>
<p><font face="华文彩云" color=red size=5>注意：经测试好像是不支持指针操作，不太确定</font></p>
<p>比如有这样三个结构体：<code>gimbal_pitch_control_t</code>、<code>gimbal_control_t</code>、</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">gimbal_control_t</span> gimbal_control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">uint16_t</span> position;</span><br><span class="line">    <span class="type">int16_t</span> speed;</span><br><span class="line">    <span class="type">int16_t</span> given_current;</span><br><span class="line">    <span class="type">uint8_t</span> temperate;</span><br><span class="line">    <span class="type">int16_t</span> last_position;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">int16_t</span> angle;</span><br><span class="line">    <span class="type">int16_t</span> speed_filt;</span><br><span class="line">    <span class="type">int16_t</span> first_Flag;</span><br><span class="line">    <span class="type">int32_t</span> yaw_angle;</span><br><span class="line">    <span class="type">int32_t</span> pitch_angle;</span><br><span class="line">    <span class="type">int32_t</span> actual_Position;  <span class="comment">//真实位置</span></span><br><span class="line">&#125; <span class="type">motor_measure_t</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  //申明<span class="title">pitch</span>轴电机变量</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">motor_measure_t</span> *pitch_motor_measure;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> accel_up;</span><br><span class="line">    <span class="type">float</span> accel_down;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int8_t</span> init_flag;    <span class="comment">//初始化成功标志</span></span><br><span class="line">    <span class="type">float</span> Auto_record_location;                      <span class="comment">// 实际位置</span></span><br><span class="line"></span><br><span class="line">    <span class="type">first_order_filter_type_t</span> LowFilt_Pitch_Data;    <span class="comment">//P轴低通滤波器</span></span><br><span class="line">    <span class="type">sliding_mean_filter_type_t</span> Slidmean_Pitch_Data;  <span class="comment">//P轴滑动滤波器</span></span><br><span class="line"></span><br><span class="line">    <span class="type">first_order_filter_type_t</span> LowFilt_auto_pitch;    <span class="comment">//自瞄P轴低通滤波器</span></span><br><span class="line">    <span class="type">sliding_mean_filter_type_t</span> Slidmean_auto_pitch;  <span class="comment">//自瞄P轴滑动滤波器</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int16_t</span> filt_output; <span class="comment">//P轴滤波值</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int16_t</span> output;</span><br><span class="line"></span><br><span class="line">&#125; <span class="type">gimbal_pitch_control_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">const</span> RC_ctrl_t *gimbal_RC;     <span class="comment">//底盘使用的遥控器指针</span></span><br><span class="line">    Vision_Auto_Data_t *auto_c;     <span class="comment">//申明自瞄变量</span></span><br><span class="line"></span><br><span class="line">    VisionStatus_E VisionStatus;    <span class="comment">// 敌人出现状态</span></span><br><span class="line">    <span class="type">const</span> Fire_task_t *Fire_task_control;</span><br><span class="line">   </span><br><span class="line">    gimbal_behaviour_e gimbal_behaviour;</span><br><span class="line"></span><br><span class="line">    <span class="type">gimbal_pitch_control_t</span> pitch_c;   <span class="comment">//申明pitch轴电机变量</span></span><br><span class="line">    <span class="type">gimbal_yaw_control_t</span> yaw_c;       <span class="comment">//申明yaw轴电机变量</span></span><br><span class="line">    <span class="type">motor_measure_t</span> motor_chassis[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    <span class="type">uint8_t</span> Gimbal_all_flag;  <span class="comment">//全部初始化完成标志</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="type">gimbal_control_t</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>如果要调用pitch轴的电机数据：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gimbal_control.pitch_c.pitch_motor_measure-&gt;position</span><br></pre></td></tr></table></figure>
<p>会导致报错：</p>
<p><img src="https://pic.imgdb.cn/item/64300974a682492fcce034bc.png" alt="im22" /></p>
<hr />
<h5 id="2343-条件断点"><a class="markdownIt-Anchor" href="#2343-条件断点"></a> 2.3.4.3  条件断点</h5>
<p>有些时候，我们并不关注地址访问情况，而对变量的数据内容感兴趣，比如变量<code>test_param.test1 == 10</code>的时候停下来。就可以这样设置：</p>
<p><img src="https://pic.imgdb.cn/item/6430098fa682492fcce06ce2.png" alt="在这里插入图片描述" /></p>
<p><strong>运行结果：</strong></p>
<p><img src="https://pic.imgdb.cn/item/643009b7a682492fcce0bc82.gif" alt="在这里插入图片描述" /></p>
<hr />
<h5 id="2344-添加命令"><a class="markdownIt-Anchor" href="#2344-添加命令"></a> 2.3.4.4  添加命令</h5>
<p>可以在命令行增加命令，例如，程序运行100次后，将flag置1，以达到<mark>控制程序运行的目的</mark></p>
<p><img src="https://pic.imgdb.cn/item/643009f7a682492fcce135b2.png" alt="im23" /></p>
<p><img src="https://pic.imgdb.cn/item/64300a36a682492fcce197d7.gif" alt="在这里插入图片描述" /></p>
<p>通过Command命令还能做到很多事情，比如打印信息什么的</p>
<p>例如：写入变量a 50次后打印信息：</p>
<p><img src="https://pic.imgdb.cn/item/64300a5da682492fcce1d640.png" alt="im24" /></p>
<p><img src="https://pic.imgdb.cn/item/64300a85a682492fcce21216.gif" alt="在这里插入图片描述" /></p>
<p>（👇详见下文）</p>
<p><a href="#Command ">Command 窗口操作</a></p>
<br>
<hr />
<h3 id="24-watch变量查"><a class="markdownIt-Anchor" href="#24-watch变量查"></a> 2.4  watch变量查</h3>
<h4 id="241-常规操作"><a class="markdownIt-Anchor" href="#241-常规操作"></a> 2.4.1 常规操作</h4>
<p>右键添加到变量观察窗口，或者直接选中后拖拉变量到窗口。</p>
<p>观察的对象比较广泛：</p>
<p><mark>全局/局部变量</mark>、<mark>寄存器</mark>、<mark>函数地址</mark>、<mark>数组结构体</mark>等，对于局部变量只能在变量的<mark>有效局部内</mark>才能显示具体数值。</p>
<p><img src="https://pic.imgdb.cn/item/64300adaa682492fcce29bf5.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="242-表达式操作"><a class="markdownIt-Anchor" href="#242-表达式操作"></a> 2.4.2 表达式操作</h4>
<p>表达式可进行简单的数学运算，甚至可以当做一个简单的进制转换、计算器来使用。如下所示，动态显示random的值减去70000，0xf777转换为十进制。</p>
<br>
<p><img src="https://pic.imgdb.cn/item/64300c3ba682492fcce489e5.gif" alt="m21" /></p>
<br>
<hr />
<h4 id="243-直接修改变量的值"><a class="markdownIt-Anchor" href="#243-直接修改变量的值"></a> 2.4.3 直接修改变量的值</h4>
<p>可以直接在变量窗口<strong>修改变量的值</strong>，相当于直接在修改内存。 在<strong>调pid</strong>的时候比较有用， 直接修改，不用退出编译。</p>
<p>（当然这只是<strong>临时</strong>的，不重新编译的话，下次进入debug还会是原来的值）</p>
<br>
<p><img src="https://pic.imgdb.cn/item/64300c9da682492fcce51369.gif" alt="在这里插入图片描述" /></p>
<hr />
<hr />
<h3 id="25-call-stack-locals回调栈局部变量窗口"><a class="markdownIt-Anchor" href="#25-call-stack-locals回调栈局部变量窗口"></a> 2.5  （Call Stack + Locals）回调栈局部变量窗口</h3>
<h4 id="251-常规用法"><a class="markdownIt-Anchor" href="#251-常规用法"></a> 2.5.1 常规用法</h4>
<p>打断点后，通过回调栈窗口可以看到当前函数的调用情况以及内部变量的值。</p>
<p><img src="https://pic.imgdb.cn/item/64300cbaa682492fcce551bf.png" alt="im23" /></p>
<p>当程序封装太多层时可参照如下方式进行一层一层跳转分析。</p>
<p><img src="https://pic.imgdb.cn/item/64300ce2a682492fcce59824.png" alt="im24" /></p>
<br>
<hr />
<h4 id="252-查看进入hardfault函数的位置"><a class="markdownIt-Anchor" href="#252-查看进入hardfault函数的位置"></a> 2.5.2  查看进入Hardfault函数的位置</h4>
<p>当存在<mark>Hardfault等错误</mark>以及程序死循环时，可以通过<mark>断点</mark>或<mark>停止按钮</mark>停止程序运行，在<mark>回调栈窗口</mark>查看调用</p>
<p>hardfault的位置，位置不是很准确，但是能反应大概位置，然后通过局部变量的值进行判断<mark>异常位置</mark>。下边演示</p>
<p>了数组越界引起了异常，大概定位到了前后的位置，其它的错误定位可以再研究一下。</p>
<br>
<p><img src="https://pic.imgdb.cn/item/64300d08a682492fcce5d850.gif" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h3 id="26-command-窗口操作"><a class="markdownIt-Anchor" href="#26-command-窗口操作"></a> 2.6 Command 窗口操作</h3>
<p><span id="Command" name="Command"></span></p>
<p><font face="华文彩云" color=red size=5>keil的命令调试功能很强大，用的好能解决很多问题</font></p>
<br>
<p>比如，通过执行命令函数或表达式直接实现查看与修改变量、对象、寄存器及内存。</p>
<p>（👇详见官方文档）</p>
<p><a href="https://developer.arm.com/documentation/101407/0537/Debug-Commands">command 命令</a></p>
<br>
<p>这里贴几张官方文档的图：</p>
<h4 id="261-断点命令"><a class="markdownIt-Anchor" href="#261-断点命令"></a> 2.6.1 断点命令</h4>
<p><img src="https://pic.imgdb.cn/item/64300e2aa682492fcce7810f.png" alt="im24" /></p>
<p><img src="https://pic.imgdb.cn/item/64300e2aa682492fcce78110.png" alt="在这里插入图片描述" /></p>
<h4 id="262-一般命令"><a class="markdownIt-Anchor" href="#262-一般命令"></a> 2.6.2 一般命令</h4>
<p><img src="https://pic.imgdb.cn/item/64300e2ba682492fcce781ea.png" alt="在这里插入图片描述" /></p>
<p><img src="https://pic.imgdb.cn/item/64300f06a682492fcce8d355.png" alt="im25" /></p>
<h4 id="263-内存命令和程序命令"><a class="markdownIt-Anchor" href="#263-内存命令和程序命令"></a> 2.6.3  内存命令和程序命令</h4>
<p><img src="https://pic.imgdb.cn/item/64300f37a682492fcce92398.png" alt="im26" /></p>
<p><img src="https://pic.imgdb.cn/item/64300f51a682492fcce96951.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="264-使用示例"><a class="markdownIt-Anchor" href="#264-使用示例"></a> 2.6.4 使用示例</h4>
<p><img src="https://pic.imgdb.cn/item/64300f69a682492fcce9a7f4.png" alt="在这里插入图片描述" /></p>
<p><font face="华文彩云" color=red size=5>注意：当退出调试模式之后，KEIL 将自动保存 Command 数据到文件中（也就是说在此之前你是看不到这些调试数据的）</font></p>
<p><img src="https://pic.imgdb.cn/item/64300f80a682492fcce9db8a.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="265-自定义toolbox按键"><a class="markdownIt-Anchor" href="#265-自定义toolbox按键"></a> 2.6.5 自定义TOOLBOX按键</h4>
<p>有些时候我们并不满足监控数据，还想<strong>定义一些自己的按键</strong>，比如当我按下按钮时，系统电源关闭，再按下按钮时系统电源开启等。</p>
<p>这个功能其实使用前面所说的<a href="#外设窗口">外设窗口</a> 也是完成能完成要求的，麻烦的是，如果使用外设窗口，要控制 IO 口，那你每次都得找到对应的 IO 口才行，很是麻烦，但是使用按键就会简单许多。</p>
<h4 id="2651-定义按键"><a class="markdownIt-Anchor" href="#2651-定义按键"></a> 2.6.5.1 定义按键</h4>
<h6 id="26511-可以通过建立ini文件"><a class="markdownIt-Anchor" href="#26511-可以通过建立ini文件"></a> 2.6.5.1.1 可以通过建立ini文件</h6>
<p>（👇ini文件详见）</p>
<p><a href="#ini">ini 文件</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Kill BUTTON * <span class="comment">//删除全部按键</span></span><br><span class="line">DEFINE BUTTON <span class="string">&quot;Power OFF&quot;</span>, <span class="string">&quot;GPIOB-&gt;ODR |= (0x01 &lt;&lt; 7)&quot;</span>  <span class="comment">//按键置1</span></span><br><span class="line">DEFINE BUTTON <span class="string">&quot;Power ON&quot;</span>, <span class="string">&quot;GPIOB-&gt;ODR &amp;= ~(0x01 &lt;&lt; 7)&quot;</span>  <span class="comment">//按键置1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>保存后导入</strong></p>
<p><img src="https://pic.imgdb.cn/item/64300fafa682492fccea1cec.png" alt="在这里插入图片描述" /></p>
<p><strong>之后进入 Debug 模式即可，在这里你可以看到你定义的按键：</strong></p>
<p><img src="https://pic.imgdb.cn/item/64300fd8a682492fccea7922.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h6 id="26512-通过命令窗口"><a class="markdownIt-Anchor" href="#26512-通过命令窗口"></a> 2.6.5.1.2 通过命令窗口</h6>
<p>之前说过 <strong>.ini 文件</strong> 和手工在 <strong>Command 窗口</strong>输入命令没啥区别，只是使用文件的话可以将常用命令保存下来。</p>
<p>所以直接在命令窗口写入命令也行</p>
<p><img src="https://pic.imgdb.cn/item/64300feda682492fccea9c37.png" alt="在这里插入图片描述" /></p>
<h6 id="26513-按键删除"><a class="markdownIt-Anchor" href="#26513-按键删除"></a> 2.6.5.1.3 按键删除</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Kill Button <span class="number">3</span>   <span class="comment">//移除第3个按钮  （参数为* 的话会删除所有按键）</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h6 id="26514-运行结果"><a class="markdownIt-Anchor" href="#26514-运行结果"></a> 2.6.5.1.4 运行结果</h6>
<p><img src="https://pic.imgdb.cn/item/64301012a682492fcceace84.gif" alt="在这里插入图片描述" /></p>
<p>可以看到通过自定义按键 <strong>控制io口输出</strong>，控制灯的亮灭。</p>
<hr />
<p><font face="华文彩云" color=red size=5>注意：命令调试也存在缺点</font></p>
<ul>
<li>KEIL 命令调试不支持指针，这个已经多次强调了，要实现指针的功能，只能间接使用。</li>
<li>对程序运行造成一定的影响（事实上这个不关 KEIL 的事，是调试系统本身的问题）</li>
</ul>
<p>调试器可以说是第三方监视器，虽然几乎没有侵入性（事实上对 CPU 还是有影响的），但是它还是会窃取 CPU 时钟的，而且在执行断点的时候，虽然由 ini 文件定义的函数由 KEIL 执行了，实际上上执行这些函数也是需要时间的，那这个时间怎么来，就是通过暂停 CPU 后去执行这些代码，这个你可以通过 DWT 计数器看出来，因为只有 CPU 执行了 DWT 才会计数，但是你会发现在执行这些代码时，DWT 是没有进行计数的（在 KEIL 函数的前后获取 DWT 计数，可以发现计数值不变）</p>
<p>也就是说 CPU 和 KEI 是在交替使用系统时钟的。平常来看，由于 KEIL 执行速度很快，看不出来问题，但到中断的时候却会出现问题。</p>
<br>
<hr />
<h2 id="3️⃣-itm程序跟踪"><a class="markdownIt-Anchor" href="#3️⃣-itm程序跟踪"></a> 3️⃣  ITM程序跟踪</h2>
<p><span id="ITM" name="ITM"></span></p>
<h3 id="31-itm简介"><a class="markdownIt-Anchor" href="#31-itm简介"></a> 3.1 ITM简介</h3>
<p><strong>ITM：</strong> Instrumentation Trace Macrocell，指令跟踪宏单元</p>
<p>ITM是一应用驱动的跟踪源，它支持printf类的调试手段来跟踪操作系统(OS)和应用事件，并发布判定的系统信息。ITM以包的形式发布跟踪信息，它由以下部分组成：<br />
● 软件跟踪：软件可以通过直接写ITM激发寄存器来发布包信息。<br />
● 硬件跟踪：ITM会发布由DWT产生的信息包。<br />
● 时间戳：时间戳被发布到相应的包上。ITM包含一个21位的计数器以产生时间戳。Cortex-M3的时钟或串行线观测器(Serial Wire Viewer)的位时钟率给计数器提供时钟。<br />
由ITM发送的信息包输出到TPIU(Trace Port Interface Unit)，TPIU再添加一些额外的包(参考TPIU)，然后输出完整的包序列给调试器。</p>
<p>使用ITM能做到，在keil上显示各个中断的运行时间，进入时间；打印变量波形；打印虚拟串口数据等；</p>
<p><mark>简单添加几张效果图</mark>：</p>
<p>1️⃣中断时间戳：</p>
<p><img src="https://pic.imgdb.cn/item/64301075a682492fcceb79b0.png" alt="在这里插入图片描述" /></p>
<p>2️⃣ 打印变量波形：</p>
<p><img src="https://pic.imgdb.cn/item/64301088a682492fcceb9f07.png" alt="在这里插入图片描述" /></p>
<p>3️⃣ 打印虚拟串口：</p>
<p><img src="https://pic.imgdb.cn/item/64301098a682492fccebba47.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h3 id="32-trace配置"><a class="markdownIt-Anchor" href="#32-trace配置"></a> 3.2  Trace配置</h3>
<p><span id="Trace 配置" name="Trace 配置"></span></p>
<h4 id="321-硬件准备"><a class="markdownIt-Anchor" href="#321-硬件准备"></a> 3.2.1 硬件准备</h4>
<h5 id="3211-仿真器准备"><a class="markdownIt-Anchor" href="#3211-仿真器准备"></a> 3.2.1.1 仿真器准备</h5>
<p>一个<strong>J-Link仿真器</strong>或是<strong>ST-LINK</strong>、有<strong>J-Trace</strong>更好，直接一步到位。</p>
<p>不管是什么仿真器，只要能引出VCC、GND、TMS/SWDIO、TCK/SWCLK、JTDO这5根线的话就可以尝试一下。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>连接网络</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>VCC</td>
<td>电源正，3.3V</td>
</tr>
<tr>
<td>2</td>
<td>GND</td>
<td>电源负</td>
</tr>
<tr>
<td>3</td>
<td>SWO</td>
<td>SW跟踪功能</td>
</tr>
<tr>
<td>4</td>
<td>SWDIO</td>
<td>SW数据输入输出</td>
</tr>
<tr>
<td>5</td>
<td>SWCLK</td>
<td>SW时钟信号</td>
</tr>
</tbody>
</table>
<br>
<p>这里我用的是J-Link：</p>
<p><img src="https://pic.imgdb.cn/item/64301314a682492fccf1659b.png" alt="" /></p>
<p><mark>通过平常的SWD四线接口，再加上一根SWO的飞线</mark></p>
<h5 id="3212-开发板准备"><a class="markdownIt-Anchor" href="#3212-开发板准备"></a> 3.2.1.2 开发板准备</h5>
<p>准备一个有引出 <strong><mark>PB3</mark></strong> 引脚的板子</p>
<p><img src="https://pic.imgdb.cn/item/64301315a682492fccf1686e.png" alt="在这里插入图片描述" /></p>
<p>​										<mark>图为数据手册</mark></p>
<br>
<p><font face="华文彩云" color=red size=5>我看了周围我能用的板子汇总如下：</font></p>
<p>1️⃣</p>
<p><img src="https://pic.imgdb.cn/item/64301356a682492fccf1cfe4.png" alt="" /></p>
<blockquote>
<p><strong>开发板：</strong> ACE实验室H7通用开发板</p>
<blockquote>
<p><strong>有无引出PB3：</strong>  否</p>
</blockquote>
<blockquote>
<p><strong>能否飞线：</strong>        否</p>
</blockquote>
<p><strong>说明：</strong> 因为采用50pin 0.5mm的贴片排针，故无法飞线。</p>
</blockquote>
<br>
<p>2️⃣</p>
<p><img src="https://pic.imgdb.cn/item/64301356a682492fccf1cf9f.png" alt="im26" /></p>
<blockquote>
<p><strong>开发板：</strong> ACE实验室F4系列开发板</p>
<blockquote>
<p><strong>有无引出PB3：</strong>  否</p>
</blockquote>
<blockquote>
<p><strong>能否飞线：</strong>        能</p>
</blockquote>
<p><strong>说明：</strong> 可从最小系统板飞线，也可从拓展板底部飞线</p>
</blockquote>
<br>
<img src="https://pic.imgdb.cn/item/64301388a682492fccf22237.png" alt="在这里插入图片描述" style="zoom:67%;" />
<p><font face="华文彩云" color=red size=5>最终我是选择了用F4的板子，飞线进行测试，之后可以让硬件在设计的时候就引出来PB3</font></p>
<p>3️⃣</p>
<p><img src="https://pic.imgdb.cn/item/643013a2a682492fccf24f3d.png" alt="在这里插入图片描述" /></p>
<blockquote>
<p><strong>开发板：</strong> 正点原子精英板</p>
<blockquote>
<p><strong>有无引出PB3：</strong>  有</p>
</blockquote>
<blockquote>
<p><strong>能否飞线：</strong>        能</p>
</blockquote>
<p><strong>说明：</strong> 调起来怪怪的，能用但不想用，也没必要，而且还要外接电源供电</p>
</blockquote>
<br>
<p>4️⃣</p>
<p><img src="https://pic.imgdb.cn/item/643013c1a682492fccf2887b.png" alt="在这里插入图片描述" /></p>
<blockquote>
<p><strong>开发板：</strong> RM官方开发板C型</p>
<blockquote>
<p><strong>有无引出PB3：</strong>  无</p>
</blockquote>
<blockquote>
<p><strong>能否飞线：</strong>        否</p>
</blockquote>
<p><strong>说明：</strong> PB3被用于SPI1_CLK ,也无法复用😭</p>
</blockquote>
<hr />
<h4 id="322-软件配置"><a class="markdownIt-Anchor" href="#322-软件配置"></a> 3.2.2 软件配置</h4>
<h5 id="3221-cubemx配置"><a class="markdownIt-Anchor" href="#3221-cubemx配置"></a> 3.2.2.1 CUBEMX配置</h5>
<p>选择异步跟踪模式，此时PB3将会自动定义为SWO端口。</p>
<p><img src="https://pic.imgdb.cn/item/64301576e03e90d874574b8e.png" alt="在这里插入图片描述" /></p>
<h5 id="3222-keil软件设置"><a class="markdownIt-Anchor" href="#3222-keil软件设置"></a> 3.2.2.2 KEIL软件设置</h5>
<p><strong>在debug 的Trace窗口进行配置：</strong></p>
<p>确保用的是<mark>SW模式</mark> :</p>
<p><img src="https://pic.imgdb.cn/item/6430158fa682492fccf36b81.png" alt="在这里插入图片描述" /></p>
<hr />
<h3 id="33-keil调试的ini文件用法"><a class="markdownIt-Anchor" href="#33-keil调试的ini文件用法"></a> 3.3  keil调试的ini文件用法</h3>
<p><span id="ini" name="ini"></span></p>
<p><font face="华文彩云" color=red size=5>通过ini文件，可以动态的分析调试，也可以还原bug发生的情景。</font></p>
<p>（感觉很有用，但我自己只是简单测试，就不乱说了，后面附上文章自己看）</p>
<br>
<hr />
<h4 id="331-ini-文件使用"><a class="markdownIt-Anchor" href="#331-ini-文件使用"></a> 3.3.1 ini 文件使用</h4>
<p>ini文件可解释为一个配置文件，相当于一个 <strong>.C文件</strong> ，这个文件的执行本质与仿真时的<strong>命令行</strong>执行一致(如果觉得不麻烦可以在命令行中敲所有的命令而不用加载ini文件).</p>
<p><strong><mark>ini文件的加载主要在两个地方：</mark></strong></p>
<p>1️⃣ 点击调试时会加载图片所示的ini文件:</p>
<p><img src="https://pic.imgdb.cn/item/6430163ce03e90d87457c76e.png" alt="在这里插入图片描述" /></p>
<br>
<p>2️⃣ 调试时使用专用管理器调用</p>
<p><img src="https://pic.imgdb.cn/item/643017aaa682492fccf42d9a.png" alt="" /></p>
<p><img src="https://pic.imgdb.cn/item/643019890d2dde577798531b.png" alt="" /></p>
<p>调用ini主要用来生成一些配置，如打开<strong>itm端口</strong>、<strong>生成log</strong>、<strong>设置断点</strong>等功能，下边介绍一下小功能。</p>
<br>
<hr />
<h4 id="332-新建按钮"><a class="markdownIt-Anchor" href="#332-新建按钮"></a> 3.3.2 <strong>新建按钮</strong></h4>
<p>使用任何编辑器新建后缀为.ini的文件，内容如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">DEFINE BUTTON <span class="string">&quot;显示random值&quot;</span>, <span class="string">&quot;printf (\&quot;random=%04XH\\n\&quot;,random)&quot;</span></span><br><span class="line">DEFINE BUTTON <span class="string">&quot;置位&quot;</span>, <span class="string">&quot;GPIOF-&gt;ODR |= (1&lt;&lt;9)&quot;</span></span><br><span class="line">DEFINE BUTTON <span class="string">&quot;复位&quot;</span>, <span class="string">&quot;GPIOF-&gt;ODR &amp;= ~(1&lt;&lt;9)&quot;</span></span><br></pre></td></tr></table></figure>
<p>这样即可实现按钮的多个定义。</p>
<br>
<hr />
<h4 id="333-功能函数"><a class="markdownIt-Anchor" href="#333-功能函数"></a> 3.3.3 功能函数</h4>
<p>命令行不能直接调用函数，与之前讲过的一样，这里的功能函数仅用来调试使用，可以定义一些打印输出，修改变量、外设寄存器值等操作。</p>
<p>使用任何编辑器新建后缀为.ini的文件，内容如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">FUNC <span class="type">void</span> <span class="title function_">clearValue</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> random =<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">FUNC <span class="type">void</span> <span class="title function_">LEDON</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> GPIOF-&gt;ODR |= (<span class="number">1</span>&lt;&lt;<span class="number">9</span>);</span><br><span class="line">&#125;</span><br><span class="line">DEFINE BUTTON <span class="string">&quot;CLEAR&quot;</span>,<span class="string">&quot;clearValue();&quot;</span></span><br><span class="line">DEFINE BUTTON <span class="string">&quot;LED&quot;</span>,<span class="string">&quot;LEDON();&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>以上内容为定义了两个函数清除变量<strong>clearValue</strong>和打开LED灯<strong>LEDON</strong>，然后将两个函数做成<strong>toolbox</strong>按钮。</p>
<br>
<hr />
<h4 id="334-不复位在线调试"><a class="markdownIt-Anchor" href="#334-不复位在线调试"></a> <strong>3.3.4 不复位在线调试</strong></h4>
<h6 id="3341-使用swd4线连接目标板jtag接口会产生复位"><a class="markdownIt-Anchor" href="#3341-使用swd4线连接目标板jtag接口会产生复位"></a> 3.3.4.1 使用SWD4线连接目标板(Jtag接口会产生复位)</h6>
<h6 id="3342-外部工程目录下创建一个noresetdbgini配置文件内容为"><a class="markdownIt-Anchor" href="#3342-外部工程目录下创建一个noresetdbgini配置文件内容为"></a> 3.3.4.2 外部工程目录下创建一个noresetDBG.ini配置文件，内容为：</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">LOAD %L INCREMENTAL</span><br></pre></td></tr></table></figure>
<p>没有这个也可以不复位调试，但打不了断点</p>
<p><img src="https://pic.imgdb.cn/item/643019ae0d2dde577798bc75.png" alt="" /></p>
<br>
<hr />
<h6 id="3343-取消勾选load-application-at-startup加载调试初始化配置"><a class="markdownIt-Anchor" href="#3343-取消勾选load-application-at-startup加载调试初始化配置"></a> 3.3.4.3 取消勾选<code>Load Application at Startup</code>，加载调试初始化配置</h6>
<p><img src="https://pic.imgdb.cn/item/643019c20d2dde577798fc01.png" alt="" /></p>
<p><em>(2也可省略，直接在仿真后的command窗口输入效果是一样的)</em></p>
<br>
<p><img src="https://pic.imgdb.cn/item/643019e40d2dde5777994369.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h6 id="3344-取消调试器连接后的复位这个建议不连接板子只插烧写器进行设置否则会造成复位一次"><a class="markdownIt-Anchor" href="#3344-取消调试器连接后的复位这个建议不连接板子只插烧写器进行设置否则会造成复位一次"></a> 3.3.4.4 取消调试器连接后的复位(这个建议不连接板子，只插烧写器进行设置，否则会造成复位一次)</h6>
<p><img src="https://pic.imgdb.cn/item/64301a14e03e90d874595240.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h6 id="3345-调试时目标更新也取消勾选这一步在f407上调试发现不操作也能实现可有可无的样子"><a class="markdownIt-Anchor" href="#3345-调试时目标更新也取消勾选这一步在f407上调试发现不操作也能实现可有可无的样子"></a> 3.3.4.5 调试时目标更新也取消勾选(这一步在F407上调试发现不操作也能实现，可有可无的样子)</h6>
<p><img src="https://pic.imgdb.cn/item/64301a14e03e90d874595240.png" alt="在这里插入图片描述" /></p>
<h6 id="3346-效果测试"><a class="markdownIt-Anchor" href="#3346-效果测试"></a> 3.3.4.6 效果测试:</h6>
<p><img src="https://pic.imgdb.cn/item/64301a850d2dde57779cc239.gif" alt="在这里插入图片描述" /></p>
<br>
<p><img src="https://pic.imgdb.cn/item/64301abd0d2dde57779e1d61.gif" alt="在这里插入图片描述" /></p>
<p>（👇详见下文）</p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU2MDgyNzgyMw%3D%3D&amp;chksm=fc035d33cb74d425b8daf8e162aa4f24b2993698426823b7c77f25e38d7c7fa6730f202f995f&amp;idx=1&amp;mid=2247483891&amp;scene=21&amp;sn=569d5e4f49cfff2b59da5b68b707fe51#wechat_redirect">KEIL 调试的ini文件有什么用</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU2MDgyNzgyMw==&amp;mid=2247484451&amp;idx=1&amp;sn=73a0e08b6fbe15982fecd70c56f1ef66&amp;chksm=fc0358e3cb74d1f56616fc0d8d5148ee3382280bb95de908b4adff1eddcdb3cf446c307c32b1&amp;scene=178&amp;cur_album_id=1341389839287156737#rd">BUG 终结者，现场抓获！|颠覆认知</a></p>
<br>
<hr />
<h3 id="34-打印变量波形"><a class="markdownIt-Anchor" href="#34-打印变量波形"></a> 3.4  打印变量波形</h3>
<p>keil本身是有逻辑分析仪的，你们应该都知道，但一般我们调车的时候<strong>打印波形</strong>都是用的<font face="宋体" color=red size=5>J-Scope</font>，因为正常我</p>
<p>们不配置<a href="#ini">ITM</a>的话，波形是不会刷新的，就一直卡在那里。</p>
<h4 id="341-使用方法"><a class="markdownIt-Anchor" href="#341-使用方法"></a> 3.4.1 使用方法</h4>
<p>直接将变量添加至<code>analyzer</code>窗口就行</p>
<p><font face="华文彩云" color=red size=5>注意：最多只能有四个变量</font></p>
<br>
<p><img src="https://pic.imgdb.cn/item/64301b400d2dde5777a145da.gif" alt="" /></p>
<br>
<hr />
<h4 id="342-与j-scope的区别"><a class="markdownIt-Anchor" href="#342-与j-scope的区别"></a> 3.4.2 与J-Scope的区别</h4>
<ul>
<li>
<p><mark>J-Scope</mark>： 采样频率高，波形更加准确，可以将不同波形放在一起对比； 例如，将pitch轴的<strong>实际曲线</strong>和设<strong>定</strong></p>
<p><strong>曲线</strong>对比，可以直观的看出当前的<strong>闭环控制效果</strong></p>
</li>
<li>
<p><mark>逻辑分析仪：</mark>  方便快捷，直接将变量拖入即可显示，前提是已经配置好了；缩放范围大，可更直观的看出整</p>
<p>体的趋势； 可查看io端口的电平变化。</p>
</li>
</ul>
<br>
<hr />
<h4 id="343-使用示例"><a class="markdownIt-Anchor" href="#343-使用示例"></a> 3.4.3 使用示例：</h4>
<p>通过逻辑分析仪 <strong>打印电机速度曲线</strong>：</p>
<br>
<p><img src="https://pic.imgdb.cn/item/64301bd20d2dde5777a44f0d.gif" alt="在这里插入图片描述" /></p>
<hr />
<br>
<h3 id="35-虚拟串口"><a class="markdownIt-Anchor" href="#35-虚拟串口"></a> 3.5 虚拟串口</h3>
<p>直接用虚拟串口<strong>打印信息</strong>，不再需要占用串口来打印信息：</p>
<p>利用这个函数，<strong>直接调用</strong>就行</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  \brief   ITM Send Character</span></span><br><span class="line"><span class="comment">  \details Transmits a character via the ITM channel 0, and</span></span><br><span class="line"><span class="comment">           \li Just returns when no debugger is connected that has booked the output.</span></span><br><span class="line"><span class="comment">           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.</span></span><br><span class="line"><span class="comment">  \param [in]     ch  Character to transmit.</span></span><br><span class="line"><span class="comment">  \returns            Character to transmit.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">__STATIC_INLINE <span class="type">uint32_t</span> <span class="title function_">ITM_SendChar</span> <span class="params">(<span class="type">uint32_t</span> ch)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (((ITM-&gt;TCR &amp; ITM_TCR_ITMENA_Msk) != <span class="number">0UL</span>) &amp;&amp;      <span class="comment">/* ITM enabled */</span></span><br><span class="line">      ((ITM-&gt;TER &amp; <span class="number">1UL</span>               ) != <span class="number">0UL</span>)   )     <span class="comment">/* ITM Port #0 enabled */</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span> (ITM-&gt;PORT[<span class="number">0U</span>].u32 == <span class="number">0UL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      __NOP();</span><br><span class="line">    &#125;</span><br><span class="line">    ITM-&gt;PORT[<span class="number">0U</span>].u8 = (<span class="type">uint8_t</span>)ch;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这个函数相当于串口字节发送函数，只不过串口字节发送函数是通过串口传输的，这里就通过JTDO这根线传输。然后你可能需要使用printf函数打印，那么重定向即可</p>
<p><img src="https://pic.imgdb.cn/item/64301bed0d2dde5777a4ca4a.png" alt="在这里插入图片描述" /></p>
<p><strong>查看输出：</strong></p>
<p><img src="https://pic.imgdb.cn/item/64301c130d2dde5777a566eb.gif" alt="在这里插入图片描述" /></p>
<hr />
<h3 id="36-统计进入中断的数据"><a class="markdownIt-Anchor" href="#36-统计进入中断的数据"></a> 3.6 统计进入中断的数据</h3>
<br>
<h4 id="351-trace-exceptions简介"><a class="markdownIt-Anchor" href="#351-trace-exceptions简介"></a> 3.5.1 Trace Exceptions简介</h4>
<p><strong>Trace Exceptions</strong>窗口显示有关跟踪的异常和中断的统计数据，如<strong>在此中断中花费的最短和最长时间</strong>、 <strong>上次输入此异常的时间</strong>等。</p>
<br>
<p><mark>这是官方文档的介绍：</mark></p>
<p><img src="https://pic.imgdb.cn/item/64301c580d2dde5777a666ce.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="352-event-counters简介"><a class="markdownIt-Anchor" href="#352-event-counters简介"></a> 3.5.2 Event Counters简介</h4>
<p>事件计数，用于统计<mark>总指令</mark>、<mark>异常</mark>、<mark>休眠</mark>、<mark>存储</mark>、<mark>折叠</mark>指令。<br />
<img src="https://pic.imgdb.cn/item/64301c780d2dde5777a6fd98.png" alt="在这里插入图片描述" /></p>
<p>👇  <mark>官方文档介绍：</mark></p>
<p><img src="https://pic.imgdb.cn/item/64301c960d2dde5777a75ec4.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h4 id="353-使用示例"><a class="markdownIt-Anchor" href="#353-使用示例"></a> 3.5.3 使用示例</h4>
<p>通过<strong>can分析仪</strong>，发送can数据，并<strong>查看统计情况</strong>：</p>
<p><img src="https://pic.imgdb.cn/item/64301cbd0d2dde5777a7fb52.webp" alt="" /></p>
<br>
<hr />
<br>
<h2 id="4️⃣-其它调试工具"><a class="markdownIt-Anchor" href="#4️⃣-其它调试工具"></a> 4️⃣  其它调试工具</h2>
<h3 id="41-systemview"><a class="markdownIt-Anchor" href="#41-systemview"></a> 4.1 Systemview</h3>
<p><span id="Systemview" name="Systemview"></span></p>
<h4 id="411-systemview简介"><a class="markdownIt-Anchor" href="#411-systemview简介"></a> 4.1.1 Systemview简介</h4>
<p><a href="https://www.segger.com/products/development-tools/systemview/">SystemView</a>是SEGGER开发的针对嵌入式系统的trace工具，支持多种RTOS，也支持自定义OS的移植（需实现trace API，参见User</p>
<p>Manual）。其核心基于<strong>SEGGER RTT</strong>，一个<strong>Host-Targe</strong>t间的通信框架，可通过多种方式连接，除J-LINK之外还可以使用串口及TCP-IP协</p>
<p>议，对非商业用途免费且无功能限制。</p>
<p>SystemView 是一个用于虚拟分析嵌入式系统的工具包。SystemView 可以完整的深入观察一个应用程序的运行时行为，这远远超出一个</p>
<p>调试器所能提供的。这在开发和处理具有多个线程和事件的复杂系统时尤其有效。</p>
<p><a href="http://www.segger.com/products/development-tools/systemview/">官方介绍</a></p>
<br>
<hr />
<h4 id="412-使用效果"><a class="markdownIt-Anchor" href="#412-使用效果"></a> 4.1.2 使用效果</h4>
<p><img src="https://pic.imgdb.cn/item/64301ce80d2dde5777a8c739.png" alt="在这里插入图片描述" /></p>
<p><a href="https://blog.csdn.net/weixin_51330198/article/details/126063836">SystemView 介绍与移植</a></p>
<hr />
<h3 id="42-j-link的rtt打印"><a class="markdownIt-Anchor" href="#42-j-link的rtt打印"></a> 4.2  J-Link的RTT打印</h3>
<p>可以通过占用一部分内存空间来实现非在线调试时swd端口的数据输出，一般用在串口紧张时代替串口实现printf调试。</p>
<p>我没用过，所以具体见网上教程</p>
<p>（👇详见下文）</p>
<p><a href="https://blog.csdn.net/qq1291917670/article/details/119414735?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-119414735-blog-120769285.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-119414735-blog-120769285.pc_relevant_default&amp;utm_relevant_index=6">JLink的RTT使用</a></p>
<hr />
<h3 id="43-j-scope"><a class="markdownIt-Anchor" href="#43-j-scope"></a> 4.3 J-Scope</h3>
<h4 id="431-j-scope-简介"><a class="markdownIt-Anchor" href="#431-j-scope-简介"></a> 4.3.1  J-Scope 简介</h4>
<p>J-Scope是SEGGER公司推出的，可以在目标MCU运行时，实时分析数据并图形化显示的软件。它不需要SWO或目</p>
<p>标上的任何额外引脚等功能，但使用可用的标准调试端口。J-Scope可以以类似示波器的方式显示多个变量的值。</p>
<p><font face="宋体" color=red size=5>可以用于平时调车的时候，打印变量波形，如对比电机设定曲线和实际曲线来观察闭环控制效果。</font></p>
<h4 id="432-使用效果"><a class="markdownIt-Anchor" href="#432-使用效果"></a> 4.3.2 使用效果</h4>
<p><mark>如图是六轴陀螺仪三轴的工作曲线：</mark></p>
<p><img src="https://pic.imgdb.cn/item/64301d140d2dde5777a9999d.png" alt="在这里插入图片描述" /></p>
<br>
<p>（👇<strong>官网</strong>及<strong>使用教程</strong>）</p>
<p><a href="https://www.segger.com/products/debug-probes/j-link/tools/j-scope/">J-Scope 官网</a></p>
<p><a href="https://blog.csdn.net/qq_23852045/article/details/108837881">使用教程</a></p>
<br>
<hr />
<h3 id="44-matlab"><a class="markdownIt-Anchor" href="#44-matlab"></a> 4.4 MATLAB</h3>
<p>作为一个工科生，<mark>MATLAB</mark>有多重要就不用多说了吧，基本什么都能干。 比如，我们调车的时候，云台的串级pid大部分都是用的经验调</p>
<p>参。如果能熟练掌握<mark>MATLAB</mark> ,就可以通过仿真来整定参数。</p>
<p><img src="https://pic.imgdb.cn/item/64301d330d2dde5777aa1643.png" alt="在这里插入图片描述" /></p>
<p>（👇具体的实现方法可以参考这两篇文章）</p>
<p><a href="https://bbs.robomaster.com/thread-4941-1-1.html">系统辨识基础</a></p>
<p><a href="https://bbs.robomaster.com/thread-5059-1-1.html">云台传递函数</a></p>
<br>
<hr />
<br>
<h2 id="️参考文章"><a class="markdownIt-Anchor" href="#️参考文章"></a> ❗️参考文章</h2>
<p><a href="https://developer.arm.com/documentation/101407/0537/Debugging/Code-and-Data-Trace--Cortex-M-/Tracepoint-Expressions">官方文档</a></p>
<p><a href="https://blog.csdn.net/weixin_42876465/article/details/107171974?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165881686416780357239382%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=165881686416780357239382&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-107171974-null-null.185%5Ev2%5Econtrol&amp;utm_term=%E8%B0%83%E8%AF%95&amp;spm=1018.2226.3001.4450"> keil 调试经验总结</a></p>
<p><a href="https://blog.csdn.net/weixin_42876465/article/details/86545913">STM32调试利器之ITM</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU2MDgyNzgyMw%3D%3D&amp;chksm=fc035d33cb74d425b8daf8e162aa4f24b2993698426823b7c77f25e38d7c7fa6730f202f995f&amp;idx=1&amp;mid=2247483891&amp;scene=21&amp;sn=569d5e4f49cfff2b59da5b68b707fe51#wechat_redirect">KEIL 调试的 ini 文件有什么用</a></p>
<p><a href="https://blog.csdn.net/weixin_46623350/article/details/105305426">STM32开发，通过SWO功能输出Printf函数到Utility</a></p>
]]></content>
      <categories>
        <category>stm32</category>
        <category>调试</category>
      </categories>
      <tags>
        <tag>单片机</tag>
        <tag>arm</tag>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>IMX6ULL学习笔记(一) —— 寄存器组</title>
    <url>/2023/06/02/IMX6ULL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)%20%E2%80%94%E2%80%94%20%E5%AF%84%E5%AD%98%E5%99%A8%E7%BB%84/</url>
    <content><![CDATA[<h1 id="imx6ull-学习笔记"><a class="markdownIt-Anchor" href="#imx6ull-学习笔记"></a> IMX6ULL 学习笔记</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2023.4.27」</em></p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<p><strong>简介：</strong>   随记, 关于I.MX6ULL 系统SOC 的部分寄存器</p>
</blockquote>
<p><br> <span id="more"></span></p>
<hr />
<br>
<h2 id="1️⃣-裸机"><a class="markdownIt-Anchor" href="#1️⃣-裸机"></a> 1️⃣ 裸机</h2>
<blockquote>
<p>简单了解原理</p>
</blockquote>
<h3 id="11-gun汇编"><a class="markdownIt-Anchor" href="#11-gun汇编"></a> 1.1 GUN汇编</h3>
<h4 id="111-与arm汇编的伪操作差异"><a class="markdownIt-Anchor" href="#111-与arm汇编的伪操作差异"></a> 1.1.1 与<code>ARM</code>汇编的伪操作差异</h4>
<p><img src="https://pic.imgdb.cn/item/64789ca3f024cca17394b9af.png" alt="image-20230430150223464" /></p>
<br>
<hr />
<h4 id="112-常见gun-arm-伪操作指令"><a class="markdownIt-Anchor" href="#112-常见gun-arm-伪操作指令"></a> 1.1.2 常见<code>GUN ARM</code> 伪操作指令</h4>
<img src="https://pic.imgdb.cn/item/64789ca3f024cca17394b9c0.png" alt="image-20230430150409583" style="zoom:150%;" />
<blockquote>
<p>补充数据传输指令</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca3f024cca17394b9d8.png" alt="image-20230428122910132" /></p>
<br>
<hr />
<h4 id="113"><a class="markdownIt-Anchor" href="#113"></a> 1.1.3</h4>
<blockquote>
<p>在<code>GUN ARM</code> 汇编语言中 ,  标号<code>_start</code> 是汇编程序的入口 , 如果希望这个标号被其他文件引用 , 只需要在定义的地方使用 <code>.globa</code> 伪操作声明即可 ( <code>.globa</code>  表示定义一个全局标号 )</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.globa -start</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><em><strong><code>.section</code> 伪操作</strong></em></p>
<blockquote>
<p>可以通过 <code>.section</code> 伪操作自定义一个段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.section &lt;section name&gt; &#123;,&quot;&lt;flags&gt;&quot;&#125;</span><br><span class="line"></span><br><span class="line">.section .mysection &quot;awx&quot;   @注释 : 定义一个可写、可执行的段</span><br><span class="line">.align 2</span><br></pre></td></tr></table></figure>
<ul>
<li>注意在使用伪操作<code>.section</code>定义一个段时，每个段 <em><strong>以段名开始</strong></em> ，以 <em><strong>下一个段名或文件结尾</strong></em> 作为结束标记。</li>
<li>在定义段名时，注意不要和系统预留的段名冲突，(如<code>.text</code>、<code>.data</code>、<code>.bss</code>、<code>.rodata</code> )</li>
</ul>
<br>
<p><em><strong>系统预留的段名</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394b9ef.png" alt="image-20230430151811342" /></p>
</blockquote>
<br> 
<hr />
<h4 id="114-基本数据格式"><a class="markdownIt-Anchor" href="#114-基本数据格式"></a> 1.1.4 基本数据格式</h4>
<blockquote>
<p>在定义数据的过程中需要注意 :</p>
<ul>
<li><em><strong>二进制</strong></em> 数据通常以<code>0B</code>或<code>0b</code>开头</li>
<li><em><strong>八进制</strong></em> 数据以<code>0</code>开头</li>
<li><em><strong>十六进制</strong></em> 数据以<code>0x</code>开头</li>
<li><em><strong>十进制</strong></em> 数据则以<code>非0</code>数字开头</li>
<li><em><strong>负数</strong></em> 前面加  <code>-</code></li>
<li><em><strong>取补</strong></em> 用 <code>~</code></li>
<li><em><strong>不相等</strong></em> 用  <code>〈〉</code></li>
<li>其他运算符号如<code>+、-、*、%、&lt;、&lt;&lt;、\&gt;、&gt;&gt;、|、&amp;、^、！、==、&gt;=、&amp;&amp;</code>与C语言语法相似</li>
<li><em><strong>字符串常量</strong></em> 要用双引号 <code>&quot;&quot;</code> 括起来</li>
<li>使用<code>.ascii</code>定义字符串时要自行在结尾加  <code>\0</code></li>
<li><code>.string</code> 伪操作可以定义多个字符串</li>
<li><code>.asciz</code> 伪操作可以定义一个以<code>NULL</code>字符结尾的字符串</li>
<li>用<code>.rep</code>t  伪操作可以重复定义数据</li>
<li>在<code>GNU ARM</code>汇编程序中经常使用小圆点  <code>.</code>  表示 <em><strong>当前指令的地址</strong></em></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.ascii &quot;hello\0&quot;</span><br><span class="line">.string &quot;hello&quot;, &quot;world!&quot;</span><br><span class="line">.asciz &quot;hello&quot;</span><br><span class="line">.rept 3 .byte 0x10 .endr</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<hr />
<h4 id="115-equ-伪操作"><a class="markdownIt-Anchor" href="#115-equ-伪操作"></a> 1.1.5  .equ 伪操作</h4>
<blockquote>
<p>使用 <em><strong>伪操作</strong></em> 定义浮点数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@标签: 命令</span><br><span class="line">f:</span><br><span class="line">.float 3.14</span><br><span class="line">.equ f,3.1415</span><br></pre></td></tr></table></figure>
<ul>
<li>上面通过使用<code>.float</code>伪操作定义一个浮点数<code>f</code>，并初始化为<code>3.14</code></li>
<li>并通过<code>.equ</code>伪操作 将浮点数重新赋值成 <code>3.1415</code></li>
</ul>
</blockquote>
<br>
<blockquote>
<p><code>.equ</code>伪操作除了给数据赋值，还可以把常量定义在代码段中，然后在代码中直接引用。类似C语言中的<code>＃define</code>宏定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.section .data</span><br><span class="line">.equ DELAY,100</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">.section .text</span><br><span class="line">...</span><br><span class="line">MOV R0,$DELAY</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<hr />
<h4 id="116-补充"><a class="markdownIt-Anchor" href="#116-补充"></a> 1.1.6 补充</h4>
<p><code>stmdb</code>和<code>ldmia</code></p>
<blockquote>
<ul>
<li><strong>stmdb和ldmia指令一般配对使用</strong></li>
<li><strong>stmdb用于将寄存器压栈</strong></li>
<li><strong>ldmia用于将寄存器弹出栈</strong></li>
<li><strong>它们的作用是保存使用到的寄存器</strong></li>
</ul>
</blockquote>
<br>
<blockquote>
<p>ARM指令的多数据传输（STM、LDM）中，提到：多寄存器的Load和Store指令分为2组：</p>
<ul>
<li>一组用于数据的存储与读取，对应于IA、IB、DA、DB，</li>
<li>一组用于堆栈操作，对应于FD、ED、FA、EA，</li>
</ul>
</blockquote>
<ul>
<li><code>STMIB</code>（地址先增而后完成操作）、<code>STMFA</code>（满递增堆栈）；<code>LDMIB</code>、<code>LDMED</code>；</li>
<li><code>STMIA</code>（完成操作而后地址递增）、<code>STMEA</code>（空递增堆栈）；<code>LDMIA</code>、<code>LDMFD</code>；</li>
<li><code>STMDB</code>（地址先减而后完成操作）、<code>STMFD</code>（满递减堆栈）；<code>LDMDB</code>、<code>LDMEA</code>；</li>
<li><code>STMDA</code>（完成操作而后地址递减）、<code>STMED</code>（空递减堆栈）;<code>LDMDA</code>、<code>LDMFA</code>。</li>
</ul>
<br>
<ul>
<li><code>IA</code>模式表示：每次传送后地址<code>+4；(After Increase)</code></li>
<li><code>DB</code>模式表示：每次传送前地址<code>-4；(Before Decrease)</code></li>
</ul>
<hr />
<h3 id="12-io复用表"><a class="markdownIt-Anchor" href="#12-io复用表"></a> 1.2 IO复用表</h3>
<blockquote>
<p>在《imx6ull 中文参考手册》 199页</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394ba1c.png" alt="image-20230428162002702" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394ba4f.png" alt="image-20230428162114657" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394baa1.png" alt="image-20230428162132536" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bae9.png" alt="image-20230428162148167" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bb03.png" alt="image-20230428162217127" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bb38.png" alt="image-20230428162232673" /></p>
<br>
<blockquote>
<p><em><strong>可以看见 :</strong></em></p>
<ul>
<li>GPIO1 有 32 个 IO</li>
<li>GPIO2 有 22 个 IO</li>
<li>GPIO3 有 29 个 IO</li>
<li>GPIO4 有 29 个 IO</li>
<li>GPIO5 有 12 个 IO</li>
</ul>
</blockquote>
<hr />
<h3 id="13-复用为gpio时的寄存器"><a class="markdownIt-Anchor" href="#13-复用为gpio时的寄存器"></a> 1.3 复用为GPIO时的寄存器</h3>
<h4 id="131-io复用功能和io电气属性"><a class="markdownIt-Anchor" href="#131-io复用功能和io电气属性"></a> 1.3.1  IO复用功能和IO电气属性</h4>
<ul>
<li>
<p><code>SW_MUX_CTL_PAD_*</code>   : 配置IO口的复用功能</p>
<blockquote>
<p>以<code>GPIO1_IO1</code>举例:</p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bb5b.png" alt="image-20230428164534841" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bb6d.png" alt="image-20230428164550307" /></p>
<ul>
<li>可以看到<code>GPIO1_IO01</code>可以复用为8种不同功能的IO</li>
</ul>
</blockquote>
</li>
</ul>
<br>
<ul>
<li>
<p><code>SW_PAD_CTL_PAD_*</code> : 配置IO口的电气属性</p>
<blockquote>
<p>还是以<code>GPIO1_IO00</code> 举例:</p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bba2.png" alt="image-20230428165738791" /></p>
<ul>
<li>用于配置<code>IO</code>的 上下拉电阻、IO速度、IO驱动能力、压摆率等电气属性</li>
<li>一般主要设置 <em><strong>压摆率</strong></em> （SRE）、<em><strong>驱动能力</strong></em> （DSE）、<em><strong>速度</strong></em>  (SPEED )、<em><strong>上下拉</strong></em> （ PUS）、 <em><strong>开漏</strong></em> （ODE）</li>
</ul>
</blockquote>
</li>
</ul>
<br>
<hr />
<h4 id="132-复用为gpio时其他寄存器"><a class="markdownIt-Anchor" href="#132-复用为gpio时其他寄存器"></a> 1.3.2 复用为GPIO时其他寄存器</h4>
<ul>
<li><em><strong>DR寄存器:</strong></em>   数据寄存器
<ul>
<li>寄存器中的每一位对应一个IO</li>
<li>当 GPIO 被配置为 <em><strong>输出功能</strong></em>  以后 , 向指定的位写入数据那么相应的 IO 就会输出相应的高低电平 ( <em><strong>如 :</strong></em>  <code>GPIO1_IO00</code> 输出高电平,那么就应该设置 <code>GPIO1.DR=1</code>)</li>
<li>当 GPIO 被配置为 <em><strong>输出功能</strong></em>  以后 ,  此寄存器就保存着对应 IO 的电平值 (<em><strong>如 :</strong></em>  当 <code>GPIO1_IO00</code> 这个引脚接地的话，那么 <code>GPIO1.DR</code> 的 <code>bit0</code> 就是 0)</li>
</ul>
</li>
</ul>
<br>
<ul>
<li><em><strong>GDIR 寄存器</strong></em> : 方向寄存器
<ul>
<li>寄存器中的每一位对应一个IO , 用来设置某个IO的工作方向</li>
<li>如果要设置一个GPIO为输入 , 则对应的位设置为 <em><strong>0</strong></em> (<em><strong>如 :</strong></em> 要设置 <code>GPIO1_IO00</code> 为输入，那么 <code>GPIO1.GDIR=0</code>)</li>
<li>如果要设置一个GPIO为输出 , 则对应的位设置为 <em><strong>1</strong></em></li>
</ul>
</li>
</ul>
<br>
<ul>
<li><em><strong>PSR 寄存器 :</strong></em>   状态寄存器
<ul>
<li>寄存器中的每一位对应一个IO , 获取对应<code>GPIO</code>的状态</li>
<li>读取相应的位即可获取对应的 GPIO 的状态，也就是 GPIO 的高低电平值 ( 功能和 <em><strong>输入状态</strong></em> 下的 <code>DR</code> 寄存器一样。 )</li>
</ul>
</li>
</ul>
<br>
<ul>
<li>
<p><em><strong>ICR1 和 ICR2寄存器</strong></em> :  中断控制寄存器</p>
<ul>
<li>
<p>寄存器中的每两位对应一个IO ,  <code>ICR1</code>用于配置 <em><strong>低16个GPIO</strong></em>  <em>(IO0 ~ IO15)</em>  , ICR2 用于配置 <em><strong>高 16 个 GPIO</strong></em>  <em>( IO16~ IO31 )</em></p>
</li>
<li>
<p>这两个位用来配置中断的触发方式</p>
<blockquote>
<p><em><strong>举例:</strong></em>   设置<code>GPIO1_IO15</code>为上升沿触发中断  ( <code>GPIO1.ICR1=2&lt;&lt;30</code> )</p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bbc7.png" alt="image-20230428173120968" /></p>
</blockquote>
</li>
</ul>
</li>
</ul>
<br>
<ul>
<li><em><strong>IMR  寄存器</strong></em> : 中断使能寄存器
<ul>
<li>寄存器中的每一位对应一个IO , 用来控制 GPIO 的中断禁止和使能</li>
<li>如果 <em><strong>使能</strong></em> 某个 GPIO 的中断，那么设置相应的位为 <em><strong>1</strong></em> ; ( <em><strong>如</strong></em>:  使能 <code>GPIO1_IO00</code> 的中断，那么就可以设置 <code>GPIO1.MIR=1</code>  )</li>
<li><em><strong>禁止中断</strong></em> , 则设置相应的位 <em><strong>0</strong></em></li>
</ul>
</li>
</ul>
<br>
<ul>
<li><em><strong>ISR 寄存器</strong></em> : 中断状态寄存器
<ul>
<li>寄存器中的每一位对应一个IO , 用于判断<code>GPIO</code> 中断是否发生</li>
<li>只要某个 GPIO 的中断发生 , 那么ISR中相应的位就会被 <em><strong>置1</strong></em></li>
<li>在处理完中断之后 , 必须清除中断标志位</li>
</ul>
</li>
</ul>
<br>
<ul>
<li><em><strong>EDGE_SEL 寄存器</strong></em> : 边沿选择寄存器
<ul>
<li>寄存器中的每一位对应一个IO , 用来设置边沿中断</li>
<li>这个寄存器会覆盖 <code>ICR1</code> 和 <code>ICR2</code> 的设置</li>
<li>如果相应的位被 <em><strong>置 1</strong></em>，那么就相当与设置了对应的 GPIO 是 <em><strong>上升沿和下降沿(双边沿)</strong></em> 触发</li>
<li>( <em><strong>例如 :</strong></em>  设置 <code>GPIO1.EDGE_SEL=1</code>，那么就表示 <code>GPIO1_IO01</code> 是双边沿触中断 )</li>
</ul>
</li>
</ul>
<br>
<hr />
<h3 id="14-ccm时钟控制寄存器-ccm_ccgrx"><a class="markdownIt-Anchor" href="#14-ccm时钟控制寄存器-ccm_ccgrx"></a> 1.4 CCM时钟控制寄存器 (CCM_CCGRx)</h3>
<blockquote>
<p><code>CCM_CCGRx</code> 寄存器 用于使能各个外设模块的时钟 ,  为<strong>每2位</strong>对应一个外设时钟</p>
<p><em><strong>CGR值如下所示:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bbe4.png" alt="image-20230429161134535" /></p>
</blockquote>
<br>
<hr />
<h4 id="141-ccm_ccgr0"><a class="markdownIt-Anchor" href="#141-ccm_ccgr0"></a> 1.4.1  CCM_CCGR0</h4>
<blockquote>
<p>地址  : 0x 20C_4068H</p>
<p><em><strong>使能方式 :</strong></em></p>
<blockquote>
<p><em><strong>以GPIO2的时钟为例</strong></em> ( CCM_CCGR0 = 3&lt;&lt;30 )</p>
</blockquote>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bc16.png" alt="image-20230429160800166" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bc2a.png" alt="image-20230429160813754" /></p>
<br>
<hr />
<h4 id="142-ccm_ccgr1"><a class="markdownIt-Anchor" href="#142-ccm_ccgr1"></a> 1.4.2  CCM_CCGR1</h4>
<blockquote>
<p>地址 :  <code>0x20C_406C</code> H</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bc54.png" alt="image-20230429161435561" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca4f024cca17394bca3.png" alt="image-20230429161400848" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bcc6.png" alt="image-20230429161502069" /></p>
<br>
<hr />
<h4 id="143-ccm_ccgr2"><a class="markdownIt-Anchor" href="#143-ccm_ccgr2"></a> 1.4.3 CCM_CCGR2</h4>
<blockquote>
<p>地址 :  <code>0x 20C_4070</code> H</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bd00.png" alt="image-20230429161625904" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bd0e.png" alt="image-20230429161655183" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bd55.png" alt="image-20230429161704139" /></p>
<br>
<hr />
<h4 id="144-ccm_ccgr3"><a class="markdownIt-Anchor" href="#144-ccm_ccgr3"></a> 1.4.4  CCM_CCGR3</h4>
<blockquote>
<p>地址 <code>0x20C_4074</code> H</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bd6c.png" alt="image-20230429161831307" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bda8.png" alt="image-20230429161858939" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394be0e.png" alt="image-20230429161908392" /></p>
<br>
<hr />
<h4 id="145-ccm_ccgr4"><a class="markdownIt-Anchor" href="#145-ccm_ccgr4"></a> 1.4.5  CCM_CCGR4</h4>
<blockquote>
<p>地址 :  <code>0x20C_4078</code> H</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394be2e.png" alt="image-20230429162005946" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394be6e.png" alt="image-20230429162020687" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394be92.png" alt="image-20230429162029214" /></p>
<br>
<hr />
<h4 id="146-ccm_ccgr5"><a class="markdownIt-Anchor" href="#146-ccm_ccgr5"></a> 1.4.6  CCM_CCGR5</h4>
<blockquote>
<p>地址 : <code>0x20C_407C</code> H</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394beb9.png" alt="image-20230429162152246" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394befe.png" alt="image-20230429162212873" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bf17.png" alt="image-20230429162223164" /></p>
<br>
<hr />
<h4 id="147-ccm_ccgr6"><a class="markdownIt-Anchor" href="#147-ccm_ccgr6"></a> 1.4.7  CCM_CCGR6</h4>
<blockquote>
<p>地址 : <code>0x20C_4080</code> H</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bf77.png" alt="image-20230429162317538" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bf85.png" alt="image-20230429162341515" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bfb6.png" alt="image-20230429162350677" /></p>
<br>
<hr />
<h3 id="15-io复用为gpio"><a class="markdownIt-Anchor" href="#15-io复用为gpio"></a> 1.5 IO复用为GPIO</h3>
<p><em><strong>一般步骤:</strong></em></p>
<ul>
<li>使能 <code>GPIO</code> 对应的时钟 (<code>CCM_CCGRx</code> 寄存器)</li>
<li>设置寄存器 <code>IOMUXC_SW_MUX_CTL_PAD_XX_XX</code>，设置 IO 的复用功能</li>
<li>设置寄存器 <code>IOMUXC_SW_PAD_CTL_PAD_XX_XX</code>，设置 IO 的上下拉、速度等电气属性</li>
<li>配置GPIO专属寄存器 , 配置GPIO的 <em><strong>输入输出</strong></em> 、<em><strong>是否使用中断</strong></em> 等 （<code>DR</code> 、<code>GDIR</code>、<code>ICR</code>等寄存器）</li>
</ul>
<br>
<hr />
<h3 id="16-可执行文件"><a class="markdownIt-Anchor" href="#16-可执行文件"></a> 1.6  可执行文件</h3>
<blockquote>
<p>将裸机的汇编点灯程序编译成可执行文件 <code>.bin</code> , 需要在<code>.bin</code> 文件前面添加 <em><strong>头部信息</strong></em></p>
<p>包括 <em><strong>镜像向量表</strong></em> ( <code>IVT</code>) 、<em><strong>Boot启动数据</strong></em> （<code>Boot data</code> ）、 <em><strong>配置信息</strong></em> （<code>DCD</code>）等 ， 后面才是 <em><strong>用户可执行代码</strong></em>   （ <code>Application</code>）</p>
</blockquote>
<br>
<p><em><strong>如下所示:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bfd6.png" alt="image-20230430215216894" /></p>
<blockquote>
<ul>
<li>
<p>不同引导设备的 <em><strong>偏移量</strong></em> 与 加载区域大小 ( 即 <em><strong>头部信息</strong></em>)</p>
<blockquote>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394bff9.png" alt="image-20230430220127202" /></p>
<br>
<ul>
<li>则 <code>IVT + Boot Data + DCD</code> 的大小为  <em><strong>加载区域大小</strong></em> 减去 <em><strong>偏移量</strong></em>  ( <code>4K Byte - 1K Byte = 3K Byte</code> )</li>
</ul>
</blockquote>
<br>
</li>
<li>
<p>在 <code>IVT</code> 和 <code>Boot Data</code> 中存放着各个 部分的 <em><strong>链接地址</strong></em></p>
<blockquote>
<p><em><strong>如 :</strong></em></p>
<ul>
<li>
<p><code>entry</code>  存放的是镜像第一行指令所在的位置 , 即 <em><strong>用户执行代码</strong></em> 的入口 , 可以看到箭头指向了 <code>Application</code></p>
</li>
<li>
<p><code>self</code> 存放的是<code>IVT</code> 复制到 <code>DDR</code> 中以后的 <em><strong>首地址</strong></em>  , 可以看到箭头目的地址指向 <code>IVT</code>的开头</p>
</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="161-各部分起始地址"><a class="markdownIt-Anchor" href="#161-各部分起始地址"></a> 1.6.1 各部分起始地址</h4>
<p>在裸机点灯的程序中, 链接的地址是 <code>0x87800000</code></p>
<blockquote>
<ul>
<li>
<p>即 用户执行代码 (<code>Application</code>) 的 起始地址  <code>entry = 0x87800000</code></p>
</li>
<li>
<p>镜像向量表 ( <code>IVT</code>) 的起始地址 <code>self = 0x877FF400</code>  [ <code>0x87800000 - 3k byte = 0x877FF400</code> ]</p>
</li>
<li>
<p><code>Boot</code> 启动数据 (<code>Boot Data</code>) 的起始地址 <code>boot data = 0x877FF420</code></p>
<ul>
<li>[ 此处是<code>IVT</code>的地址 加上 <code>IVT</code>的长度   <code>0x877FF400 + 32 Byte = 0x877FF420</code>]<br />
<br></li>
</ul>
</li>
<li>
<p>配置信息 ( <code>DCD</code> ) 的起始地址 <code>dcd = 0x877FF42C</code></p>
<ul>
<li>[ 此处是  <code>Boot Data</code>  的地址 加上 <code>Boot data</code> 的长度  <code>0x877FF420 + 12 Byte = 0x877FF42C</code> ]</li>
</ul>
<br>
</li>
<li>
<p>整个头部信息的 起始地址 <code>start = 0X877FF000</code></p>
<ul>
<li>[ 此处是  IVT 的起始地址 减去 1K Byte 的偏移量  <code>0x877FF400 - 1K Byte = 0X877FF000</code> ]</li>
</ul>
<br>
</li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="162-镜像向量表"><a class="markdownIt-Anchor" href="#162-镜像向量表"></a> 1.6.2  镜像向量表</h4>
<p>镜像向量表 ( <code>IVT</code> ) 存放了 <em><strong>8条</strong></em> 信息 ,  每条信息大小都是 <em><strong>32位</strong></em></p>
<br>
<p><em><strong>IVT 存放的内容:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca5f024cca17394c033.png" alt="image-20230501144049011" /></p>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c053.png" alt="image-20230501144104357" /></p>
<br>
<p><em><strong>header 存放格式:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c081.png" alt="image-20230501144355924" /></p>
<ul>
<li><code>Tag</code> 为一个字节长度，值固定为 <code>0XD1</code></li>
<li><code>Length</code> 为 <em><strong>大端模式</strong></em> 的两字节字段 , 存放着 <code>IVT</code>的 <em><strong>长度信息</strong></em>  , IVT 长度固定为32字节 (  <code>0x0020</code> ) , 则<code>Length = 0x2000</code></li>
<li><code>Version</code>  为单字节字段 , 值为 <code>0x40</code> 或 <code>0x41</code></li>
</ul>
<br>
<hr />
<h4 id="163-boot-data"><a class="markdownIt-Anchor" href="#163-boot-data"></a> 1.6.3  Boot Data</h4>
<p><code>Boot Data</code> 存放了 <em><strong>3条</strong></em> 信息 ,  每条信息大小都是 <em><strong>32位</strong></em></p>
<br>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c0bc.png" alt="image-20230501145200799" /></p>
<ul>
<li><code>start</code>  存放的是整个头部信息的存放地址 , 包含偏移量</li>
<li><code>length</code> 存放的是整个镜像 文件的大小</li>
<li><code>plugin</code> 插件</li>
</ul>
<br>
<hr />
<h4 id="164-dcd数据"><a class="markdownIt-Anchor" href="#164-dcd数据"></a> 1.6.4  DCD数据</h4>
<blockquote>
<ul>
<li>
<p>DCD 存放 程序镜像中包含的各种配置信息 ( 即 <code>IMX6ULL</code> <em><strong>寄存器地址</strong></em> 和对应 <em><strong>配置信息</strong></em> 的集合 )</p>
</li>
<li>
<p>因为复位芯片后 , <code>I.MX6U</code> 片内的所有寄存器都会复位为默认值，但是这些默认值往往不是我们想要的值 , 通过在<code>DCD</code>中添加这部分寄存器的配置信息 ( 如系统时钟 ) ,  <code>Boot ROM</code> 会使用这些寄存器地址和配置集合来初始化相应的寄存器</p>
</li>
<li>
<p>DCD 区域不能超过 1768Byte</p>
</li>
</ul>
</blockquote>
<br>
<p><em><strong>DCD格式 :</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c0da.png" alt="image-20230501151356227" /></p>
<br>
<p><em><strong>Header格式</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c0f4.png" alt="image-20230501151456739" /></p>
<ul>
<li><code>Tag</code> 是单字节，固定为 <code>0XD2</code></li>
<li><code>Length</code> 为 <em><strong>大端模式</strong></em> 的两字节字段 , 存放着 <code>DCD</code>的 <em><strong>长度信息</strong></em></li>
<li><code>Version</code> 为单字节 ,  固定为<code>0x41</code></li>
</ul>
<br>
<p><em><strong>CMD 格式:</strong></em></p>
<blockquote>
<p>CMD 包含 <em><strong>写数据命令</strong></em> 、<em><strong>检查数据命令</strong></em>、<em><strong>NOP命令</strong></em>、<em><strong>解锁命令</strong></em></p>
<br>
<p>其中 <em><strong>写数据命令</strong></em> 格式如下：</p>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c128.png" alt="image-20230501152014456" /></p>
<p><img src="https://pic.imgdb.cn/item/6479faadf024cca173f2471b.png" alt="image-20230501152025070" /></p>
<ul>
<li>Tag 是单字节，固定为 <code>0xCC</code></li>
<li><code>Length</code> 为 <em><strong>大端模式</strong></em> 的两字节字段 , 存放着 <em><strong>写入数据</strong></em> 的 <em><strong>长度信息</strong></em></li>
<li><code>CMD</code> 是命令 , 包含<code>header</code></li>
<li><code>Address</code> 是地址 ,  存放着写入数据的 <em><strong>目标地址</strong></em>  ( 即寄存器地址 )</li>
<li><code>Value / Mask</code> 值或掩码 , 存放着前一个 地址 ( <code>Address</code>) 的数据值 ( 即寄存器值)</li>
</ul>
<br>
<p><code>Parameter</code> 参数 的格式如下:</p>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c14b.png" alt="image-20230501152610550" /></p>
<ul>
<li><code>Parameter</code> 为单字节数据</li>
<li><code>bytes</code> 表示是目标位置宽度，单位为 <code>byte</code>，可以选择 1、2、和 4 字节</li>
<li><code>flags</code> 是命令控制标志位</li>
</ul>
</blockquote>
<br>
<p><em><strong>例:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c1a5.png" alt="image-20230501152843932" /></p>
<hr />
<h3 id="17-点灯gpio复用测试"><a class="markdownIt-Anchor" href="#17-点灯gpio复用测试"></a> 1.7 点灯(GPIO复用测试)</h3>
<h4 id="171-启动文件starts"><a class="markdownIt-Anchor" href="#171-启动文件starts"></a> 1.7.1 启动文件(start.S)</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 定义全局入口符号</span><br><span class="line">.global _start</span><br><span class="line"></span><br><span class="line">_start:</span><br><span class="line"></span><br><span class="line">mrs r0, cpsr      // 将CPSr寄存器的值读到 r0 中</span><br><span class="line">bic r0, r0, #0x1f  // 0001 1111 将低5位清零</span><br><span class="line">orr r0, r0, #0x13  // 0001 0011 将 [M0 ~ M4]设置为SVC模式</span><br><span class="line">msr cpsr, r0      // 将r0 的值重新写回cpsr寄存器中</span><br><span class="line"></span><br><span class="line">ldr sp, =0x80200000  // Cortex -A 是FD满递减栈 , DDR的起始地址是0x80000000 , 栈空间 2MB</span><br><span class="line"></span><br><span class="line">b main             // 跳转main函数</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="172-源文件与头文件"><a class="markdownIt-Anchor" href="#172-源文件与头文件"></a> 1.7.2 源文件与头文件</h4>
<p><em><strong>main.c &amp;&amp; led.c</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/******************************** main.c ******************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 短时间延时函数</span></span><br><span class="line"><span class="comment">* @param - n : 要延时循环次数(空操作循环次数，模式延时)</span></span><br><span class="line"><span class="comment">* @return : 无</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay_short</span><span class="params">(<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @description : 延时函数,在 396Mhz 的主频下延时时间大约为 1ms</span></span><br><span class="line"><span class="comment"> * @param - n : 要延时的 ms 数</span></span><br><span class="line"><span class="comment"> * @return : 无</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_short(<span class="number">0x7ff</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    led_init();</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        set_led_off();</span><br><span class="line">        delay(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">        set_led_on();</span><br><span class="line">        delay(<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************** led.c ******************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_init</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 使能时钟 */</span></span><br><span class="line">    CCM-&gt;CCGR1 = (<span class="number">3</span> &lt;&lt; <span class="number">26</span>) | (<span class="number">3</span> &lt;&lt; <span class="number">18</span>) ; <span class="comment">//使能GPIO1的时钟 和 SIM时钟 , 因为是烧录到SD卡的</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* IO复用为GPIO */</span></span><br><span class="line">    SW_MUX_GPIO1_IO03 = <span class="number">0x05</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 电气属性设置 */</span></span><br><span class="line">    SW_PAD_GPIO1_IO03 = <span class="number">0x00001058</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* GPIO 设置为输出 */</span></span><br><span class="line">    GPIO1-&gt;GDIR  = <span class="number">1</span> &lt;&lt; <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* GPIO初始化为低电平 */</span></span><br><span class="line">    GPIO1-&gt;DR = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_led_on</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO1-&gt;DR &amp;= ~(<span class="number">1</span> &lt;&lt; <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_led_off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO1-&gt;DR |= (<span class="number">1</span> &lt;&lt; <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><em><strong>main.h $$ led.h</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/******************************** led.h ******************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_init</span> <span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">set_led_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">set_led_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************** main.h ******************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAIN_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAIN_H</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * 外设寄存器组的基地址 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CCM_BASE					(0X020C4000)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO1_BASE                  (0x0209C000)</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* </span></span><br><span class="line"><span class="comment">  * IOMUX 相关寄存器地址</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SW_MUX_GPIO1_IO03   *((volatile unsigned int *)0X020E0068)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SW_PAD_GPIO1_IO03   *((volatile unsigned int *)0X020E02F4)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * CCM寄存器结构体定义</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCDR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CSR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCSR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CACRR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CBCDR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CBCMR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CSCMR1;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CSCMR2;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CSCDR1;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CS1CDR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CS2CDR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CDCDR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CHSCCDR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CSCDR2;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CSCDR3;	</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> RESERVED_1[<span class="number">2</span>];</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CDHIPR;  </span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> RESERVED_2[<span class="number">2</span>];</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CLPCR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CISR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CIMR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCOSR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CGPR;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCGR0;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCGR1;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCGR2;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCGR3;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCGR4;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCGR5;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CCGR6;</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> RESERVED_3[<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> CMEOR;	</span><br><span class="line">&#125; CCM_Type; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * GPIO寄存器结构体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> DR;							</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> GDIR; 							</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> PSR;								</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> ICR1; 							</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> ICR2; 							 </span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> IMR;								 </span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> ISR;			</span><br><span class="line">	<span class="keyword">volatile</span> <span class="type">unsigned</span> <span class="type">int</span> EDGE_SEL;  </span><br><span class="line">&#125;GPIO_Type;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * 外设指针 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CCM					((CCM_Type *)CCM_BASE)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO1				((GPIO_Type *)GPIO1_BASE)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="173-makefile"><a class="markdownIt-Anchor" href="#173-makefile"></a> 1.7.3 Makefile</h4>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">CC =arm-linux-gnueabihf</span><br><span class="line">link :=-ld -Timx6ul.lds -o											 <span class="comment"># 使用链接脚本</span></span><br><span class="line">elf_bin :=-objcopy -O binary -S</span><br><span class="line">obj :=<span class="variable">$(<span class="built_in">subst</span> .S,.o,$(<span class="built_in">wildcard</span> *.S)</span>) <span class="variable">$(<span class="built_in">subst</span> .c,.o,$(<span class="built_in">wildcard</span> *.c)</span>)  <span class="comment">#将c文件和s文件替换成 o 文件</span></span><br><span class="line"></span><br><span class="line"><span class="section">ledc.bin: <span class="variable">$(obj)</span></span></span><br><span class="line">	<span class="variable">$(CC)</span><span class="variable">$(link)</span> ledc.elf <span class="variable">$^</span>              <span class="comment"># 链接</span></span><br><span class="line">	<span class="variable">$(CC)</span><span class="variable">$(elf_bin)</span> ledc.elf <span class="variable">$@</span>			  <span class="comment"># 格式转换</span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o:%.c</span></span><br><span class="line">	<span class="variable">$(CC)</span>-gcc -Wall -nostdlib -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span>  <span class="comment"># -Wall表示显示编译的时候的所有警告 </span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o:%.S</span></span><br><span class="line">	<span class="variable">$(CC)</span>-gcc -Wall -nostdlib -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span>  <span class="comment"># -nostdilib表示不链接系统标准启动文件和库文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm *.o *.bin *.elf</span><br><span class="line">	</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="174-链接脚本"><a class="markdownIt-Anchor" href="#174-链接脚本"></a> 1.7.4 链接脚本</h4>
<figure class="highlight roboconf"><table><tr><td class="code"><pre><span class="line">SECTIONS&#123;</span><br><span class="line">    . = 0<span class="attribute">X87800000;</span></span><br><span class="line"><span class="attribute">    .text</span> :</span><br><span class="line">    &#123;</span><br><span class="line">        start<span class="variable">.o</span></span><br><span class="line">        *(<span class="variable">.text</span>) </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">.rodata</span> ALIGN(4) : &#123;*(<span class="variable">.rodata</span>*)&#125;</span><br><span class="line">    <span class="variable">.data</span> ALIGN(4)   : &#123; *(<span class="variable">.data</span>) &#125;</span><br><span class="line">     __bss_start = .;</span><br><span class="line">     .<span class="attribute">bss ALIGN(4)</span>  : &#123; *(<span class="variable">.bss</span>)  *(COMMON) &#125;</span><br><span class="line">     __bss_end = .;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>使用关键字 <code>SECTIONS</code> , 描述输出文件的内存布局</li>
<li><code>.</code>  是 <em><strong>定位计数器</strong></em> , 其值表示以其为地址开始 , 这里是以 <code>0x87800000</code> 为起始地址</li>
<li><code>.text</code> <code>.rodata</code> <code>.data</code> <code>. bss</code> 分别是 <em><strong>代码段</strong></em> 、<em><strong>只读数据段</strong></em>、<em><strong>数据段</strong></em>、<em><strong>bss段</strong></em></li>
<li>这几个段名冒号后面的 <code>ALIGN（4）</code> 表示以 <em><strong>四字节对齐</strong></em>  , 大括号里面表示输入文件 ( 即将什么文件 放入哪一段)</li>
<li><code>__bss_start</code> 和  <code>__bss_end</code> 相当于两个变量  , 其值均为定位符 <code>.</code> , 分别报存了 <code>bss</code>段 的起始地址 和 结束地址 , 方便对<code>bss</code>段进行清零</li>
</ul>
</blockquote>
<br>
<hr />
<h3 id="18-时钟树"><a class="markdownIt-Anchor" href="#18-时钟树"></a> 1.8 时钟树</h3>
<br>
<blockquote>
<ul>
<li>
<p>时钟树由三部分组成：<strong>时钟切换控制器，根时钟产生器，系统时钟</strong></p>
<ul>
<li>
<p><em><strong>时钟切换控制器:</strong></em>  用来将外部晶振进行倍频，以实现稳定且高频的时钟信号。</p>
</li>
<li>
<p><em><strong>根时钟产生器:</strong></em>  在时钟切换控制器配置完成之后的输出时钟就成了根时钟产生器的时钟源，在根时钟产生器中，经过寄存器配置之后，就成为了外设时钟的时钟源</p>
</li>
</ul>
</li>
<li>
<p><strong>一个外设的时钟信号的产生途径</strong>：晶振向芯片输入时钟信号，信号进入时钟切换控制器，经过用户配置，产生<code>PLL</code>时钟信号，该信号进入根时钟产生步骤，经过分频或倍频，最终成为系统某个外设的时钟信号。</p>
</li>
</ul>
<br>
</blockquote>
<p><em><strong>主时钟生成</strong></em></p>
<img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c1b3.png" alt="image-20230505192304352" style="zoom:150%;" />
<br>
<blockquote>
<ul>
<li>
<p><code>ARM_PLL（PLL1）</code>，此路 <code>PLL</code> 是供 <code>ARM</code> 内核使用的，<code>ARM</code> 内核时钟就是由此 <code>PLL</code>生成的，此 <code>PLL</code> 通过编程的方式最高可倍频到 <code>1.3GHz</code></p>
</li>
<li>
<p><code>528_PLL(PLL2)</code>，此路 <code>PLL</code> 也叫做 <code>System_PLL</code>，此路 <code>PLL</code> 是固定的 22 倍频 , 即<code>528MHZ</code></p>
<ul>
<li>此PLL 有四路PFD : <code>PLL2_PFD0</code>、<code>PLL2_PFD1</code>、<code>PLL2_PFD2</code>、<code>PLL2_PFD3</code> ， 这些<code>PFD</code>以<code>PLL</code>为基础，经过不同的分频系数产生不同频率的时钟</li>
<li>官方推荐配置参数<img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c1eb.png" alt="image-20230505211259613" /></li>
</ul>
</li>
<li>
<p><code>USB1_PLL(PLL3)</code>，此路 <code>PLL</code> 主要用于 <code>USB1PHY</code>， 此路 <code>PLL</code> 是固定的20倍频 ， 即<code>480MHZ</code></p>
<ul>
<li>此PLL 也有四路PFD ： <code>PLL3__PFD0</code>、<code>PLL3__PFD1</code>、 <code>PLL3__PFD2</code> 、<code>PLL3__PFD3</code></li>
<li>官方推荐配置参数<img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c246.png" alt="image-20230505212211255" /></li>
</ul>
</li>
<li>
<p><code>USB2_PLL(PLL7)</code> 主要用于 <code>USB2PHY</code> ，此路<code>PLL</code>固定为20倍频，因此也是<code>480MHz</code></p>
</li>
<li>
<p><code>ENET_PLL(PLL6)</code> , 此路<code>PLL</code> 固定为  <code>20+5/6</code> 倍频 ,  即<code>480MHz</code></p>
</li>
<li>
<p><code>VIDEO_PLL(PLL5)</code>  用于显示相关的外设 , <code>PLL</code> 的输出范围在 <code>650MHz~1300MHz</code> , 可选 <code>1/2/4/8/16</code> 分频</p>
</li>
<li>
<p><code>AUDIO_PLL(PLL4)</code>  用于音频相关的外设 ,  <code>PLL</code> 的输出范围在 <code>650MHz~1300MHz</code> , 可选 <code>1/2/4</code> 分频</p>
</li>
</ul>
<br>
</blockquote>
<br>
<hr />
<p><em><strong>时钟树</strong></em></p>
<img src="https://pic.imgdb.cn/item/64789ca6f024cca17394c254.png" alt="image-20230505203255809" style="zoom: 150%;" />
<br>
<blockquote>
<ul>
<li>橙色梯形的是 <em><strong>选择器</strong></em> ，可以选择不同的<code>PLL</code>时钟作为 <em><strong>时钟源</strong></em></li>
<li>矩形就是 <em><strong>分频器</strong></em>（2位，3位，6位）</li>
<li>黄色高亮的就是用来配置 <em><strong>选择器</strong></em> 的各种 <em><strong>寄存器</strong></em></li>
<li>红色字是用来配置 <em><strong>分频系数</strong></em> 的 , 就是配置 寄存器的某个几位&lt;&gt;</li>
</ul>
</blockquote>
<br>
<hr />
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>学习</tag>
        <tag>单片机</tag>
        <tag>arm</tag>
      </tags>
  </entry>
  <entry>
    <title>Makefile学习笔记</title>
    <url>/2023/04/14/Makefile%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="makefile学习笔记"><a class="markdownIt-Anchor" href="#makefile学习笔记"></a> Makefile学习笔记</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2023.4.12」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<p><strong>摘要：</strong> none</p>
<p><strong>简介：</strong> 记录Make的简单特性 , 记录学习的过程</p>
</blockquote>
<span id="more"></span>
<br>
<hr />
<br>
<hr />
<br>
<h2 id="0️⃣-前言"><a class="markdownIt-Anchor" href="#0️⃣-前言"></a> 0️⃣ 前言</h2>
<ul>
<li>
<p><code>Make</code>是常用的构建工具, 一般是编译一个工程时使用的工具 。</p>
</li>
<li>
<p>用来描述哪些文件需要编译、哪些需要重新编译的文件就叫做 <code>Makefile</code>，<code>Makefile</code> 带来的好处就是可以实现工程的全自动编译</p>
</li>
<li>
<p><code>make</code>是 一个命令工具，一个解释 <code>makefile</code> 中指令的命令工具</p>
</li>
<li>
<p>从程序源码到可执行文件  <em>（如<code>.out</code>文件）</em> 的过程就是编译的过程吗，程序的整个编译流程大致分成 几个阶</p>
<p>段 :  <em><strong>预处理</strong></em>、<em><strong>编译</strong></em> 、<em><strong>汇编</strong></em> 、<em><strong>链接</strong></em>。（可以参考我之前的一篇笔记<a href="https://ye2020.github.io/2023/04/07/%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/#more">程序编译过程</a>）</p>
</li>
</ul>
<br>
<hr />
<h2 id="1️⃣-makefile概况"><a class="markdownIt-Anchor" href="#1️⃣-makefile概况"></a> 1️⃣ Makefile概况</h2>
<h3 id="11-gcc与make命令"><a class="markdownIt-Anchor" href="#11-gcc与make命令"></a> 1.1 gcc与make命令</h3>
<h4 id="111-gcc常用参数"><a class="markdownIt-Anchor" href="#111-gcc常用参数"></a> 1.1.1 gcc常用参数</h4>
<p>gcc 命令格式如下:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gcc <span class="selector-attr">[选项]</span> <span class="selector-attr">[文件名字]</span></span><br></pre></td></tr></table></figure>
<p>主要选项如下：</p>
<ul>
<li>
<p><strong>-c</strong>：只编译不链接为可执行文件，编译器将输入的<code>.c</code> 文件编译为<code>.o</code> 的目标文件。</p>
</li>
<li>
<p><strong>-o</strong>：&lt;输出文件名&gt;用来指定编译结束以后的输出文件名，如果不使用这个选项的话 <code>GCC</code> 默认编译出来的可执行文件名字为 <code>a.out</code>。</p>
</li>
<li>
<p><strong>-g</strong>：添加调试信息，如果要使用调试工具(如 <code>GDB</code>)的话就必须加入此选项，此选项指示编译的时候生成调试所需的符号信息。(生成<code>debug</code>模式的可执行文件)</p>
</li>
<li>
<p><strong>-O</strong>：对程序进行优化编译，如果使用此选项的话整个源代码在编译、链接的的时候都会进</p>
</li>
<li>
<p>行优化，这样产生的可执行文件执行效率就高。</p>
</li>
<li>
<p><strong>-O2</strong>：比<code>-O</code> 更幅度更大的优化，生成的可执行效率更高，但是整个编译过程会很慢。</p>
</li>
</ul>
<br>
<hr />
<h4 id="112-make常用参数"><a class="markdownIt-Anchor" href="#112-make常用参数"></a> 1.1.2 make常用参数</h4>
<blockquote>
<p>环境: GNU Make 4.3</p>
</blockquote>
<p><em><strong>常用参数</strong></em></p>
<ul>
<li><strong>-B</strong> : 认为所有的目标都需要更新（重编译），即强制编译所有目标。</li>
<li><strong>-f</strong> ：指定<code>makefile</code>文件；</li>
<li><strong>-I &lt;dir&gt;</strong>：当包含其他 <code>makefile</code>文件时，利用该选项指定搜索目录；</li>
<li><strong>-d</strong>：<code>Debug</code>模式，相当于<code>--debug=a</code>输出有关文件和检测时间的详细信息。</li>
<li><strong>-i</strong> ：忽略命令执行返回的出错信息；</li>
<li><strong>-r</strong>：禁止 <code>make</code> 使用任何隐含规则</li>
<li><strong>-t</strong> : 只是把目标的修改日期变成最新的，也就是阻止生成目标的命令运行。</li>
</ul>
<br>
<hr />
<h3 id="12-makefile概念"><a class="markdownIt-Anchor" href="#12-makefile概念"></a> 1.2 Makefile概念</h3>
<p><code>Makefile</code>文件是用来告诉<code>make</code>命令怎么去编译和链接程序的 , Makefile的书写有以下 <em><strong>三个规则</strong></em>:</p>
<ul>
<li>如果这个工程没有编译过，那么我们的所有 C 文件都要编译并被链接。</li>
<li>如果这个工程的某几个 C 文件被修改，那么我们只编译被修改的 C 文件，并链接目标程序。</li>
<li>如果这个工程的头文件被改变了，那么我们需要编译引用了这几个头文件的 C 文件，并链接成可执行文件.</li>
</ul>
<p><em><strong>注意:</strong></em></p>
<ul>
<li><code>Makefile</code>文件的文件名最好使用&quot;<code>Makefile</code>“或”<code>makefile</code>&quot; 。如果要指定命名为其他名字的<code>Makefile</code>文件的话，可以使用<code>make</code>的 <code>-f</code> 和<code>--file</code> 参数，如：<code>make -f Make.Linux</code>。</li>
</ul>
<hr />
<h3 id="13-makefile语法"><a class="markdownIt-Anchor" href="#13-makefile语法"></a> 1.3 Makefile语法</h3>
<p><code>Makefile</code> 是由件由一系列规则（rules）构成。每条规则的形式如下:</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">&lt;target&gt;  : &lt;prerequisites&gt;</span><br><span class="line">[tab]&lt;command&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<ul>
<li><code>target</code>是 <em><strong>目标文件</strong></em>  , 如<code>.o</code>文件或<code>.out</code>文件</li>
<li><code>prerequisites</code> 是 <em><strong>前置条件</strong></em> , 即要生成那个 <code>target</code>文件 所需要的文件或是目标</li>
<li><code>command</code>是<code>make</code> 需要执行的命令。（任意的 <code>Shell</code> 命令） , 每条命令前面一定要加<mark>tab</mark> ,不能是空格。<em>（<code>make</code> 命令会为 <code>Makefile</code> 中的每个以 <code>TAB</code> 开始的命令创建一个 <code>Shell</code> 进程去执行。）</em></li>
</ul>
<p><em><strong>注意:</strong></em></p>
<ul>
<li>
<p>一个目标（target）就构成一条规则。目标通常是文件名，指明Make命令所要构建的对象, 目标可以是一个文</p>
<p>件名，也可以是多个文件名，之间用空格分隔。</p>
</li>
<li>
<p>其中第一条规则的目标成为 <em><strong>默认目标</strong></em> , 也即是<code>make</code>命令编译生成的最终目标文件</p>
</li>
<li>
<p><em><strong>目标</strong></em> 是必需的，不可省略；<em><strong>前置条件</strong></em> 和 <em><strong>命令</strong></em> 都是可选的，但是两者之中必须至少存在一个。</p>
</li>
</ul>
<br>
<hr />
<h3 id="14-示例代码"><a class="markdownIt-Anchor" href="#14-示例代码"></a> 1.4 示例代码</h3>
<p>以<a href="https://www.gnu.org/software/make/manual/make.html">GUN make</a> 中的一个<code>Makefile</code>程序为例:</p>
<blockquote>
<ul>
<li>该文件描述了一个称为文本编辑器（<code>edit</code>）的可执行文件生成方法, 该文件依靠8个(<code>.o文件</code>);</li>
<li>这8个<code>.o</code>文件有依赖于8个源文件和3个头文件</li>
</ul>
</blockquote>
<br>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第一条规则说明 ， edit这个目标依赖于后面8个.o文件</span></span><br><span class="line"><span class="comment"># gcc命令的作用是将后面8个.o文件链接成可执行文件edit</span></span><br><span class="line">edit : main.o kbd.o command.o display.o \</span><br><span class="line">       insert.o search.o files.o utils.o</span><br><span class="line">        gcc -o edit main.o kbd.o command.o display.o \</span><br><span class="line">                   insert.o search.o files.o utils.o</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二条规则说明 main.o文件依赖于main.c和defs.h两个文件</span></span><br><span class="line"><span class="comment"># gcc命令的作用是不链接编译main.c和defs.h, 生成main.o</span></span><br><span class="line">main.o : main.c defs.h</span><br><span class="line">        gcc -c main.c</span><br><span class="line">kbd.o : kbd.c defs.h command.h</span><br><span class="line">        gcc -c kbd.c</span><br><span class="line">command.o : command.c defs.h command.h</span><br><span class="line">        gcc -c command.c</span><br><span class="line">display.o : display.c defs.h buffer.h</span><br><span class="line">        gcc -c display.c</span><br><span class="line">insert.o : insert.c defs.h buffer.h</span><br><span class="line">        gcc -c insert.c</span><br><span class="line">search.o : search.c defs.h buffer.h</span><br><span class="line">        gcc -c search.c</span><br><span class="line">files.o : files.c defs.h buffer.h command.h</span><br><span class="line">        gcc -c files.c</span><br><span class="line">utils.o : utils.c defs.h</span><br><span class="line">        gcc -c utils.c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#clean 不是一个文件, 仅仅是一个动作的名称。用于清理目标文件(.o和执行文件)</span></span><br><span class="line"><span class="comment">#它有依赖文件,没有被第一个目标文件直接或间接关联,</span></span><br><span class="line"><span class="comment">#所以它对应的命令不会被自动执行, 可以显性的要求make 执行,即 &quot;make clean命令&quot;</span></span><br><span class="line">clean :</span><br><span class="line">        rm edit main.o kbd.o command.o display.o \</span><br><span class="line">           insert.o search.o files.o utils.o</span><br></pre></td></tr></table></figure>
<p><em><strong>如上所示:</strong></em></p>
<ul>
<li>
<p>上述代码中一共有10个规则。1~4行为第一个规则, 也是 <em><strong>默认目标</strong></em>  即最终的目标文件</p>
</li>
<li>
<p>反斜杆 <code>/</code> 是换行符的意思, 这样比较便于 <code>Makefile</code> 的易读。</p>
</li>
</ul>
<p>因此由上述程序可以总结出<code>make</code>命令工作的 <em><strong>执行流程:</strong></em></p>
<ul>
<li>
<p><code>make</code> 会在当前目录下找名字叫<code>Makefile</code>或<code>makefile</code>的文件。</p>
</li>
<li>
<p>如果找到，它会找文件中的第一个目标文件（<code>target</code>），在上面的例子中，他会找到<code>edit</code>这个文件，并把这个文件作为 <em><strong>最终的目标文件</strong></em>。</p>
</li>
<li>
<p>如果 <code>edit</code> 文件不存在，或是 <code>edit</code> 所依赖的后面的 <code>.o</code> 文件的文件修改时间要比 <code>edit</code>这个文件新，那么，他就会执行后面所定义的命令来生成 <code>edit</code> 这个文件。</p>
</li>
<li>
<p>如果 <code>edit</code> 所依赖的<code>.o</code> 文件也不存在，或者目标所依赖的文件比目标文件新 <em>(也就是最后修改时间比</em></p>
<p><em>目标文件晚)</em> 的话, 那么 <code>make</code> 会在当前文件中找目标为<code>.o</code> 文件的依赖性，如果找到则再根据那一个规则生成<code>.o</code> 文件。</p>
</li>
</ul>
<br>
<blockquote>
<ul>
<li>
<p>这就是整个 <code>make</code> 的依赖性，<code>make</code> 会一层又一层地去找文件的依赖关系，直到最终编译出 <em><strong>第一个目标文件</strong></em>。</p>
</li>
<li>
<p><code>make</code> 只管文件的依赖性, 在找寻的过程中，如果出现错误，比如最后被依赖的文件找不到，那么</p>
<p><code>make</code> 就会直接退出，并报错。对于定义命令的错误，<code>make</code>不会理会</p>
</li>
</ul>
</blockquote>
<br>
<hr />
<h2 id="2️⃣-简化makefile"><a class="markdownIt-Anchor" href="#2️⃣-简化makefile"></a> 2️⃣ 简化Makefile</h2>
<h3 id="21-变量"><a class="markdownIt-Anchor" href="#21-变量"></a> 2.1 变量</h3>
<blockquote>
<p>前面的例子只是一个最简单的Makefile程序, 我们可以使用变量来简化程序</p>
</blockquote>
<ul>
<li>在<code>Makefile</code>中 , 变量值可以使用在“ <em><strong>目标</strong></em>”，<em><strong>前置条件</strong></em>，<em><strong>命令</strong></em> 或是 <code>Makefile</code> 的其它部分中。</li>
<li><code>Makefile</code> 中的变量其实就是 <code>C/C++</code>中的宏 , 当 <code>Makefile</code> 被执行时, 变量都会被 <em><strong>扩展</strong></em> 到相应的引用位置上。</li>
<li>变量的命名可以包含 <em><strong>字符</strong></em>、<em><strong>数字</strong></em>，<em><strong>下划线</strong></em> <em>（可以是数字开头）</em>，但不应该含有  <code>：</code>    <code>#</code> 、<code>=</code>  或是 <em><strong>空字符</strong></em> <em>（空格、回车等）</em></li>
<li>变量是大小写敏感的 , 可以使用大小写搭配的变量名 , 如:<code>MakeFlags</code> ,避免和系统的变量冲突</li>
</ul>
<p><em><strong>例: 以下两段代码是等同的</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">edit : main.o kbd.o command.o display.o \</span><br><span class="line">       insert.o search.o files.o utils.o</span><br><span class="line">	gcc -o edit main.o kbd.o command.o display.o \</span><br><span class="line">          insert.o search.o files.o utils.o</span><br></pre></td></tr></table></figure>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#变量定义</span></span><br><span class="line">objects = main.o kbd.o command.o display.o \</span><br><span class="line">          insert.o search.o files.o utils.o</span><br><span class="line"></span><br><span class="line"><span class="comment">#变量使用</span></span><br><span class="line"><span class="section">edit: <span class="variable">$(objects)</span></span></span><br><span class="line">	 gcc -o edit <span class="variable">$(objects)</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="211变量的使用"><a class="markdownIt-Anchor" href="#211变量的使用"></a> 2.1.1变量的使用</h4>
<p><code>Makefile</code> 中变量的引用方法是 <code>$(变量名)</code>，比如本例中的<code>$(objects)</code>就是使用变量 <code>objects</code>。括号不加也可以, 但给变量加上括号完全是为了更加安全</p>
<p>地使用这个变量, 最好还是给变量加上括号.</p>
<br>
<hr />
<h5 id="2111-变量赋值符"><a class="markdownIt-Anchor" href="#2111-变量赋值符"></a> 2.1.1.1 变量赋值符</h5>
<p><code>Makefile</code>一共提供了四个赋值运算符  <code>=</code>、<code>:=</code>、<code>？=</code>、<code>+=</code></p>
<br>
<hr />
<h6 id="21111-赋值符"><a class="markdownIt-Anchor" href="#21111-赋值符"></a> 2.1.1.1.1 赋值符 “=”</h6>
<p>赋值符 <code>=</code>是在  <em><strong>执行的时候</strong></em> 进行拓展 , 允许 <strong>递归拓展</strong> .</p>
<p>所以在使用<code>=</code>在给变量的赋值的时候，不一定要用已经定义好的值，也可以 <em><strong>使用后面定义的值</strong></em></p>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">a = <span class="variable">$(b)</span></span><br><span class="line">b = <span class="variable">$(c)</span></span><br><span class="line">c = Hello</span><br><span class="line"></span><br><span class="line"><span class="section">main:</span></span><br><span class="line">	@echo <span class="variable">$(a)</span></span><br></pre></td></tr></table></figure>
<p><em><strong>输出结果:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/643954fe0d2dde57771be688.png" alt="5c05fcbc167f29d1aa46fcf01f2e686" /></p>
<p><em><strong>解释:</strong></em></p>
<ul>
<li>赋值符 <code>=</code>是在 <em><strong>执行的时候</strong></em> 才进行拓展 的</li>
<li><code>$(a)</code>的值是 <code>$(b)</code> , <code>$(b)</code>的值是 <code>$(c)</code> , <code>$(c)</code>的值是 <em><strong>&quot;Hello&quot;</strong></em></li>
<li>说明使用赋值符 <code>=</code>的变量是可以使用后面的变量来进行定义的 , 也就是 <em><strong>变量的值</strong></em> 是取决于它所引用的变量的 <em><strong>最后一次有效值</strong></em></li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<ul>
<li>因为赋值 <code>=</code> 是允许递归拓展的 , 所以有可能让 <code>make</code> 陷入无限的变量展开过程中去 , 会让<code>make</code>发出报错</li>
</ul>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">a = <span class="variable">$(b)</span></span><br><span class="line">b = <span class="variable">$(a)</span></span><br></pre></td></tr></table></figure>
<ul>
<li>如果在 <em><strong>变量</strong></em> 中使用 <em><strong>函数</strong></em> 的话 , 会让<code>make</code>在运行时十分缓慢</li>
</ul>
<br>
<hr />
<h6 id="21112-赋值符"><a class="markdownIt-Anchor" href="#21112-赋值符"></a> 2.1.1.1.2 赋值符 “:=”</h6>
<p>为了避免使用 <code>=</code>赋值符时 , 发送变量无限展开的情况 , 可以使用 赋值符 <code>:=</code></p>
<p>赋值符 <code>:=</code> 是在 <em><strong>定义时</strong></em> 扩展。</p>
<p>使用赋值符 <code>:=</code> 的话 , 前面的变量不能使用后面的变量，只能使用前面已定义好了的变量。</p>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">x := foo </span><br><span class="line">y := <span class="variable">$(x)</span> bar </span><br><span class="line">x := later</span><br></pre></td></tr></table></figure>
<p><em><strong>等价于</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">y := foo bar </span><br><span class="line">x := later</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可以看到前面的变量不能使用后面的变量，只能使用前面已定义好了的变量。</p>
</blockquote>
<br>
<p><em><strong>赋值符 “:=” 的一种特殊用法</strong></em></p>
<blockquote>
<p>操作符的右边是很难描述一个空格的, 但可以使用 赋值符 <code>:=</code> 来定义一个变量 , 其值是一个空格</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">nullstring := </span><br><span class="line">space := <span class="variable">$(nullstring)</span> <span class="comment"># end of the line</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>nullstring</code> 是一个 <code>Empty</code> 变量 , 其值为空</li>
<li>而<code>space</code> 的值是一个空格</li>
<li>先用一个 <code>Empty</code> 变量来标明变量的值开始了，而后面采用<code>“#”</code>注释符来表示变量定义的终止</li>
</ul>
</blockquote>
<br>
<hr />
<h6 id="21113-赋值符"><a class="markdownIt-Anchor" href="#21113-赋值符"></a> 2.1.1.1.3 赋值符 “?=”</h6>
<p>赋值符 <code>?=</code> 只有在该变量为空时才设置值。</p>
<p>即当一个变量先前被定义过 , 那么这条命令将什么都不做 , 如果先前没有定义 , 那么变量值就是 赋值符右边的值</p>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">FOO ?= bar</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其含义是，如果 FOO 没有被定义过，那么变量 FOO 的值就是“bar”，如果 FOO 先前被定义过，那么这条语将什么也不做。</p>
</blockquote>
<br>
<p><span id="4" name="4"></span></p>
<p><em><strong>等价于：</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#第一句是条件判断语句 , 使用origin函数判断 FOO变量是否被定义过</span></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(<span class="built_in">origin</span> FOO)</span>, undefined) </span><br><span class="line">FOO = bar </span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure>
<br>
<p>(<a href="#3">origin 函数</a>)</p>
<hr />
<h6 id="21114-赋值符"><a class="markdownIt-Anchor" href="#21114-赋值符"></a> 2.1.1.1.4 赋值符 “+=”</h6>
<p>赋值符 <code>+=</code> 用于将值追加到变量的尾端。</p>
<br>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">objects = main.o foo.o bar.o utils.o </span><br><span class="line">objects += another.o</span><br></pre></td></tr></table></figure>
<blockquote>
<p>变量 <code>objects</code> 的值为 <code>main.o foo.o bar.o utils.o</code>  , 后面我们给它追加了一个<code>another.o</code></p>
<p>因此变量 <code>objects</code> 变成了<code>main.o foo.o bar.o utils.o another.o</code></p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<ul>
<li>如果变量之前没有定义过，那么，<code>+=</code>会自动变成 <code>=</code></li>
<li>如果前面有变量定义，那 <code>+=</code> 会继承于前次操作的赋值符。</li>
</ul>
<br>
<p><em><strong>如下所示</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">variable := value </span><br><span class="line">variable += more</span><br></pre></td></tr></table></figure>
<p><em><strong>等价于</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">variable := value </span><br><span class="line">variable := <span class="variable">$(variable)</span> more</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2112变量的值指向另一个变量"><a class="markdownIt-Anchor" href="#2112变量的值指向另一个变量"></a> 2.1.1.2变量的值指向另一个变量</h5>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">x = y </span><br><span class="line">y = z </span><br><span class="line">a := $(<span class="variable">$(x)</span>)</span><br></pre></td></tr></table></figure>
<p><em><strong>如上所示:</strong></em></p>
<ul>
<li><code>$(x)</code> 的值是  <code>y</code>，所以  <code>$($(x))</code>就是<code>$(y)</code></li>
<li><code>$(a)</code>的值就是 <code>z</code></li>
</ul>
<br>
<p>使用这种 方式可以使用多个变量来 <em><strong>组成一个变量的名字</strong></em>，然后再取其值：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">first_second = Hello </span><br><span class="line">a = first </span><br><span class="line">b = second </span><br><span class="line">all = $($a_$b)</span><br></pre></td></tr></table></figure>
<p><em><strong>如上所示:</strong></em></p>
<p>这里的<code>$a_$b</code>组成了<code>first_second</code>，于是，<code>$(all)</code>的值就是 <em><strong>Hello</strong></em> 。</p>
<br>
<hr />
<h5 id="2113-变量值的替换"><a class="markdownIt-Anchor" href="#2113-变量值的替换"></a> 2.1.1.3 变量值的替换</h5>
<p>可以替换变量中<strong>共有的部分</strong>:</p>
<p>写法是: <em><strong>变量名</strong></em> + <em><strong>冒号</strong></em> + <em><strong>后缀名替换规则</strong></em>。</p>
<p>如: <code>$(var:.o=.c)</code> 是将把变量<code>var</code>中所有以<code>.o</code>结尾的文件替换成<code>.c</code>结尾的文件。</p>
<p>它实际上<code>patsubst</code>函数的一种简写形式。( <a href="#two">patsubst 函数</a>)</p>
<br>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">foo := a.o b.o c.o </span><br><span class="line">bar := $(foo:.o=.c)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这两行代码的意思是 : 将变量<code>foo</code>中所有后缀名<code>.o</code> 替换成<code>.c</code></p>
</blockquote>
<br>
<hr />
<h4 id="212-自动变量"><a class="markdownIt-Anchor" href="#212-自动变量"></a> 2.1.2 自动变量</h4>
<p><code>Make</code>命令还提供一些自动变量，它们的值 <em><strong>与当前规则有关</strong></em>。</p>
<p>所谓自动化变量，就是这种变量会把模式中所定义的一系列的文件自动地挨个取出，直至所有的符合模式的文件都取完了。</p>
<p>这种自动化变量只应出现在规则的 <em><strong>命令</strong></em> 中。</p>
<p><em><strong>主要有以下几个:</strong></em></p>
<table>
<thead>
<tr>
<th>$@</th>
<th><code>$@</code>指代当前目标，就是Make命令当前构建的那个目标。比如，<code>make foo</code>的 <code>$@</code> 就指代foo。</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>$&lt;</strong></td>
<td><code>$&lt;</code> 指代第一个前置条件。比如，规则为 <code>t: p1 p2</code>，那么<code>$&lt;</code> 就指代<code>p1</code>。</td>
</tr>
<tr>
<td><strong>$?</strong></td>
<td><code>$?</code> 指代 <em><strong>比目标更新</strong></em> 的所有前置条件，之间以 <em><strong>空格分隔</strong></em> 。比如，规则为 <code>t: p1 p2</code>，其中 <code>p2</code> 的时间戳比 <code>t</code> 新，<code>$?</code>就指代<code>p2</code>。</td>
</tr>
<tr>
<td><strong>$^</strong></td>
<td><code>$^</code> 指代所有 <em><strong>前置条件</strong></em>，之间以空格分隔。比如，规则为 <code>t: p1 p2</code>，那么 <code>$^</code> 就指代 <code>p1 p2</code> 。</td>
</tr>
<tr>
<td><strong>$*</strong></td>
<td><code>$*</code> 指代匹配符 <code>%</code> 匹配的部分， 比如<code>%</code> 匹配 <code>f1.txt</code> 中的<code>f1</code> ，<code>$*</code> 就表示 <code>f1</code>。</td>
</tr>
<tr>
<td><strong>$(@D) 和 $(@F)</strong></td>
<td><code>$(@D)</code> 和 <code>$(@F)</code> 分别指向 <code>$@</code> 的<strong>目录名</strong>和<strong>文件名</strong>。比如，<code>$@</code>是 <code>src/input.c</code>，那么<code>$(@D)</code> 的值为 <code>src</code> ，<code>$(@F)</code> 的值为 <code>input.c</code>。</td>
</tr>
<tr>
<td><strong>$(&lt;D) 和 $(&lt;F)</strong></td>
<td><code>$(&lt;D)</code> 和 <code>$(&lt;F)</code> 分别指向 <code>$&lt;</code> 的 <strong>目录名</strong>和 <strong>文件名</strong>。</td>
</tr>
</tbody>
</table>
<br>
<hr />
<h5 id="2121"><a class="markdownIt-Anchor" href="#2121"></a> 2.1.2.1  $@</h5>
<blockquote>
<p><code>$@</code> 表示规则中的目标文件集。在模式规则中，如果有多个目标，那么，<code>$@</code>就是匹配于 目标中模式定义的集合。</p>
<p><code>$@</code>指代当前目标，就是<code>Make</code>命令当前构建的那个目标。比如，<code>make foo</code>的 <code>$@</code> 就指代foo。</p>
</blockquote>
<br>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">a.txt b.txt: </span><br><span class="line">    touch <span class="variable">$@</span></span><br></pre></td></tr></table></figure>
<p><em><strong>等价于:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">a.txt:</span></span><br><span class="line">    touch a.txt</span><br><span class="line"><span class="section">b.txt:</span></span><br><span class="line">    touch b.txt</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2122"><a class="markdownIt-Anchor" href="#2122"></a> 2.1.2.2  $&lt;</h5>
<blockquote>
<p><code>$&lt;</code>指的是依赖文件集合中的第一个文件</p>
<p>如果依赖文件是以模式 (即<code>%</code>) 定义的，那么<code>$&lt;</code> 就是符合模式的一系列的文件集合。</p>
</blockquote>
<br>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">a.txt: b.txt c.txt</span></span><br><span class="line">    cp <span class="variable">$&lt;</span> <span class="variable">$@</span> </span><br></pre></td></tr></table></figure>
<p><em><strong>等价于:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">a.txt: b.txt c.txt</span></span><br><span class="line">    cp b.txt a.txt </span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2123"><a class="markdownIt-Anchor" href="#2123"></a> 2.1.2.3  $^</h5>
<blockquote>
<p><code>$^</code> 指代所有 <em><strong>前置条件</strong></em>，之间以空格分隔。</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">test1.o:test1.c head.c</span></span><br><span class="line">	gcc -o <span class="variable">$@</span> <span class="variable">$^</span></span><br></pre></td></tr></table></figure>
<p>指的就是<code>test1.c head.c</code></p>
</blockquote>
<br>
<hr />
<h5 id="2124-自动化变量示例"><a class="markdownIt-Anchor" href="#2124-自动化变量示例"></a> 2.1.2.4 自动化变量示例</h5>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">dest/%.txt: src/%.txt</span></span><br><span class="line">    @[ -d dest ] || mkdir dest</span><br><span class="line">    cp <span class="variable">$&lt;</span> <span class="variable">$@</span></span><br></pre></td></tr></table></figure>
<p><em><strong>如上所示:</strong></em></p>
<ul>
<li>上面代码将 src 目录下的 txt 文件，拷贝到 dest 目录下。</li>
<li>首先判断 dest 目录是否存在，如果不存在就新建</li>
<li>然后，<code>$&lt;</code> 指代前置文件<code>（src/%.txt）</code>， <code>$@</code> 指代目标文件<code>（dest/%.txt）</code>。</li>
</ul>
<br>
<hr />
<h4 id="213-内置变量"><a class="markdownIt-Anchor" href="#213-内置变量"></a> 2.1.3 内置变量</h4>
<p>Make命令提供一系列内置变量, 内置变量分成两种: 一种是 <em><strong>命令相关的</strong></em> , 如&quot;CC&quot; ; 另一种是与 <em><strong>参数有关</strong></em> 的, 如&quot;CFLAGS&quot;</p>
<br>
<hr />
<h5 id="2131-命令相关的变量"><a class="markdownIt-Anchor" href="#2131-命令相关的变量"></a> 2.1.3.1 命令相关的变量</h5>
<table>
<thead>
<tr>
<th><strong>CC</strong></th>
<th>C 语言编译程序。默认命令是 <code>cc</code>。</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>CXX</strong></td>
<td><code>C++</code>语言编译程序。默认命令是 <code>g++</code>。</td>
</tr>
<tr>
<td><strong>CPP</strong></td>
<td>C 程序的预处理器（输出是标准输出设备）。默认命令是<code>$(CC) –E</code></td>
</tr>
<tr>
<td><strong>RM</strong></td>
<td>删除文件命令。默认命令是 <code>rm –f</code></td>
</tr>
<tr>
<td><strong>AR</strong></td>
<td>函数库打包程序。默认命令是<code>ar</code></td>
</tr>
<tr>
<td><strong>AS</strong></td>
<td>汇编语言编译程序。默认命令是<code>as</code></td>
</tr>
<tr>
<td><strong>YACC</strong></td>
<td>Yacc 文法分析器（针对于 C 程序）。默认命令是<code>yacc</code></td>
</tr>
</tbody>
</table>
<br>
<hr />
<h5 id="2132-命令参数相关的变量"><a class="markdownIt-Anchor" href="#2132-命令参数相关的变量"></a> 2.1.3.2 命令参数相关的变量</h5>
<p>下面的这些变量都是上面的命令的参数。如果没有指明其默认值，那么其 <em><strong>默认值都是空</strong></em></p>
<table>
<thead>
<tr>
<th><strong>ARFLAGS</strong></th>
<th>函数库打包程序 AR 命令的参数。默认值是<code>rv</code></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>ASFLAGS</strong></td>
<td>汇编语言编译器参数。（当明显地调用<code>.s</code>或<code>.S</code>文件时）</td>
</tr>
<tr>
<td><strong>CFLAGS</strong></td>
<td>C 语言编译器参数</td>
</tr>
<tr>
<td><strong>CXXFLAGS</strong></td>
<td>C++语言编译器参数</td>
</tr>
<tr>
<td><strong>CPPFLAGS</strong></td>
<td>C 预处理器参数。（ C 和 Fortran 编译器也会用到）。</td>
</tr>
<tr>
<td><strong>LDFLAGS</strong></td>
<td>链接器参数。（如：“ld”）</td>
</tr>
<tr>
<td><strong>YFLAGS</strong></td>
<td>Yacc 文法分析器参数</td>
</tr>
</tbody>
</table>
<br>
<hr />
<h3 id="22-函数"><a class="markdownIt-Anchor" href="#22-函数"></a> 2.2 函数</h3>
<p>在 Makefile 中可以使用函数来处理变量, <em><strong>格式如下</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">$(函数名 参数集合)</span><br><span class="line"><span class="comment">#$(function arguments)</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$&#123;function arguments&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="221-内置函数"><a class="markdownIt-Anchor" href="#221-内置函数"></a> 2.2.1 内置函数</h4>
<blockquote>
<ul>
<li>Makefile 提供了<strong>内置函数</strong>供我们使用 , 类似于库函数</li>
<li>make 所支持的函数也不算很多，不过已经足够我们的操作了。</li>
<li>函数调用后，函数的返回值可以当做变量来使用</li>
</ul>
</blockquote>
<p>以下是常用的内置函数</p>
<br>
<hr />
<h5 id="2211-shell函数"><a class="markdownIt-Anchor" href="#2211-shell函数"></a> 2.2.1.1 shell函数</h5>
<blockquote>
<ul>
<li>shell 函数用来执行 shell 命令 ,</li>
<li>它的参数应该就是操作系统 Shell 的命令。</li>
<li>shell 函数把执行操作系统命令后的输出作为函数返回。</li>
</ul>
</blockquote>
<br>
<p><em><strong>例如:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">files := <span class="variable">$(<span class="built_in">shell</span> echo *.c)</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2212-wildcard-函数"><a class="markdownIt-Anchor" href="#2212-wildcard-函数"></a> 2.2.1.2 wildcard 函数</h5>
<blockquote>
<p>通配符“%”只能用在 <em><strong>规则</strong></em> 中，只有在规则中它才会展开.</p>
<p>如果在 <em><strong>变量定义</strong></em> 和 <em><strong>函数使用</strong></em> 时，通配符不会自动展开，这个时候就要用到函数 <code>wildcard</code>，</p>
</blockquote>
<br>
<p><em><strong>例子:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用来获取当前目录下所有的.c 文件，类似“%”</span></span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> *.c)</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2213-subst-函数"><a class="markdownIt-Anchor" href="#2213-subst-函数"></a> 2.2.1.3 subst 函数</h5>
<blockquote>
<p>函数 subst 用来完成字符串替换，把字串 &lt;text&gt;中的&lt;from&gt;字符串替换成&lt;to&gt;。</p>
<p>调用形式如下：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">subst</span> &lt;from&gt;,&lt;to&gt;,&lt;text&gt;)</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p><em><strong>示例:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">subst</span> ee,EE,feet on the street)</span></span><br><span class="line"><span class="comment">#把把“feet on the street”中的“ee”替换成“EE”</span></span><br><span class="line"><span class="comment">#返回结果是“fEEt on the strEEt”</span></span><br></pre></td></tr></table></figure>
<br>
<p><em><strong>例2:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">comma:= ,</span><br><span class="line">empty:=</span><br><span class="line"><span class="comment"># space变量用两个空变量作为标识符，当中是一个空格</span></span><br><span class="line">space:= <span class="variable">$(empty)</span> <span class="variable">$(empty)</span></span><br><span class="line">foo:= a b c</span><br><span class="line">bar:= <span class="variable">$(<span class="built_in">subst</span> <span class="variable">$(space)</span>,<span class="variable">$(comma)</span>,<span class="variable">$(foo)</span>)</span></span><br><span class="line"><span class="comment"># 把空格替换成&quot;,&quot; 返回结果为&#x27;a,b,c&#x27;</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2214-patsubst函数"><a class="markdownIt-Anchor" href="#2214-patsubst函数"></a> 2.2.1.4 patsubst函数</h5>
<p><span id="two" name="two"></span></p>
<blockquote>
<p>函数 patsubst 用来完成 <em><strong>模式字符</strong></em> 串替换，使用方法如下：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">patsubst</span> &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt;)</span></span><br></pre></td></tr></table></figure>
<ul>
<li>查找字符串<code>&lt;text&gt;</code>中的单词是否符合模式<code>&lt;pattern&gt;</code> ,  如果匹配就用<code>&lt;replacement&gt;</code>来替换掉</li>
<li><code>&lt;pattern&gt;</code>可以使用通配符<code>%</code>，表示任意长度的字符串</li>
<li>函数返回值就是替换后的字符串。</li>
<li>如果<code>&lt;replacement&gt;</code>中也包涵 <code>%</code>，那么<code>&lt;replacement&gt;</code>中的<code>%</code>将是<code>&lt;pattern&gt;</code>中的那个<code>%</code>所代表的字符串，</li>
</ul>
</blockquote>
<p><em><strong>示例:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">patsubst</span> %.c,%.o,a.c b.c c.c)</span></span><br><span class="line"><span class="comment"># 将字符串“a.c b.c c.c”中的所有符合“%.c”的字符串，替换为“%.o”</span></span><br><span class="line"><span class="comment"># 替换完成以后的字符串为“a.o b.o c.o”</span></span><br></pre></td></tr></table></figure>
<p><em><strong>注意:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">patsubst</span> %.o,%.c,<span class="variable">$(objects)</span>)</span></span><br><span class="line"><span class="comment">#等价于</span></span><br><span class="line"><span class="section">$(objects:.o=.c)</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2215-dir函数"><a class="markdownIt-Anchor" href="#2215-dir函数"></a> 2.2.1.5 dir函数</h5>
<blockquote>
<p>函数 dir 用来获取目录，使用方法如下：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">dir</span> &lt;names…&gt;)</span></span><br></pre></td></tr></table></figure>
<p>此函数用来从文件名序列<code>&lt;names&gt;</code>中提取出目录部分，返回值是文件名序列<code>&lt;names&gt;</code>的目录</p>
</blockquote>
<p><em><strong>例如:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">dir</span> &lt;/src/a.c&gt;)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>提取文件<code>/src/a.c</code>的目录部分，也就是<code>/src</code></p>
</blockquote>
<br>
<hr />
<h5 id="2216-notdir-函数"><a class="markdownIt-Anchor" href="#2216-notdir-函数"></a> 2.2.1.6 notdir 函数</h5>
<blockquote>
<p>函数<code>notdir</code> 用于取出文件, 即取出文件中的目录部分 . 格式如下:</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">notdir</span> &lt;names...&gt;)</span></span><br></pre></td></tr></table></figure>
<ul>
<li>从文件名序列<code>&lt;names&gt;</code>中取出非目录部分。</li>
<li>非目录部分是指最后一个反斜杠（“ /”）之后的部分。</li>
</ul>
</blockquote>
<br>
<p><em><strong>示例:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">notdir</span> src/foo.c hacks)</span></span><br><span class="line"><span class="comment">#返回值是“foo.c hacks”</span></span><br></pre></td></tr></table></figure>
<hr />
<h5 id="2217-foreach-函数"><a class="markdownIt-Anchor" href="#2217-foreach-函数"></a> 2.2.1.7 foreach 函数</h5>
<blockquote>
<p><code>foreach</code> 函数用来完成循环 , <strong>格式如下</strong>:</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">foreach</span> &lt;var&gt;,&lt;list&gt;,&lt;text&gt;)</span></span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>参数<code>&lt;list&gt;</code>中的单词逐一取出放到参数<code>&lt;var&gt;</code>所指定的变量中，然后再执行<code>&lt;text&gt;</code>所包含的表达式</p>
</li>
<li>
<p>每一次<code>&lt;text&gt;</code>会返回一个字符串，循环过程中，<code>&lt;text&gt;</code>的所返回的每个字符串会以空格分隔，最后当整个循环结束时，<code>&lt;text&gt;</code>所返回的每个字符串</p>
<p>所组成的整个字符串（以空格分隔）将会是 <code>foreach</code> 函数的返回值。</p>
</li>
<li>
<p>所以，<code>&lt;var&gt;</code>最好是一个变量名，<code>&lt;list&gt;</code>可以是一个表达式</p>
</li>
<li>
<p><var>参数是一个临时的局部变量 , 作用域只在 foreach 函数当中</p>
</li>
</ul>
</blockquote>
<p><em><strong>示例:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">names := a b c d </span><br><span class="line">files := <span class="variable">$(<span class="built_in">foreach</span> n,<span class="variable">$(names)</span>,<span class="variable">$(n)</span>.o)</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>$(name)</code>中的单词会被挨个取出，并存到变量<code>n</code>中</li>
<li><code>$(n).o</code>每次根据 <code>$(n)</code>计算出一个值，这些值以空格分隔，最后作为 <code>foreach</code> 函数的返回</li>
<li>最终<code>$(files)</code>的值是<code>a.o b.o c.o d.o</code></li>
</ul>
<br>
<hr />
<h5 id="2218-origin函数"><a class="markdownIt-Anchor" href="#2218-origin函数"></a> 2.2.1.8 origin函数</h5>
<p><span id="3" name="3"></span></p>
<blockquote>
<p><code>origin</code> 函数用于返回变量的来源 , <em><strong>格式如下:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">origin</span> &lt;variable&gt;)</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>&lt;variable&gt;</code>是变量的名字，不应该是引用  ,最好不要在<code>&lt;variable&gt;</code>中使用<code>$</code>字符</li>
</ul>
</blockquote>
<br>
<p><code>origin</code>函数的<strong>返回值</strong>:</p>
<blockquote>
<p><strong>“undefined”</strong></p>
<blockquote>
<p>如果<code>&lt;variable&gt;</code>从来没有定义过，<code>origin</code> 函数返回这个值 <em><strong>“undefined”</strong></em></p>
</blockquote>
<br>
<p><em><strong>“default”</strong></em></p>
<blockquote>
<p>如果<code>&lt;variable&gt;</code>是一个默认的定义，比如“CC”这个变量</p>
</blockquote>
<br>
<p><em><strong>&quot;environment&quot;</strong></em></p>
<blockquote>
<p>如果<code>&lt;variable&gt;</code>是一个环境变量，并且当 <code>Makefile</code> 被执行时，<code>-e</code>参数没有被打开。</p>
</blockquote>
<br>
<p><em><strong>“file”</strong></em></p>
<blockquote>
<p>如果<code>&lt;variable&gt;</code>这个变量被定义在 <code>Makefile</code> 中。</p>
</blockquote>
<br>
<p><em><strong>“command line”</strong></em></p>
<blockquote>
<p>如果<code>&lt;variable&gt;</code>这个变量是被命令行定义的</p>
</blockquote>
<br>
<p><em><strong>“override”</strong></em></p>
<blockquote>
<p>如果<code>&lt;variable&gt;</code>是被 <code>override</code> 指示符重新定义的。</p>
</blockquote>
<br>
<p><em><strong>“automatic”</strong></em></p>
<blockquote>
<p>如果<code>&lt;variable&gt;</code>是一个命令运行中的自动化变量。</p>
</blockquote>
</blockquote>
<p><em><strong>示例:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用origin函数判断 FOO变量是否被定义过</span></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(<span class="built_in">origin</span> FOO)</span>, undefined) </span><br><span class="line">...</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2219-call函数"><a class="markdownIt-Anchor" href="#2219-call函数"></a> 2.2.1.9  call函数</h5>
<blockquote>
<p><code>call</code>函数通常用来调用另一个自定义的<code>make</code>函数，并且会展开里面的内容，同时按照展开的位置解释为makefile语句或者shell语句。</p>
<p><em><strong>格式如下:</strong></em></p>
 <figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">call</span> &lt;expression&gt;,&lt;parm1&gt;,&lt;parm2&gt;,&lt;parm3&gt;...)</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>&lt;expression&gt;</code> 是已经定义了的函数名称 , <code>&lt;parm1&gt;,&lt;parm2&gt;,&lt;parm3&gt;</code> 是传递给函数的参数 , 中间以 <em><strong>逗号</strong></em> 隔开</li>
<li>注意，<code>call</code>函数只能在<code>Makefile</code>中调用已经定义的函数，而不能用于调用<code>Shell</code>命令或者 <em><strong>函数。</strong></em></li>
</ul>
</blockquote>
<p><em><strong>示例:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">PHONY: all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">define</span> func</span><br><span class="line">    @echo <span class="string">&quot;pram1 = $(0)&quot;</span></span><br><span class="line">    @echo <span class="string">&quot;pram2 = $(1)&quot;</span></span><br><span class="line"><span class="keyword">endef</span></span><br><span class="line"></span><br><span class="line"><span class="section">all:</span></span><br><span class="line">    <span class="variable">$(<span class="built_in">call</span> func, num1, num2)</span></span><br></pre></td></tr></table></figure>
<p><em><strong>运行结果:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/6439551b0d2dde57771c0216.png" alt="image-20230413213734057" /></p>
<p><em><strong>如上所示:</strong></em></p>
<ul>
<li><code>make</code>执行这个函数的时候 , <code>$(1)</code>，<code>$(2)</code>，<code>$(3)</code> 等 <em><strong>参数变量</strong></em> , 会被参数<code>&lt;parm1&gt;,&lt;parm2&gt;,&lt;parm3&gt;</code>等 <em><strong>依次</strong></em> 取代</li>
<li><code>$(0)</code> 表示<code>&lt;expression&gt;</code> , 即函数名本身</li>
</ul>
<hr />
<h4 id="222-自定义函数多行变量"><a class="markdownIt-Anchor" href="#222-自定义函数多行变量"></a> 2.2.2 自定义函数(多行变量)</h4>
<ul>
<li>在<code>makefile</code> 中可用通过使用<code>define</code> 来定义 <em><strong>多行变量</strong></em> 或 <em><strong>自定义函数</strong></em> , 以<code>endef</code> 关键字结束</li>
<li>变量的值可以包含 <em><strong>函数</strong></em>、<em><strong>命令</strong></em>、<em><strong>文字</strong></em>，或是其它变量。</li>
<li>如果用<code>define</code> 定义的命令变量中没有以[TAB] 键开头 , <code>make</code>就不会认为其是命令</li>
<li>自定义的函数一般用于定义 <em><strong>命令的集合</strong></em>，并且运用于 <em><strong>规则中</strong></em></li>
<li><em><strong>自定义函数</strong></em> 使用 <em><strong>内置函数</strong></em> <code>call</code> 来调用 , 后面跟自定义函数名及参数</li>
</ul>
<p><em><strong>define格式如下</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">define</span> 函数名</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">endef</span></span><br></pre></td></tr></table></figure>
<br>
<p><em><strong>示例如下:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">PHONY: all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">define</span> func1</span><br><span class="line">    @echo <span class="string">&quot;func1 name is $(0)&quot;</span></span><br><span class="line"><span class="keyword">endef</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">define</span> func2</span><br><span class="line">	@echo <span class="string">&quot;pram1 = $(1)&quot;</span></span><br><span class="line">	@echo <span class="string">&quot;pram2 = $(2)&quot;</span></span><br><span class="line"><span class="keyword">endef</span>	</span><br><span class="line">	</span><br><span class="line"><span class="section">all:</span></span><br><span class="line">    <span class="variable">$(<span class="built_in">call</span> func1)</span></span><br><span class="line">    <span class="variable">$(<span class="built_in">call</span> func2, num1,num2)</span></span><br></pre></td></tr></table></figure>
<p><em><strong>运行结果:</strong></em></p>
<p><img src="https://pic.imgdb.cn/item/643955340d2dde57771c2876.png" alt="image-20230413215155311" /></p>
<p><em><strong>如上所示:</strong></em></p>
<ul>
<li>首先定义了一个伪目标<code>all</code> , 接着定义了两个函数<code>func1</code>和<code>func2</code> .</li>
<li><code>func1</code>中通过通过<code>$(0)</code>输出<code>call</code> 的第一个参数，也就是函数名<code>fun1</code></li>
<li><code>func2</code>中同时输出了第一个参数和第二个参数</li>
<li><strong>注意</strong>，自定义函数是一个 <em><strong>过程调用</strong></em>，<em><strong>没有任何返回值</strong></em>，这是与<code>Makefile</code>的 <em><strong>内置函数</strong></em> 的区别之处。</li>
</ul>
<br>
<hr />
<h2 id="3️⃣"><a class="markdownIt-Anchor" href="#3️⃣"></a> 3️⃣</h2>
<h3 id="31-伪目标"><a class="markdownIt-Anchor" href="#31-伪目标"></a> 3.1 伪目标</h3>
<h4 id="311-介绍"><a class="markdownIt-Anchor" href="#311-介绍"></a> 3.1.1 介绍</h4>
<ul>
<li>在上面的例子中, 使用了<code>PHONY</code> 来显性的指明了一个伪目标<code>all</code></li>
<li>伪目标并不是一个文件，只是一个 <em><strong>标签</strong></em> , 所以 <code>make</code> 无法生成它的依赖关系和决定它是否要执行。</li>
<li>在执行 make 命令的时候通过指定这个伪目标来执行其所在规则的定义的命令. 如:<code>make clean</code></li>
</ul>
<br>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">objects = main.o kbd.o command.o display.o \ </span><br><span class="line">insert.o search.o files.o utils.o</span><br><span class="line"></span><br><span class="line">edit : <span class="variable">$(objects)</span> </span><br><span class="line">	  gcc -o edit <span class="variable">$(objects)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-c标志表示产生目标文件, -o $@表示将输出文件命名为:左边的文件名， $&lt;表示依赖列表中的第一个项(即%.c)。</span></span><br><span class="line">%.o : %.c</span><br><span class="line">	gcc -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br><span class="line"> </span><br><span class="line">.PHONY : clean </span><br><span class="line">clean : </span><br><span class="line">rm edit <span class="variable">$(objects)</span></span><br></pre></td></tr></table></figure>
<p><em><strong>如上所示:</strong></em></p>
<p>有了<code>.PHONY : clean</code> 的声明 , 不管是否存在 <em><strong>&quot;clean&quot;</strong></em> 文件 , 要运行<code>clean</code> 这个目标 , 只能通过 <code>make clean</code> 指令</p>
<br>
<hr />
<h4 id="312-执行多个目标"><a class="markdownIt-Anchor" href="#312-执行多个目标"></a> 3.1.2  执行多个目标</h4>
<blockquote>
<p>可以通过使用 <em><strong>伪目标</strong></em> , 来实现一次生成多个目标文件的目的</p>
</blockquote>
<br>
<p><em><strong>如下所示:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">all : prog1 prog2 prog3 </span><br><span class="line">.PHONY : all </span><br><span class="line"> </span><br><span class="line">prog1 : prog1.o utils.o </span><br><span class="line">cc -o prog1 prog1.o utils.o </span><br><span class="line"> </span><br><span class="line">prog2 : prog2.o </span><br><span class="line">cc -o prog2 prog2.o </span><br><span class="line"> </span><br><span class="line">prog3 : prog3.o sort.o utils.o </span><br><span class="line">cc -o prog3 prog3.o sort.o utils.o</span><br></pre></td></tr></table></figure>
<p><em><strong>说明:</strong></em></p>
<ul>
<li>因为<code>Makefile</code> 中的第一个目标会被作为其默认目标 , 通过声明一个<code>all</code> 的伪目标 , 其依赖于其它三个目标<code>prog1 prog2 prog3</code></li>
<li>由于伪目标的特性是，总是被执行的，所以其依赖的那三个目标就总是不如<code>all</code>这个目标新。</li>
<li>就能达到一次生成多个目标的目的</li>
</ul>
<br>
<hr />
<h3 id="32-模式规则"><a class="markdownIt-Anchor" href="#32-模式规则"></a> 3.2 模式规则</h3>
<blockquote>
<ul>
<li>
<p>使用模式规则可以定义一个隐含规则 , 例如: (怎么从所有的<code>[.c]</code>文件生成相应的<code>[.o]</code>文件的规则)</p>
</li>
<li>
<p>在模式规则中, 至少在规则的目标定义中要包含<code>%</code>，否则，就是一般的规则。</p>
</li>
<li>
<p>目标中的<code>%</code>表示对文件名的匹配，<code>%</code>表示长度任意的 <em><strong>非空字符串</strong></em></p>
<p><em><strong>例如:</strong></em></p>
<ul>
<li><code>%.c</code>就是所有的以<code>.c</code> 结尾的文件，类似于通配符 <code>*</code></li>
<li><code>a.%.c</code> 就表示以 <code>a.</code>开头，以<code>.c</code> 结束的所有文件</li>
</ul>
</li>
<li>
<p>如果<code>%</code>定义在目标中，那么，<em><strong>目标</strong></em> 中的<code>%</code>的值 <em><strong>决定</strong></em> 了 <em><strong>依赖目标</strong></em> 中的<code>%</code>的值</p>
</li>
</ul>
</blockquote>
<p>在上面关于 <em><strong>伪目标</strong></em> 的例子中使用了这样一行规则:</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-c标志表示产生目标文件, -o $@表示将输出文件命名为:左边的文件名， $&lt;表示依赖列表中的第一个项(即%.c)。</span></span><br><span class="line">%.o : %.c</span><br><span class="line">	gcc -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>这段代码的含义是指出了怎么从所有的<code>[.c]</code>文件生成相应的<code>[.o]</code>文件的规则</p>
<p><code>%.o</code> 是指将当前目录下所有以<code>.o</code>为后缀的文件当成 <em><strong>目标</strong></em>。同理, 对应的 <code>.c</code>文件为 <em><strong>依赖目标</strong></em></p>
</blockquote>
<br>
<hr />
<h4 id="321-模式匹配"><a class="markdownIt-Anchor" href="#321-模式匹配"></a> 3.2.1 模式匹配</h4>
<ul>
<li>一般来说，<em><strong>一个目标</strong></em> 的模式有一个有前缀或是后缀的<code>%</code>，或是没有前后缀，直接就是一个&quot;%&quot;。</li>
<li>把<code>%</code>所匹配的内容叫做 <em><strong>&quot;茎&quot;</strong></em> ，例如<code>%.c</code>所匹配的文件<code>test.c</code>中<code>test</code>就是 <em><strong>&quot;茎&quot;</strong></em> 。</li>
<li>因为在目标和依赖目标中同时有 <code>%</code> 时，依赖目标会将 <code>%</code>  替换为 <em><strong>茎</strong></em> , 从而得出文件名。</li>
</ul>
<br>
<p><em><strong>例如:</strong></em> 有这样一个模式规则</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">%.o : %.c</span><br><span class="line"><span class="comment"># 当模式%.o 匹配文件名为 &quot;test.o&quot;时</span></span><br><span class="line"><span class="comment"># 此时&quot;茎&quot;是 test </span></span><br><span class="line"><span class="comment"># 此时, 依赖目标中 &quot;%.c&quot;会将 &quot;%&quot; 替换为茎 , 得到文件名&quot;test.c&quot;</span></span><br></pre></td></tr></table></figure>
<br>
<blockquote>
<p>当一个模式匹配 <em><strong>包含有斜杠</strong></em> 的文件时 , 在进行模式匹配时, <em><strong>目录部分</strong></em> 会首先被移开，然后进行匹配，成功后，再把目录加回去。</p>
</blockquote>
<p><em><strong>例如:</strong></em></p>
<ul>
<li>有一个模式 <code>e%t</code> , 和文件名 <code>src/eat</code> 匹配 ,则 <em><strong>茎</strong></em> 是 <code>src/a</code></li>
<li>当 <em><strong>依赖目标</strong></em> 转换为文件名的时候 ,  <em><strong>茎</strong></em> 中的路径名将被加在前面 , <code>%</code>被替换为 <em><strong>茎</strong></em> 的其余部分</li>
<li>如果依赖目标中 有一个<code>c%r</code> 和 <em><strong>茎</strong></em> 匹配会得到 <code>src/car</code></li>
</ul>
<br>
<hr />
<h3 id="33-通配符"><a class="markdownIt-Anchor" href="#33-通配符"></a> 3.3 通配符</h3>
<blockquote>
<ul>
<li>在<code>Makefile</code>中可以使用的通配符有：<code>*</code> 、<code>?</code> 、 <code>[…]</code>。通配符的使用方法和含义和在<code>shell</code>中 <em><strong>一样</strong></em>。</li>
<li>通配符代替了 <em><strong>一系列文件</strong></em> , 如<code>*.c</code>表示所以后缀为 c 的文件</li>
<li><code>~</code> 波浪号表示当前用户的<code>HOME</code>目录 , 如<code>~/test</code> 就表示 <code>/home/test</code>这个目录</li>
</ul>
</blockquote>
<br>
<p>在<code>Makefile</code>中，通配符主要用在 <em><strong>两个场合</strong></em>：</p>
<ul>
<li>
<p>用在规则的 <em><strong>目标和依赖</strong></em> 中：</p>
<blockquote>
<p><code>make</code>在读取<code>Makefile</code>时会自动对其进行匹配处理（通配符展开）。如：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">test: *.o</span></span><br><span class="line"> gcc -o <span class="variable">$@</span> <span class="variable">$^</span></span><br><span class="line"></span><br><span class="line"><span class="section">*.o: *.c</span></span><br><span class="line"> gcc -c <span class="variable">$^</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>用在规则的 <em><strong>命令</strong></em> 中:</p>
<blockquote>
<p>这时 , 通配符的通配处理在<code>shell</code>执行命令时完成。如：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">clean:</span></span><br><span class="line"> rm -f *.o</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>除了前面两个以外 , 通配符使用在其他地方, 例如使用在 <em><strong>变量</strong></em> 当中</p>
<blockquote>
<p>在变量中的通配符 <em><strong>不会进行展开</strong></em> , 因为在<code>makefile</code>中变量，相当于 <code>C/C++</code> 中的宏 , 只是简单的进行替换</p>
<p>如果要让通配符在变量中展开, 可以使用 <em><strong>内置函数</strong></em><code>wildcard</code></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 变量不会展开 , objects的值就是 *.o</span></span><br><span class="line">objects = *.o </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用wildcard 函数获取当前目录下所有.c文件</span></span><br><span class="line"><span class="comment">#$(wildcard *.c) 是用来获取当前目录下所有的.c 文件</span></span><br><span class="line">CFILES := <span class="variable">$(<span class="built_in">wildcard</span> *.c)</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<br>
<hr />
<h4 id="331-与-通配符"><a class="markdownIt-Anchor" href="#331-与-通配符"></a> 3.3.1 “%” 与 通配符 “*”</h4>
<blockquote>
<p><code>%</code> 和 <code>*</code>的主要区别在于 , <code>*</code>是应用在系统中的 , <code>%</code>是应用在<code>Makefile</code>文件中的</p>
</blockquote>
<p>前面提到一个 <em><strong>示例</strong></em>:</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">objects = main.o kbd.o command.o display.o </span><br><span class="line"></span><br><span class="line">edit : <span class="variable">$(objects)</span> </span><br><span class="line">	  gcc -o edit <span class="variable">$(objects)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在这个示例中:</p>
<ul>
<li><code>make</code>命令在构造<code>edit</code>文件时 ,  发现需要<code>main.o kbd.o command.o display.o</code> 这几个文件</li>
<li>接下来 , make命令会在Makefile文件中寻找 能匹配 <code>main.o kbd.o command.o display.o</code> 的规则</li>
<li>在分别找到<code>main.o</code>  <code>kbd.o</code> <code>command.o</code> <code>display.o</code> 的规则后 , 会运行该规则下的 <em><strong>命令</strong></em></li>
<li>等到目标<code>edit</code>  的依赖条件齐全之后 , 开始构造<code>edit</code></li>
</ul>
</blockquote>
<p>以上是一般<code>make</code>在工作时的 <em><strong>执行流程</strong></em> ,</p>
<blockquote>
<p>在工作流程中 , 如果存在 <code>%</code> 符号 ,例如:</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">objects = main.o kbd.o command.o display.o </span><br><span class="line"></span><br><span class="line">edit : <span class="variable">$(objects)</span> </span><br><span class="line">	  gcc -o edit <span class="variable">$(objects)</span></span><br><span class="line"></span><br><span class="line">%.o : %.c</span><br><span class="line">	gcc -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span>	  </span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><code>%</code> 符号只会在带着目的 <em>(例如寻找 <code>main.o</code>)</em> , 才会把它要寻找的目标 ( <code>main.o</code> ) 匹配到 <code>%</code> 符号</p>
</li>
<li>
<p>所以 , 如果只写以下的代码 , make会产生报错</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 因为此时% 符号并没有目标 , 所以第2~3行定义的这个 规则并不会被执行 , 从而产生报错</span></span><br><span class="line">%.o : %.c</span><br><span class="line">	gcc -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span>	  	</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<br>
<blockquote>
<p>而如果存在通配符 <code>*</code> , make命令会然后 <em><strong>遍历目录的文件</strong></em>，看是否匹配。找出所有匹配的项目。</p>
</blockquote>
<br>
<p><em><strong>总结</strong></em></p>
<p>虽然 , <code>%</code>和<code>*</code> 两个符号的功能看似类似 , 但他们的工作方式是完全不同的</p>
<br>
<hr />
<h3 id="34-条件判断"><a class="markdownIt-Anchor" href="#34-条件判断"></a> 3.4 条件判断</h3>
<blockquote>
<p>在<code>Makefile</code> 中也存在条件判断 , 通过使用条件表达式可以让 <code>make</code> 根据运行时的不同情况选择不同的执行分支</p>
<p>用于条件判断的 <em><strong>关键字</strong></em> 有四个:  <code>ifeq</code>、<code>ifneq</code>、<code>ifdef</code> 和 <code>ifndef</code></p>
</blockquote>
<p><em><strong>语法如下:</strong></em> 语法有两种</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">&lt;条件关键字&gt;</span><br><span class="line">	&lt;条件为真时执行的语句&gt;</span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure>
<p><em><strong>另一种</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">&lt;条件关键字&gt;</span><br><span class="line">	&lt;条件为真时执行的语句&gt;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	&lt;条件为假时执行的语句&gt;</span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="341-ifeq-和-ifneq"><a class="markdownIt-Anchor" href="#341-ifeq-和-ifneq"></a> 3.4.1 “ifeq” 和 “ifneq”</h4>
<blockquote>
<p><code>ifeq</code> 用来判断是否 <em><strong>相等</strong></em></p>
<p><code>ifneq</code> 就是判断是否 <em><strong>不相等</strong></em></p>
</blockquote>
<br>
<p><em><strong>用法如下:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ifeq的用法</span></span><br><span class="line"><span class="keyword">ifeq</span> (&lt;参数 1&gt;, &lt;参数 2&gt;)</span><br><span class="line"><span class="keyword">ifeq</span> ‘&lt;参数 1 &gt;’,‘ &lt;参数 2&gt;’</span><br><span class="line"><span class="keyword">ifeq</span> “&lt;参数 1&gt;”, “&lt;参数 2&gt;”</span><br><span class="line"><span class="keyword">ifeq</span> “&lt;参数 1&gt;”, ‘&lt;参数 2&gt;’</span><br><span class="line"><span class="keyword">ifeq</span> ‘&lt;参数 1&gt;’, “&lt;参数 2&gt;”</span><br><span class="line"></span><br><span class="line"><span class="comment">#上述用法中都是用来比较“参数 1”和“参数 2”是否相同，如果相同则为真</span></span><br><span class="line"><span class="comment">#“参数 1”和“参数 2”可以为函数返回值。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifneq的用法</span></span><br><span class="line"><span class="keyword">ifneq</span> (&lt;参数 1&gt;, &lt;参数 2&gt;)</span><br><span class="line"><span class="keyword">ifneq</span> ‘&lt;参数 1 &gt;’,‘ &lt;参数 2&gt;’</span><br><span class="line"><span class="keyword">ifneq</span> “&lt;参数 1&gt;”, “&lt;参数 2&gt;”</span><br><span class="line"><span class="keyword">ifneq</span> “&lt;参数 1&gt;”, ‘&lt;参数 2&gt;’</span><br><span class="line"><span class="keyword">ifneq</span> ‘&lt;参数 1&gt;’, “&lt;参数 2&gt;”</span><br><span class="line"><span class="comment"># ifneq的用法与ifeq类型 , 只是ifneq用来了比较“参数 1”和“参数 2”是否不相等，如果不相等的话就为真。</span></span><br></pre></td></tr></table></figure>
<p><em><strong>说明:</strong></em></p>
<p>参数是可以使用<code>make</code>函数的 , 例如<a href="#4">前面提到</a>的一个例子</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(<span class="built_in">origin</span> FOO)</span>, undefined) </span><br><span class="line">FOO = bar </span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>这个例子中就在 <code>ifeq</code>中使用了 <code>origin</code> 函数 ,  用来判断 <code>FOO</code>变量是否被定义过</p>
</blockquote>
<br>
<hr />
<h4 id="342-ifdef和ifndef"><a class="markdownIt-Anchor" href="#342-ifdef和ifndef"></a> 3.4.2 “ifdef&quot;和&quot;ifndef”</h4>
<blockquote>
<p><em><strong>格式如下:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ifdef</span> &lt;variable-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ifndef</span> &lt;variable-name&gt;</span><br></pre></td></tr></table></figure>
<p>其中<code>ifdef</code> 用来判断变量<code>&lt;variable-name&gt;</code>的值是否为空 ,  <em><strong>非空</strong></em> 这表达式为真 , 否则表达式为假 .</p>
<p><code>&lt;variable-name&gt;</code> 同样可以是一个函数的 <em><strong>返回值</strong></em> , <code>ifdef</code> 和 <code>ifndef</code> 只是测试一个变量是否有值，其并不会把变量扩展到当前位置。</p>
<p><code>ifndef</code> 与<code>ifdef</code> 的意思相反</p>
</blockquote>
<br>
<p><em><strong>示例如下:</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">bar = </span><br><span class="line">foo = <span class="variable">$(bar)</span> </span><br><span class="line"><span class="keyword">ifdef</span> foo </span><br><span class="line">frobozz = yes </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">frobozz = no </span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断foo变量是否为空 , 运行结果是frobozz的值为yes</span></span><br></pre></td></tr></table></figure>
<br>
<h2 id="4️⃣-示例"><a class="markdownIt-Anchor" href="#4️⃣-示例"></a> 4️⃣ 示例</h2>
<p><em><strong>例1</strong></em></p>
<p>给出一个<code>makefile</code>程序 ,  用来编译当前目录下的所有文件</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">all:$(subst .c,.o,$(wildcard *.c))</span></span><br><span class="line"> </span><br><span class="line"><span class="section">%.o:%.c</span></span><br><span class="line">    gcc -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br><span class="line"> </span><br><span class="line">.PHONY : clean</span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm  *.o</span><br><span class="line">	rm all</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<p><em><strong>例2</strong></em>  存在这样一个目录框架</p>
<p><img src="https://pic2.imgdb.cn/item/645de6790d2dde57772112ae.png" alt="image-20230508223437755" /></p>
<br>
<p><em><strong>Makefile 程序</strong></em></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目标文件名</span></span><br><span class="line">Name    		:= obj/ledc</span><br><span class="line">Link_File		:= Timx6ul</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义编译命令</span></span><br><span class="line">Cross_Compile   :=  arm-linux-gnueabihf</span><br><span class="line">CC 				:=  <span class="variable">$(Cross_Compile)</span>-gcc</span><br><span class="line">Link    		:= -ld -<span class="variable">$(Link_File)</span>.lds -o</span><br><span class="line">Elf_Bin 		:= -objcopy -O binary -S</span><br><span class="line"></span><br><span class="line"><span class="comment"># 头文件路径</span></span><br><span class="line">Inc_Dirs		:= bsp/led  \</span><br><span class="line">				   drivers  \</span><br><span class="line">				   user     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 源文件和汇编文件路径</span></span><br><span class="line">Src_Dirs		:= bsp/led  \</span><br><span class="line">				   project  \</span><br><span class="line">				   user						   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将所有头文件前面添加上 参数 &quot;-I&quot; , Makefile语法要求指明头文件目录的时候需要加上&quot;-I&quot;</span></span><br><span class="line">Include  		:= <span class="variable">$(<span class="built_in">patsubst</span> %, -I %, <span class="variable">$(Inc_Dirs)</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取源文件和汇编文件</span></span><br><span class="line">S_Files			:= <span class="variable">$(<span class="built_in">foreach</span> <span class="built_in">dir</span>, <span class="variable">$(Src_Dirs)</span>, $(<span class="built_in">wildcard</span> <span class="variable">$(dir)</span>/*.S)</span>)</span><br><span class="line">C_Files			:= <span class="variable">$(<span class="built_in">foreach</span> <span class="built_in">dir</span>, <span class="variable">$(Src_Dirs)</span>, $(<span class="built_in">wildcard</span> <span class="variable">$(dir)</span>/*.c)</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出文件中的的非目录部分</span></span><br><span class="line">S_File_Ndir		:= <span class="variable">$(<span class="built_in">notdir</span> <span class="variable">$(S_Files)</span>)</span> </span><br><span class="line">C_File_Ndir  	:= <span class="variable">$(<span class="built_in">notdir</span> <span class="variable">$(C_Files)</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将所有.c , .s 文件替换成.o</span></span><br><span class="line">S_Obj 			:= <span class="variable">$(<span class="built_in">patsubst</span> %, obj/%, $(S_File_Ndir:.S=.o)</span>)</span><br><span class="line">C_Obj			:= <span class="variable">$(<span class="built_in">patsubst</span> %, obj/%, $(C_File_Ndir:.c=.o)</span>)</span><br><span class="line">Obj				:= <span class="variable">$(S_Obj)</span> <span class="variable">$(C_Obj)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定搜索目录</span></span><br><span class="line">VPATH			:= <span class="variable">$(Src_Dirs)</span> <span class="variable">$(Inc_Dirs)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(Name)</span>.bin: <span class="variable">$(Obj)</span></span><br><span class="line">	<span class="variable">$(Cross_Compile)</span><span class="variable">$(Link)</span> <span class="variable">$(Name)</span>.elf <span class="variable">$^</span></span><br><span class="line">	<span class="variable">$(Cross_Compile)</span><span class="variable">$(Elf_Bin)</span> <span class="variable">$(Name)</span>.elf <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(C_Obj)</span>: obj/%.o : %.c</span><br><span class="line">	<span class="variable">$(CC)</span> <span class="variable">$(Include)</span> -Wall -nostdlib -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(S_Obj)</span>: obj/%.o : %.S</span><br><span class="line">	<span class="variable">$(CC)</span> -Wall -nostdlib -c -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm obj/*.o obj/*.bin obj/*.elf  </span><br></pre></td></tr></table></figure>
<hr />
<h2 id="️参考文章"><a class="markdownIt-Anchor" href="#️参考文章"></a> ❗️参考文章</h2>
<p><a href="https://www.ruanyifeng.com/blog/2015/02/make.html">Make 命令教程</a></p>
<p><a href="https://www.cnblogs.com/warren-wong/p/3979270.html">Makefile中的%标记和系统通配符*的区别</a></p>
<p>《GUN make使用手册》</p>
<p>《跟我一起写Makefile》</p>
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>Makefile</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言实现面向对象编程</title>
    <url>/2023/04/08/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="c语言实现面向对象编程"><a class="markdownIt-Anchor" href="#c语言实现面向对象编程"></a> C语言实现面向对象编程</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.8.31」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<br>
<p><strong>摘要：</strong>  <em>简单记录用C语言实现面向对象编程</em></p>
<p>​			<em>(自留记录用🌟  , 写的比较混乱)</em></p>
</blockquote>
<br>
<span id="more"></span>
<hr />
<hr />
<br>
<h2 id="0️⃣-前言"><a class="markdownIt-Anchor" href="#0️⃣-前言"></a> 0️⃣ 前言</h2>
<p>在设计复杂系统的时候,面向对象的程序设计具有 拓展性好、维护性好、复用性好等优点。</p>
<p>面向对象编程，它是<strong>一种设计方法、设计思想</strong> ，具备三个基本特征：</p>
<ul>
<li>封装</li>
<li>继承</li>
<li>多态</li>
</ul>
<p>因为平时进行嵌入式开发主要还是应用C语言进行开发，所以通过C语言来实现面向对象</p>
<br>
<hr />
<br>
<h2 id="1️⃣-封装"><a class="markdownIt-Anchor" href="#1️⃣-封装"></a> 1️⃣ 封装</h2>
<p>一个类中主要包含两种基本成员: <strong>属性</strong>和<strong>方法</strong></p>
<br>
<p>在C语言中:</p>
<ul>
<li>一个结构体就相当于一个类，结构体实例化之后就是一个对象。</li>
<li>结构体中的成员类似类中的成员;</li>
<li>结构体中的<strong>函数指针</strong>类似类方法。</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/6316166216f2c2beb1d4bf10.png" alt="image-20220829085728552" /></p>
<br>
<p>【<em>良好的封装可以有效减少耦合性，封装内部实现可以自由修改，对系统的其它部分没有影响</em>】</p>
<br>
<h4 id="11内存模型"><a class="markdownIt-Anchor" href="#11内存模型"></a> 1.1内存模型:</h4>
<p>在<strong>栈区</strong>中储存着<code>Gr</code>对象 , 在<strong>程序代码区</strong> 储存着<code>Gr</code>对象的实现方法</p>
<br>
<hr />
<br>
<h2 id="2️⃣-继承"><a class="markdownIt-Anchor" href="#2️⃣-继承"></a> 2️⃣ 继承</h2>
<br>
<ul>
<li>在面向对象编程中,封装和继承其实是不分开的 ; 封装就是为了更好地继承。</li>
<li>我们将几个类共同的一些属性和方法抽取出来,<strong>封装成一个类</strong></li>
<li>通过继承最大化地实现<strong>代码复用</strong>。</li>
<li>通过继承,子类可以直接使用父类中的属性和方法。</li>
</ul>
<br>
<h4 id="21-继承方法"><a class="markdownIt-Anchor" href="#21-继承方法"></a> 2.1 继承方法</h4>
<ul>
<li>可以通<mark>过内嵌结构体</mark>或<mark>结构体指针</mark>来模拟继承</li>
<li>也可以把使用结构体类型定义<strong>各个不同的结构体变量</strong>也看作是继承.
<ul>
<li>这种继承一般用在子类和父类<strong>差别不大</strong>的场合;</li>
<li>各个结构体变量就是子类,然后各个子类拓展各自的方法和属性</li>
</ul>
</li>
</ul>
<hr />
<br>
<h4 id="22内存模型"><a class="markdownIt-Anchor" href="#22内存模型"></a> 2.2<strong>内存模型:</strong></h4>
<p>以上面<code>Gr_t</code>结构体为例:</p>
<img src="https://pic.imgdb.cn/item/6316169b16f2c2beb1d514f3.png" alt="image-20220829205321949" style="zoom: 67%;" />
<blockquote>
<ul>
<li>如图所示,子类<code>Gr_t</code>与第一个继承而来的<code>Motor_t</code>共用一个地址 ;</li>
<li>在<mark>栈区</mark>中有一处空间储存着<code>Gr_t</code>类实例后的对象 , 而<code>Gr_t</code>结构体中的第一个成员是<code>Motor_t</code>对象 , 所以包含了父类中定义的属性</li>
<li>因此对于一个子类对象 ,它可以像访问自己的成员一样访问父类的成员</li>
</ul>
</blockquote>
<br>
<hr />
<br>
<h4 id="23代码"><a class="markdownIt-Anchor" href="#23代码"></a> 2.3代码:</h4>
<blockquote>
<p>以底盘结构体为例:</p>
</blockquote>
<p><strong>结构体定义:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*************************************底盘结构体(Chassis_t)********************************************/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">/*数据变量*/</span></span><br><span class="line">	C_t C;</span><br><span class="line">	REMOTE_t *RC;</span><br><span class="line">	FSM_t *Fsm;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/*函数指针变量*/</span></span><br><span class="line">	<span class="type">void</span> (*Fsm_Init)(<span class="type">void</span>);								<span class="comment">//状态机初始化(相当于父类构造函数)</span></span><br><span class="line">	<span class="type">void</span> (*Wheel_Init)(C_t *C);							<span class="comment">//电机1初始化(相当于父类构造函数)</span></span><br><span class="line">	<span class="type">void</span> (*Rescue_Init)(C_t *C);						<span class="comment">//电机2初始化(相当于父类构造函数)</span></span><br><span class="line">	<span class="type">void</span> (*Indepen)(C_t*,<span class="type">float</span> ,<span class="type">float</span> ,<span class="type">float</span> ,<span class="type">int16_t</span>);	<span class="comment">//底盘跟随(实现方法)</span></span><br><span class="line">....</span><br><span class="line">&#125;Chassis_t;</span><br><span class="line"><span class="comment">/**********************************************底盘数据结构体(C_t)**********************************************/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	Motor_t WheelMotor[<span class="number">4</span>]; </span><br><span class="line">	Motor_t	RescueMotor;   </span><br><span class="line">	PYR_t *gyro;           </span><br><span class="line">	PID_t Yaw_Pid;         </span><br><span class="line">	<span class="type">void</span> (*Can_Send_Wheel)(<span class="type">int16_t</span>,<span class="type">int16_t</span>,<span class="type">int16_t</span>,<span class="type">int16_t</span>);</span><br><span class="line">	<span class="type">void</span> (*Can_Send_Rescue)(<span class="type">int16_t</span>,<span class="type">int16_t</span>,<span class="type">int16_t</span>,<span class="type">int16_t</span>);</span><br><span class="line">	PYR_t* (*Get_PYR_t)(<span class="type">void</span>);</span><br><span class="line">&#125;C_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*电机结构体*/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">uint8_t</span> ID;					<span class="comment">//电机ID号</span></span><br><span class="line">	<span class="type">uint8_t</span> Pos_Lock;			<span class="comment">//位置锁</span></span><br><span class="line">...        </span><br><span class="line">&#125;Motor_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 陀螺仪欧拉角结构体 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	u8 data[<span class="number">128</span>];</span><br><span class="line">	<span class="type">float</span> Roll;</span><br><span class="line">	<span class="type">float</span> Pitch;</span><br><span class="line">...</span><br><span class="line">&#125;PYR_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*PID结构体*/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span>	</span><br><span class="line">	fp32 Set;</span><br><span class="line">	fp32 Ref;</span><br><span class="line">	fp32 LastRef;</span><br><span class="line">...</span><br><span class="line">&#125;PID_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************有限状态机(FSM_t)************************************************/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">fsm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="title function_">char</span> <span class="params">(*State_Change)</span><span class="params">(State_t *L_Sta,State_t *C_Sta)</span>;</span><br><span class="line">    State_t *Last_State;</span><br><span class="line">    State_t *Current_State;</span><br><span class="line">    State_t (*State_Table)[State_Column];</span><br><span class="line">&#125;FSM_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*状态结构体*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">state</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">void</span> (*State_Prepare)(<span class="type">void</span>);</span><br><span class="line">    <span class="type">void</span> (*State_Process)(<span class="type">void</span>);</span><br><span class="line">    <span class="type">void</span> (*Behavior_Process)(<span class="type">void</span>);</span><br><span class="line">&#125;State_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***************************************遥控数据结构体(REMOTE_t)***********************************/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	RC_ctrl_t *RC_ctrl;</span><br><span class="line">	First_Order_t RC_X;</span><br><span class="line">	First_Order_t KM_Z;</span><br><span class="line">	KeyBoard_State_t state;</span><br><span class="line">&#125;REMOTE_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一阶滤波函数*/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	fp32 Input;</span><br><span class="line">	fp32 LastOuput;</span><br><span class="line">...</span><br><span class="line">&#125;First_Order_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*键盘控制状态结构体*/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> Electromagnet : <span class="number">1</span>;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> RFID : <span class="number">1</span>;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> Magazine : <span class="number">1</span>;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">char</span> Auto_Clamp : <span class="number">5</span>;</span><br><span class="line">&#125;KeyBoard_State_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*遥控数据*/</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int16_t</span> ch0;</span><br><span class="line">	<span class="type">int16_t</span> ch1;</span><br><span class="line">...</span><br><span class="line">&#125;RC_ctrl_t;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr />
<br>
<h4 id="24底盘继承关系图"><a class="markdownIt-Anchor" href="#24底盘继承关系图"></a> <strong>2.4底盘继承关系图:</strong></h4>
<p><img src="https://pic.imgdb.cn/item/631617b016f2c2beb1d6b6ee.png" alt="" /></p>
<br>
<blockquote>
<ul>
<li>以上就是在多任务操作系统中 ,底盘任务中比较重要的一些<strong>结构体</strong>和对应的<strong>函数操作集</strong></li>
<li>底盘各个状态切换和正常运行都是通过这些<strong>函数接口</strong>来进行维护的</li>
<li>最后封装成一个底盘任务的运行结构体 , 并实例化用于<strong>储存</strong>任务运行中的属性和方法</li>
<li>其他任务也是如此(如云台任务等) , 不同的是不同任务对象各自对应<strong>实现方法</strong>有些<strong>不同</strong></li>
<li>像这样子类继承父类的过程中,一个接口在不同的<strong>子类</strong>中有<strong>不同的实现</strong> ,就是接下来要介绍的<strong>多态</strong></li>
</ul>
</blockquote>
<br>
<hr />
<br>
<h2 id="3️⃣-多态"><a class="markdownIt-Anchor" href="#3️⃣-多态"></a> 3️⃣ 多态</h2>
<ul>
<li>在C++里面实现多态使用的是<strong>虚函数</strong> , 子类在继承父类之后，在内存中又会开辟一块空间来放置子类自己的虚表</li>
<li>C中对于多态的实现可以借助<strong>函数指针</strong>(即函数映射)来实现。
<ul>
<li>因为对于不同的子类对象 , 一个方法在内存中只有一个变量，就是那个<strong>函数指针</strong>;</li>
<li>当p-&gt;pfun指向不同的传入实参的<strong>函数地址</strong> , 子类中的实现方法也自然会不同.</li>
</ul>
</li>
</ul>
<br>
<hr />
<h4 id="31-构造函数与this指针"><a class="markdownIt-Anchor" href="#31-构造函数与this指针"></a> 3.1 构造函数与<code>this</code>指针</h4>
<br>
<blockquote>
<p>在实例化一个对象时,C++通过构造函数来进行初始化,而C语言没有，所以我们需要创建一个自己的<strong>构造函数</strong>。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/631616b516f2c2beb1d53a08.png" alt="image-20220831182345598" /></p>
<br>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<blockquote>
<p>C 语言中不存在像 C++ 中那样的 this 指针，如果我们不显式地通过参数提供，那么在函数内部就无法访问结构体实例的其它成员。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/6316156516f2c2beb1d35213.png" alt="image-20220901113321988" /></p>
<br>
<hr />
<h4 id="32-测试代码"><a class="markdownIt-Anchor" href="#32-测试代码"></a> 3.2  测试代码</h4>
<br>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 基类 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> test1 ;						<span class="comment">// 父类成员</span></span><br><span class="line">    <span class="type">void</span> (*test_printf)(<span class="type">void</span>);		<span class="comment">// 父类实现方法</span></span><br><span class="line">&#125;<span class="type">base_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 派生类 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">base_t</span> test_base;				<span class="comment">// 继承</span></span><br><span class="line">    <span class="type">void</span> (*base_init)(<span class="type">base_t</span>* ba);	<span class="comment">// 父类构造函数实现方法</span></span><br><span class="line">&#125;<span class="type">derive_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 子类2重新实现的函数方法 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">derive2_printf</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;derive2\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 父类构造函数2 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Fbase2_init</span><span class="params">(<span class="type">base_t</span>* base)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 数据成员初始化 */</span></span><br><span class="line">    base-&gt;test1 = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 函数映射 */</span></span><br><span class="line">    base-&gt;test_printf = derive2_printf;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 子类构造函数2 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">derive2_init</span><span class="params">(<span class="type">derive_t</span>* der)</span></span><br><span class="line">&#123;</span><br><span class="line">    der-&gt;base_init = Fbase2_init;	  <span class="comment">// 函数映射 </span></span><br><span class="line">    der-&gt;base_init(&amp;der-&gt;test_base);  <span class="comment">// 初始化父类对象(即运行父类构造函数)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 子类1重新实现的函数方法 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">derive1_printf</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;derive1\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 父类构造函数1 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Fbase1_init</span><span class="params">(<span class="type">base_t</span>* base)</span></span><br><span class="line">&#123;</span><br><span class="line">    base-&gt;test1 = <span class="number">0</span>;</span><br><span class="line">    base-&gt;test_printf = derive1_printf;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 子类构造函数1 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">derive1_init</span><span class="params">(<span class="type">derive_t</span>* der)</span></span><br><span class="line">&#123;</span><br><span class="line">    der-&gt;base_init = Fbase1_init;</span><br><span class="line">    der-&gt;base_init(&amp;der-&gt;test_base);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 实例化对象并初始化 */</span></span><br><span class="line">    <span class="type">derive_t</span> der1,der2;</span><br><span class="line">    derive1_init(&amp;der1);</span><br><span class="line">    derive2_init(&amp;der2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 通过子类指针 去访问各个子类中同名函数的不同实现 */</span></span><br><span class="line">    <span class="type">derive_t</span>* der_point;</span><br><span class="line">    der_point = &amp;der2;</span><br><span class="line">    der_point-&gt;test_base.test_printf();</span><br><span class="line">    der_point = &amp;der1;</span><br><span class="line">    der_point-&gt;test_base.test_printf();    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><strong>运行结果:</strong></p>
<p><img src="https://pic.imgdb.cn/item/6316150416f2c2beb1d2c356.png" alt="image-20220831224350162" /></p>
<br>
<blockquote>
<ul>
<li>通过der-&gt;printf指向不同的传入实参的<strong>函数地址</strong> , 实现子类中不同的实现方法;</li>
<li>通过这种方法在C语言中模拟&quot;多态&quot;</li>
</ul>
</blockquote>
<br>
<hr />
<br>
<h2 id="️-应用实例"><a class="markdownIt-Anchor" href="#️-应用实例"></a> ❗️ 应用实例</h2>
<blockquote>
<p>以底盘驱动任务为例 , 说明C语言面向对象思想在项目中的使用</p>
</blockquote>
<h4 id="41-基本框架文件介绍"><a class="markdownIt-Anchor" href="#41-基本框架文件介绍"></a> 4.1 基本框架文件介绍</h4>
<ul>
<li>
<p><code>Chassis_Task.c/h</code></p>
<blockquote>
<p><strong>[ 应用层 ]</strong> : 是进程运行的主要文件(相当于main文件) , 同时提供了整个 底盘<strong>总的控制结构体</strong>(类)</p>
</blockquote>
</li>
<li>
<p><code>Chassis_Fsm.c/h</code></p>
<blockquote>
<p><strong>[ 应用接口层 ]</strong> :主要统一汇总下层API接口 , 并提供底盘控制<strong>状态行为函数</strong>的 <strong>方法</strong>;</p>
</blockquote>
</li>
<li>
<p><code>RemoteDeal.c/h</code></p>
<blockquote>
<p><strong>[ 功能模块层 ]</strong> : 主要 <strong>封装遥控接收模块</strong>功能 为上层<strong>提供API接口</strong> ,  并提供遥控<strong>数据处理</strong>的 <strong>方法和类</strong></p>
</blockquote>
</li>
<li>
<p><code>ChassisMotor.c/h</code></p>
<blockquote>
<p><strong>[ 业务逻辑层 ]</strong> :主要封装了各底盘行为模式功能 , 并提供了底盘<strong>电机驱动</strong>和控制的 <strong>方法和类</strong></p>
</blockquote>
</li>
<li>
<p><code>fsm.c/h</code></p>
<blockquote>
<p><strong>[ 应用层 ]</strong> :主要提供了底盘控制的状态机<strong>状态切换</strong>的 <strong>方法和类</strong></p>
</blockquote>
</li>
</ul>
<br>
<p><strong>软件框架:</strong></p>
<table><tbody>
    <tr>
        <th>应用层</th>
        <th>底盘控制任务</th>
        <th>状态机状态转换任务</th>
    </tr>
    <tr>
        <th>业务逻辑层</th>
        <th>底盘模式1</th>
        <th>底盘模式2</th>
        <th>底盘模式3..</th>
    </tr>
    <tr>
        <th>功能模块层</th>
        <th>电机驱动模块</th>
 	 	<th>遥控接收处理模块</th>
 	 	<th>算法库模块</th>
    </tr>
    <tr>
        <th>硬件驱动层</th>
  		<th>各外设驱动...</th>
    </tr>
    <tr>
<br>
<hr />
<br>
<h5 id="411-fsmch"><a class="markdownIt-Anchor" href="#411-fsmch"></a> 4.1.1 fsm.c/h</h5>
<blockquote>
<p><strong>[ 应用层 ]</strong> :主要提供了底盘控制的状态机<strong>状态切换</strong>的 <strong>方法和类</strong></p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/************************************ fsm.c **************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;fsm.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*状态机处理*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">FSM_Deal</span><span class="params">(FSM_t *fsm, <span class="type">unsigned</span> <span class="type">char</span> s1, <span class="type">unsigned</span> <span class="type">char</span> s2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*误操作判断*/</span></span><br><span class="line">    <span class="keyword">if</span>(s1 &lt;= <span class="number">0</span> || s1 &gt; State_Line || s2 &lt;= <span class="number">0</span> || s2 &gt; State_Column)</span><br><span class="line">    &#123;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*状态指向*/</span></span><br><span class="line">    fsm-&gt;Current_State = &amp;fsm-&gt;State_Table[s1<span class="number">-1</span>][s2<span class="number">-1</span>];			<span class="comment">// 用事件表,通过查表的方式获取底盘状态</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*状态变化*/</span></span><br><span class="line">    <span class="keyword">if</span>( fsm-&gt;State_Change(fsm-&gt;Last_State,fsm-&gt;Current_State) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fsm-&gt;Current_State-&gt;State_Prepare();	<span class="comment">// 状态切换前的准备 ,如:将电机输出清零 ,或记录当前底盘的yaw轴坐标等</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*保留上次状态*/</span></span><br><span class="line">    fsm-&gt;Last_State = fsm-&gt;Current_State;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*执行状态*/</span></span><br><span class="line">    fsm-&gt;Current_State-&gt;State_Process();		<span class="comment">// 函数映射</span></span><br><span class="line">		</span><br><span class="line">    <span class="comment">/*执行实际行为*/</span></span><br><span class="line">	fsm-&gt;Current_State-&gt;Behavior_Process();		<span class="comment">// 函数执行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************ fsm.h **************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*状态结构体(提供有限状态机的状态操作函数)*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">state</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">void</span> (*State_Prepare)(<span class="type">void</span>);				<span class="comment">// 状态准备函数</span></span><br><span class="line">    <span class="type">void</span> (*State_Process)(<span class="type">void</span>);				<span class="comment">// 状态执行函数</span></span><br><span class="line">    <span class="type">void</span> (*Behavior_Process)(<span class="type">void</span>);				<span class="comment">// 状态行为函数</span></span><br><span class="line">&#125;State_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*有限状态机*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">fsm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="title function_">char</span> <span class="params">(*State_Change)</span><span class="params">(State_t *L_Sta,State_t *C_Sta)</span>;		<span class="comment">// 比较状态是否发生改变</span></span><br><span class="line">    State_t *Last_State;						<span class="comment">// 上一次的状态</span></span><br><span class="line">    State_t *Current_State;						<span class="comment">// 当前状态</span></span><br><span class="line">    State_t (*State_Table)[State_Column];</span><br><span class="line">&#125;FSM_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*状态机处理函数*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">FSM_Deal</span><span class="params">(FSM_t *fsm, <span class="type">unsigned</span> <span class="type">char</span> s1, <span class="type">unsigned</span> <span class="type">char</span> s2)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="412-chassis_taskch"><a class="markdownIt-Anchor" href="#412-chassis_taskch"></a> 4.1.2  Chassis_Task.c/h</h5>
<blockquote>
<p><strong>[ 应用层 ]</strong> : 是进程运行的主要文件(相当于main文件) , 同时提供了整个 底盘<strong>总的控制结构体</strong>(类)</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/************************************  Chassis_Task.c **************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Chassis_Task.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> Chassis_t Chassis;</span><br><span class="line">Chassis_t Chassis;				<span class="comment">// 实例化对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Chassis_Task初始化(Chassis类的构造函数)*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">Chassis_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">/*函数映射 (将实现方法映射到 特定的API接口)*/</span>	</span><br><span class="line">	Chassis.Fsm_Init			= Chassis_FSM_Init;</span><br><span class="line">	Chassis.Wheel_Init 			= Wheel_Motor_Init;</span><br><span class="line">	Chassis.Rescue_Init			= Rescue_Motor_Init;</span><br><span class="line">	Chassis.Indepen				= Chassis_Indepen_Drive;</span><br><span class="line">	Chassis.Wiggle				= Chassis_Wiggle_Drive;</span><br><span class="line">	Chassis.Poweroff			= Chassis_Poweroff_Drive;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/*数据初始化*/</span></span><br><span class="line">	Chassis.RC = Return_RemoteDeal_Point();				<span class="comment">//Chassis的获取Remote数据指针 (组合)</span></span><br><span class="line">	Chassis.Wheel_Init(&amp;Chassis.C);						<span class="comment">//Chassis的电机初始化	(继承 相当于调用父类构造函数)</span></span><br><span class="line">	Chassis.Rescue_Init(&amp;Chassis.C);					<span class="comment">//Chassis的电机初始化 (继承 相当于调用父类构造函数)</span></span><br><span class="line">	Chassis.Fsm	= Return_Chassis_FSM();					<span class="comment">//Chassis获取状态机数据指针 (组合)</span></span><br><span class="line">	Chassis.Fsm_Init();									<span class="comment">//底盘状态机初始化 (调用父类构造函数)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 底盘进程入口函数 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Chassis_Task</span><span class="params">(<span class="type">void</span> *pvParameters)</span></span><br><span class="line">&#123;</span><br><span class="line">	vTaskDelay(<span class="number">500</span>);</span><br><span class="line">	Chassis_Init();				<span class="comment">// 显式调用Chassis类构造函数</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		FSM_Deal(Chassis.Fsm,Chassis.RC-&gt;RC_ctrl-&gt;s1,Chassis.RC-&gt;RC_ctrl-&gt;s2);		<span class="comment">// 进入状态机处理函数进行处理</span></span><br><span class="line">		vTaskDelay(<span class="number">2</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************  Chassis_Task.h **************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 底盘控制结构体 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">/*数据变量*/</span></span><br><span class="line">	C_t C;</span><br><span class="line">	REMOTE_t *RC;</span><br><span class="line">	FSM_t *Fsm;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/*函数指针变量*/</span></span><br><span class="line">	<span class="type">void</span> (*Fsm_Init)(<span class="type">void</span>);								<span class="comment">//状态机初始化(相当于父类构造函数)</span></span><br><span class="line">	<span class="type">void</span> (*Wheel_Init)(C_t *C);							<span class="comment">//电机1初始化(相当于父类构造函数)</span></span><br><span class="line">	<span class="type">void</span> (*Rescue_Init)(C_t *C);						<span class="comment">//电机2初始化(相当于父类构造函数)</span></span><br><span class="line">	<span class="type">void</span> (*Indepen)(C_t*,<span class="type">float</span> ,<span class="type">float</span> ,<span class="type">float</span> ,<span class="type">int16_t</span>);	<span class="comment">//底盘跟随(实现方法)</span></span><br><span class="line">....</span><br><span class="line">&#125;Chassis_t;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Chassis_Task</span><span class="params">(<span class="type">void</span> *pvParameters)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="413-chassismotorch"><a class="markdownIt-Anchor" href="#413-chassismotorch"></a> 4.1.3 ChassisMotor.c/h</h5>
<blockquote>
<p><strong>[ 业务逻辑层 ]</strong> :主要封装了各底盘行为模式功能 , 并提供了底盘<strong>电机驱动</strong>和控制的 <strong>方法和类</strong></p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/************************************ ChassisMotor.c **************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ChassisMotor.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 底盘电机初始化 (电机数据类的构造函数) */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Wheel_Motor_Init</span><span class="params">(C_t *C)</span></span><br><span class="line">&#123;		</span><br><span class="line">		u8 CMi = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    	<span class="comment">/* 初始化各电机pid参数表 */</span></span><br><span class="line">		<span class="type">float</span> Spid[<span class="number">4</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">		&#123;WHEEL_MOTOR1_P,WHEEL_MOTOR1_I,WHEEL_MOTOR1_D&#125;,</span><br><span class="line">		&#123;WHEEL_MOTOR2_P,WHEEL_MOTOR2_I,WHEEL_MOTOR2_D&#125;,</span><br><span class="line">		&#123;WHEEL_MOTOR3_P,WHEEL_MOTOR3_I,WHEEL_MOTOR3_D&#125;,</span><br><span class="line">		&#123;WHEEL_MOTOR4_P,WHEEL_MOTOR4_I,WHEEL_MOTOR4_D&#125;,</span><br><span class="line">		&#125;;</span><br><span class="line">			</span><br><span class="line">		<span class="comment">/*函数映射*/</span></span><br><span class="line">		C-&gt;Can_Send_Rescue 		= CAN1_205_To_208_SEND;</span><br><span class="line">		....</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/*清零处理*/</span></span><br><span class="line">		MotorValZero(&amp;C-&gt;WheelMotor[<span class="number">0</span>]);</span><br><span class="line">		....</span><br><span class="line">		<span class="comment">/* 初始化各电机数据 */</span></span><br><span class="line">		<span class="keyword">for</span>(CMi = <span class="number">0</span>;CMi &lt; <span class="number">4</span>;CMi ++)</span><br><span class="line">		&#123;</span><br><span class="line">				C-&gt;WheelMotor[CMi].ID = CMi + <span class="number">1</span>;</span><br><span class="line">				C-&gt;WheelMotor[CMi].Encoder	=	C-&gt;Get_Encoder(CMi+<span class="number">1</span>);</span><br><span class="line">				PID_INIT(&amp;C-&gt;WheelMotor[CMi].SPID,Spid[CMi][<span class="number">0</span>],Spid[CMi][<span class="number">1</span>],Spid[CMi][<span class="number">2</span>],<span class="number">15000</span>,<span class="number">16000</span>);	<span class="comment">//速度环初始化</span></span><br><span class="line">				C-&gt;WheelMotor[CMi].MotorType = CHASSIS_M;												<span class="comment">//初始化电机种类</span></span><br><span class="line">				C-&gt;WheelMotor[CMi].Radio = <span class="number">19</span>;															<span class="comment">//初始化底盘电机减速比</span></span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/*获取底盘陀螺仪数据*/</span></span><br><span class="line">		C-&gt;gyro = C-&gt;Get_PYR_t();  <span class="comment">// 组合(获取父类数据)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 底盘模式1 */</span> </span><br><span class="line"><span class="type">void</span> <span class="title function_">Chassis_Indepen_Drive</span><span class="params">(C_t *C,<span class="type">float</span> X_IN,<span class="type">float</span> Y_IN,<span class="type">float</span> Z_IN,<span class="type">int16_t</span> ExpRescue)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 底盘模式2 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Chassis_Wiggle_Drive</span><span class="params">(C_t *C,<span class="type">float</span> X_IN,<span class="type">float</span> Y_IN,<span class="type">float</span> Z_IN)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 底盘模式3 */</span></span><br><span class="line">....</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">/************************************ ChassisMotor.h **************************************************/</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">/* 底盘数据结构体 */</span>    </span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	Motor_t WheelMotor[<span class="number">4</span>]; 		<span class="comment">// 底盘电机</span></span><br><span class="line">....</span><br><span class="line">&#125;C_t;   </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="414-chassis_fsmch"><a class="markdownIt-Anchor" href="#414-chassis_fsmch"></a> 4.1.4  Chassis_Fsm.c/h</h5>
<blockquote>
<p><strong>[ 应用接口层 ]</strong> :主要统一汇总下层API接口 , 并提供底盘控制<strong>状态行为函数</strong>的 <strong>方法</strong>;</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/******************************************* Chassis_Fsm.c **************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Chassis_Fsm.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Chassis_Task.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">FSM_t Chassis_FSM;			<span class="comment">/* 底盘状态机*/</span></span><br><span class="line">State_t OFFLINE;			<span class="comment">/* 状态模式1 */</span></span><br><span class="line">State_t INDEPEN;			<span class="comment">/* 状态模式2 */</span></span><br><span class="line">State_t WIGGLE;				<span class="comment">/* 状态模式3 */</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 用事件表,通过查表的方式获取底盘状态 */</span>    </span><br><span class="line">State_t Chassis_State_Table[RC_SW1_lift][RC_SW2_right] = </span><br><span class="line">&#123;           <span class="comment">/*右上*/</span>                     <span class="comment">/* 右下 */</span>                          <span class="comment">/* 右中 */</span></span><br><span class="line">  <span class="comment">/*左上*/</span>  &#123;CHASSIS_REMOTECONTROL,    CHASSIS_STANDBY,             CHASSIS_REMOTECONTROL&#125;,</span><br><span class="line">  <span class="comment">/*左下*/</span>  &#123;CHASSIS_REMOTECONTROL, 	 CHASSIS_STANDBY,             CHASSIS_REMOTECONTROL&#125;,</span><br><span class="line">  <span class="comment">/*左中*/</span>  &#123;CHASSIS_REMOTECONTROL,    CHASSIS_STANDBY,             CHASSIS_REMOTECONTROL&#125;</span><br><span class="line">&#125;;     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*底盘状态机初始化*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Chassis_FSM_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">        Chassis_FSM.State_Table      = Chassis_State_Table;    <span class="comment">// 映射事件表 (调用示例 :  如下所示 ,获取当前状态</span></span><br><span class="line">        Chassis_FSM.Last_State       = <span class="literal">NULL</span>;				   <span class="comment">// fsm-&gt;Current_State = &amp;fsm-&gt;State_Table[s1-1][s2-1]</span></span><br><span class="line">        Chassis_FSM.Current_State    = <span class="literal">NULL</span>; 		</span><br><span class="line">    </span><br><span class="line">		<span class="comment">/*状态1初始化*/</span></span><br><span class="line">		OFFLINE.Behavior_Process 	= <span class="literal">NULL</span>;</span><br><span class="line">		OFFLINE.State_Process			= Offline_State;</span><br><span class="line">		OFFLINE.State_Prepare			= Offline_Prepare;</span><br><span class="line">		<span class="comment">/*状态2初始化*/</span></span><br><span class="line">		INDEPEN.Behavior_Process 	= <span class="literal">NULL</span>;</span><br><span class="line">		INDEPEN.State_Process			= Indepen_State;</span><br><span class="line">		INDEPEN.State_Prepare			= Indepen_Prepare;</span><br><span class="line">		<span class="comment">/*状态3初始化*/</span></span><br><span class="line">		WIGGLE.Behavior_Process 	= <span class="literal">NULL</span>;</span><br><span class="line">		WIGGLE.State_Process			= Wiggle_State;</span><br><span class="line">		WIGGLE.State_Prepare			= Wiggle_Prepare;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************** 状态1行为函数定义 **************************************/</span></span><br><span class="line"><span class="comment">/*执行函数 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">Offline_State</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	Chassis_FSM.Current_State-&gt;Behavior_Process = PowerOff_bhv;   <span class="comment">// 函数映射 , 映射为当前状态的执行函数(实现父类调用子类的方法)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*OFFLINE状态准备函数*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">Offline_Prepare</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	Chassis.Poweroff(&amp;Chassis.C);      <span class="comment">// 底盘</span></span><br><span class="line">&#125;	</span><br><span class="line"></span><br><span class="line"><span class="comment">/*行为函数*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">PowerOff_bhv</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	Chassis.Poweroff(&amp;Chassis.C);     <span class="comment">// 调用子类方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************** 状态2行为函数定义 **************************************/</span></span><br><span class="line"><span class="comment">//同理</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************** 状态3行为函数定义 **************************************/</span></span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>各个状态模式 (即<code>State_t</code> 实例化的对象)  可以当成继承自同一父类的不同子类</li>
<li>其对各自API接口在不同子类中有不同的实现 , 即是<strong>函数多态</strong>的一种应用</li>
</ul>
</blockquote>
<br>
<hr />
<br>
<h5 id="415-remotedealch"><a class="markdownIt-Anchor" href="#415-remotedealch"></a> 4.1.5 RemoteDeal.c/h</h5>
<blockquote>
<p><strong>[ 功能模块层 ]</strong> : 主要 <strong>封装遥控接收模块</strong>功能 为上层<strong>提供API接口</strong> ,  并提供遥控<strong>数据处理</strong>的 <strong>方法和类</strong></p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/******************************************* RemoteDeal.c **************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;RemoteDeal.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*遥控结构体*/</span></span><br><span class="line">REMOTE_t REMOTE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *名称:	Get_RemoteDeal_Point</span></span><br><span class="line"><span class="comment">  *功能:	返回处理后的遥控数值控制变量，通过指针传递方式传递信息</span></span><br><span class="line"><span class="comment">  *形参: 	无</span></span><br><span class="line"><span class="comment">  *返回:	无</span></span><br><span class="line"><span class="comment">  *说明:	无</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line">REMOTE_t *<span class="title function_">Return_RemoteDeal_Point</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;		</span><br><span class="line">    <span class="keyword">return</span> &amp;REMOTE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* *******************************  遥控数据处理 ******************************************/</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<br>
<blockquote>
<p>通过指针传递方式 , 传递父类信息</p>
</blockquote>
<hr />
<br>
<h4 id="42-控制流程图"><a class="markdownIt-Anchor" href="#42-控制流程图"></a> 4.2 控制流程图</h4>
<h5 id="421-底盘进程总流程"><a class="markdownIt-Anchor" href="#421-底盘进程总流程"></a> 4.2.1 底盘进程总流程:</h5>
<img src="https://pic.imgdb.cn/item/631614a516f2c2beb1d2220d.png" alt="底盘进程总流程"  />
<br>
<hr />
<br>
<h5 id="422-底盘进程-函数调用图"><a class="markdownIt-Anchor" href="#422-底盘进程-函数调用图"></a> 4.2.2 底盘进程 - 函数调用图</h5>
<br>
<img src="https://pic.imgdb.cn/item/6316147c16f2c2beb1d1e3d3.png" alt="底盘控制 - 函数调用图" style="zoom:150%;" />
<br>
<hr />
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>c++</tag>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言数据结构(一)</title>
    <url>/2023/04/08/C%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(%E4%B8%80)/</url>
    <content><![CDATA[<h1 id="c语言数据结构"><a class="markdownIt-Anchor" href="#c语言数据结构"></a> C语言数据结构</h1>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.8.20」</em>   最后补充<br />
<br><br />
<strong>author：</strong>  <em>Y.Z.T.</em><br />
<br></p>
<p><strong>摘要：</strong> <em>简单记录几种个人在嵌入式开发中常用的数据结构</em></p>
<br>
<p><strong>简介：</strong> <em>之前关于数据结构的学习都是比较碎片化，趁有空简单复习一下</em></p>
</blockquote>
<br>
<span id="more"></span>
<hr />
<p><br><br><br />
<br></p>
<hr />
<h2 id="1️⃣-常用数据结构概况"><a class="markdownIt-Anchor" href="#1️⃣-常用数据结构概况"></a> 1️⃣ 常用数据结构概况</h2>
<p><strong>数据结构</strong>=<strong>逻辑结构</strong>（对象怎么表示）+<strong>存储结构</strong>（对象怎么存到计算机里）+<strong>算法</strong>（对计算机中的对象怎么增删查改等）</p>
<br>	
<p><strong>数据结构大致包含以下几种存储结构：</strong></p>
<ul>
<li>
<p>线性表</p>
<ul>
<li>顺序表</li>
<li>链表</li>
<li>栈</li>
<li>队列</li>
</ul>
</li>
<li>
<p>树结构</p>
<ul>
<li>普通树</li>
<li>二叉树</li>
<li>线索二叉树</li>
</ul>
</li>
<li>
<p>图储存结构</p>
</li>
</ul>
<br>
<hr />
<h3 id="11-线性表"><a class="markdownIt-Anchor" href="#11-线性表"></a> 1.1 线性表</h3>
<p>线性表结构存储的数据往往是可以<mark>依次排列</mark>的，具备==“一对一”<mark>关系的数据就可以使用</mark>线性表==来存储。</p>
<br>
<p>例如，存储类似 <code>&#123;1,3,5,7,9&#125;</code> 这样的数据时，各元素<strong>依次排列</strong>，每个元素的前面和后边<mark>有且仅有</mark>一个元素与之相邻（除首元素和尾元素），因此可以使用线性表存储。</p>
<br>
<p>线性表并不是一种具体的存储结构，它包含<mark>顺序存储结构</mark>和<mark>链式存储结构</mark>，是顺序表和链表的统称。</p>
<br>
<h4 id="111-顺序表"><a class="markdownIt-Anchor" href="#111-顺序表"></a> 1.1.1 顺序表</h4>
<p>顺序表，简单地理解，就是常用的<strong>数组</strong>，只是换了个名字而已，例如使用顺序表存储 <code>&#123;1,3,5,7,9&#125;</code></p>
<p><img src="https://pic.imgdb.cn/item/63079aee16f2c2beb1735c72.png" alt="image-20220811215039010" /></p>
<hr />
<br>
<h4 id="112-链表"><a class="markdownIt-Anchor" href="#112-链表"></a> 1.1.2 链表</h4>
<ul>
<li>
<p>我们知道，使用<mark>顺序表</mark>（底层实现靠数组）时，需要提前申请一定大小的存储空间，这块存储空间的<strong>物理地址是连续的</strong>，</p>
</li>
<li>
<p>链表则完全不同，使用链表存储数据时，是<mark>随用随申请</mark>，因此数据的存储位置是<strong>相互分离</strong>的，换句话说，数据的<strong>存储位置是随机</strong>的。</p>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079ca916f2c2beb1743002.gif" alt="链表结构" /></p>
<hr />
<h4 id="113-栈和队列"><a class="markdownIt-Anchor" href="#113-栈和队列"></a> 1.1.3 栈和队列</h4>
<p>栈和队列隶属于线性表，是特殊的线性表，因为它们对线性表中元素的进出做了明确的要求。</p>
<br>
<h5 id="1131-栈"><a class="markdownIt-Anchor" href="#1131-栈"></a> 1.1.3.1 栈</h5>
<p>栈中的元素只能从线性表的一端进出（另一端封死），且要遵循==“先入后出”==的原则，即先进栈的元素后出栈。</p>
<p><img src="https://pic.imgdb.cn/item/63079c4616f2c2beb173e676.gif" alt="栈结构示意图" /></p>
<br>
<p><strong>如图所示：</strong></p>
<ul>
<li>栈中含有 3 个元素，分别是 A、B 和 C，从在栈中的状态可以看出 是<code>A 、B、C</code>。</li>
<li>根据“先进后出”的原则，3 个元素出栈的顺序应该是：<code>C 、B、 A</code>。<br />
<br><br />
<br></li>
</ul>
<h5 id="1132-队列"><a class="markdownIt-Anchor" href="#1132-队列"></a> 1.1.3.2 队列</h5>
<br>
<p>队列中的元素只能从线性表的一端进，从另一端出，且要遵循==“先入先出”==的特点，即先进队列的元素也要先出队列。</p>
<br>
<p><img src="https://pic.imgdb.cn/item/63079c5016f2c2beb173eb5f.gif" alt="队列结构示意图" /></p>
<br>
<p><strong>如图所示：</strong></p>
<ul>
<li>队列中有 3 个元素，分别是 A、B 和 C，从在队列中的状态可以看出是<code>A、B、C</code>。</li>
<li>根据“先进先出”的原则，3 个元素出队列的顺序应该是<code>A、B、C</code>。</li>
</ul>
<br>
<hr />
<br>
<h3 id="12-树结构"><a class="markdownIt-Anchor" href="#12-树结构"></a> 1.2  树结构</h3>
<p>树存储结构适合存储具有==“一对多”==关系的数据。</p>
<br>
<img src="https://pic.imgdb.cn/item/63079b3c16f2c2beb1737cf3.png" alt="树" style="zoom:50%;" />
<br>
<hr />
<br>
<h3 id="13-图结构"><a class="markdownIt-Anchor" href="#13-图结构"></a> 1.3 图结构</h3>
<p>图存储结构适合存储具有==“多对多”==关系的数据。</p>
<p><img src="https://pic.imgdb.cn/item/63079c5716f2c2beb173f032.gif" alt="图存储结构示意图" /></p>
<p><strong>如图所示：</strong></p>
<ul>
<li>从 V1 可以到达 V2、V3、V4，同样，从 V2、V3、V4 也可以到达 V1，这就是“多对多”的关系</li>
<li>满足这种关系的数据可以使用图存储结构。</li>
</ul>
<hr />
<br>
<h3 id="14-数据结构基本概念"><a class="markdownIt-Anchor" href="#14-数据结构基本概念"></a> 1.4 数据结构基本概念</h3>
<h4 id="141-数据"><a class="markdownIt-Anchor" href="#141-数据"></a> 1.4.1 数据</h4>
<p>数据（Data）是<mark>信息的载体</mark>，是可以被计算机识别，存储并加工处理的描述客观事物的信息符号的总称。数据不仅仅包括了整形，浮点数等数值类型，还包括了字符甚至声音，视频，图像等非数值的类型。</p>
<br>
<h4 id="142-数据元素"><a class="markdownIt-Anchor" href="#142-数据元素"></a> 1.4.2 数据元素</h4>
<p>数据元素（Data Element）是描述<mark>数据的基本单位</mark>，也被称为记录。一个数据元素有若干个数据项组成。</p>
<p>如禽类，鸡鸭都属于禽类的数据元素。</p>
<br>
<h4 id="143-数据项"><a class="markdownIt-Anchor" href="#143-数据项"></a> 1.4.3 数据项</h4>
<p>数据项（Data Item）是描述数据的最小单位，其可以分为组合项和原子项：</p>
<ul>
<li><strong>组合项：</strong> 如果数据元素可以再度分割，则每一个独立处理单元就是数据项，数据元素就是数据项的集合。</li>
<li><strong>原子项：</strong> 如果数据元素不能再度分割，则每一个独立处理的单元就是原子项。</li>
</ul>
<br>
<p>如日期2019年4月25日就是一个组合项，其表示日期，但如果单独拿25日这个数据出来观测，这就是一个原子项，因为其不可以再分割。</p>
<br>
<h4 id="144-数据对象"><a class="markdownIt-Anchor" href="#144-数据对象"></a> 1.4.4 数据对象</h4>
<p>数据对象（Data Object）是性质相同的一类<mark>数据元素的集合</mark>，是数据的一个子集。数据对象可以是有限的，也可以是无限的。</p>
<br>
<h4 id="145-数据结构"><a class="markdownIt-Anchor" href="#145-数据结构"></a> 1.4.5 数据结构</h4>
<p>数据结构（Data Structures）主要是指<mark>数据和关系的集合</mark>，数据指的是计算机中需要处理的数据，而关系指的是这些数据相关的前后逻辑，这些逻辑与计算机储存的位置无关，其主要包含以下四大逻辑结构。</p>
<br>
<hr />
<h3 id="15-嵌入式系统中的数据结构特点"><a class="markdownIt-Anchor" href="#15-嵌入式系统中的数据结构特点"></a> 1.5  嵌入式系统中的数据结构特点</h3>
<br>
<p>嵌入式系统比较流行的定义是，以应用为中心，以计算机技术为基础，软件硬件可裁剪，适应应用系统对功能、可靠性、成本、体积、功耗严格要求的专用计算机系统。其数据结构一般具备以下特点：</p>
<br>
<ul>
<li>数据规模较小、采用简单数据结构（<strong>线性表</strong>）</li>
<li>采用RAM资源占用较少的算法（可能导致算法效率下降，能实现功能）</li>
<li>采用程序代码简单的算法，可以减小ROM开销</li>
</ul>
<br>
<hr />
<h3 id="16-时空复杂度"><a class="markdownIt-Anchor" href="#16-时空复杂度"></a> 1.6 时空复杂度</h3>
<h4 id="161-时间复杂度"><a class="markdownIt-Anchor" href="#161-时间复杂度"></a> 1.6.1 时间复杂度</h4>
<h5 id="1611-定义"><a class="markdownIt-Anchor" href="#1611-定义"></a> 1.6.1.1 定义</h5>
<br>
<ul>
<li>
<p>时间复杂度表示一个程序运行所需要的时间，我们一般并不需要得到详细的值，只是需要比较快慢的区别即可，为此，我们需要引入==时间频度（语句频度）==的概念。</p>
</li>
<li>
<p>时间频度中，<mark>n称为问题的规模</mark>，当n不断变化时,时间频度T(n)也会不断变化。</p>
</li>
<li>
<p>一般情况下，算法中的基本操作重复次数的是问题规模n的某个函数，用==T(n)==表示，若有某个辅助函数f(n),使得当n趋近于无穷大时，T（n)/f(n)的极限值为不等于零的常数，则称f(n)是T(n)的同数量级函数。记作</p>
<p><code>T(n)=O(f(n))</code>,称<code>O(f(n))</code>为算法的渐进时间复杂度，简称<strong>时间复杂度</strong>。</p>
</li>
<li>
<p>一般来说，<code>f(n)</code>是和算法执行次数<strong>增长率相同</strong>（理解为算法执行次数表达式中最快上升的函数项）的关于n的函数</p>
</li>
</ul>
<br>
<h5 id="1612-衡量方法"><a class="markdownIt-Anchor" href="#1612-衡量方法"></a> 1.6.1.2 衡量方法</h5>
<br>
<p>事先统计法采取在计算机编译程序前对该算法进行<strong>预估</strong>的方式估算。我们可以通过利用<strong>时间频度</strong>以及函数的思维进行对时间复杂度的解析。</p>
<br>
<p><strong>例为预估一个算法运行时间：</strong></p>
<p><em>先分别计算程序中<strong>每条语句的执行次数</strong>，然后用<strong>总的执行次数间</strong>接表示程序的运行时间。</em></p>
<br>
<p>以一段简单的 C 语言程序为例，预估出此段程序的运行时间：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)     <span class="comment">//&lt;- 从 0 到 n，执行 n+1 次</span></span><br><span class="line">&#123;   </span><br><span class="line">	a++;                         <span class="comment">//&lt;- 从 0 到 n-1，执行 n 次</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到，这段程序中仅有 2 行代码，其中：</p>
<ul>
<li>for 循环从 i 的值为 0 一直逐增至 n（注意，循环退出的时候 i 值为 n），因此 for 循环语句执行了 <strong>n+1</strong> 次；</li>
<li>而循环内部仅有一条语句，a++ 从 i 的值为 0 就开始执行，i 的值每增 1 该语句就执行一次，一直到 i 的值为 n-1，因此，a++ 语句一共执行了 n 次。</li>
</ul>
<p>因此，整段代码中所有语句共执行了 (n+1)+n 次，即 <strong>2n+1</strong> 次。数据结构中，<strong>每条语句的执行次数，又被称为该语句的频度</strong>。整段代码的总执行次数，即<mark>整段代码的频度</mark>。</p>
<br>
<hr />
<br>
<p><strong>再举一个例子：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)           <span class="comment">// n+1</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; m ; j++)       <span class="comment">// n*(m+1)</span></span><br><span class="line">    &#123;</span><br><span class="line">        num++;                         <span class="comment">// n*m</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5> 注意：</font>  此段程序的频度为：<code>(n+1)+n*(m+1)+n*m</code>，简化后得 <code>2*n*m+2*n+1</code></p>
<br>
<p><strong>比较可得：</strong></p>
<p>比较 <strong>2n+1</strong> 和 <strong>2<em>n<sup>2</sup>+2</em>n+1</strong> 的大小，显然当 n 无限大时，前者要远远小于后者</p>
<img src="https://pic.imgdb.cn/item/63079c5c16f2c2beb173f349.gif" alt="不同程序运行时间的比较" style="zoom:80%;" />
<br>
<hr />
<h5 id="1613-表示方法"><a class="markdownIt-Anchor" href="#1613-表示方法"></a> 1.6.1.3 表示方法</h5>
<p><em>频度表达式可以这样简化：</em></p>
<ul>
<li><mark>去掉</mark>频度表达式中，所有的加法<mark>常数式子</mark>。例如 <strong>2n<sup>2</sup>+2n+1</strong> 简化为 <strong>2n<sup>2</sup>+2n</strong> ；</li>
<li>如果表达式有多项含有无限大变量的式子，<mark>只保留</mark>一个拥有<mark>指数最高</mark>的变量的式子。例如 <strong>2n<sup>2</sup>+2n</strong> 简化为 <strong>2n<sup>2</sup></strong></li>
<li>如果最高项存在系数，且不为 1，直接<mark>去掉系数</mark>。例如 <strong>2n<sup>2</sup></strong> 系数为 <strong>2</strong>，直接简化为 <strong>n<sup>2</sup></strong> ；</li>
</ul>
<br>
<blockquote>
<ul>
<li>事实上，对于一个算法（或者一段程序）来说，其最简频度往往就是最深层次的循环结构中<strong>某一条语句的执行次数</strong>。</li>
<li>例如 <strong>2n+1</strong> 最简为 <strong>n</strong>，实际上就是 <strong>a++</strong> 语句的执行次数；</li>
<li>同样 <strong>2n<sup>2</sup>+2n+1</strong> 简化为 <strong>n<sup>2</sup></strong>，实际上就是最内层循环中 <strong>num++</strong> 语句的执行次数。</li>
</ul>
</blockquote>
<br>
<hr />
<p>数据结构推出<strong>了大 O 记法</strong>（注意，是大写的字母 O，不是数字 0）来表示<strong>算法（程序）的运行时间</strong>:</p>
<br>
<p>大 O 记法的表示方法也很简单，<strong>格式如下：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">O(频度)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其中，这里的频度为最简之后所得的频度。</p>
</blockquote>
<br>
<p>例如，用大 O 记法表示上面 2 段程序的运行时间，则上面第一段程序的时间复杂度为 <strong>O(n)</strong>，第二段程序的时间复杂度为 <strong>O(n<sup>2</sup>)</strong>。</p>
<br>
<p>如下列举了常用的<strong>几种时间复杂度</strong>，以及它们之间的<strong>大小关系</strong>：</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">O(1)常数阶 &lt; O(logn)对数阶 &lt; O(n)线性阶 &lt; O(n2)平方阶 &lt; O(n3)(立方阶) &lt; O(2n) (指数阶)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，这里仅介绍了以<strong>最坏情况下的频度</strong>作为时间复杂度，而在某些实际场景中，还可以用最好情况下的频度和最坏情况下的频度的平均值来作为算法的平均时间复杂度。</p>
</blockquote>
<br>
<hr />
<h3 id="162-空间复杂度"><a class="markdownIt-Anchor" href="#162-空间复杂度"></a> 1.6.2 空间复杂度</h3>
<h5 id="1621-定义"><a class="markdownIt-Anchor" href="#1621-定义"></a> 1.6.2.1 定义</h5>
<p>一个程序的空间复杂度是指运行完一个程序所需<strong>内存的大小</strong>，其包括两个部分。</p>
<ul>
<li>固定部分。这部分空间的大小与输入/输出的数据的个数多少、数值无关。主要包括<strong>指令空间</strong>（即代码空间）、<strong>数据空间</strong>（常量、简单变量）等所占的空间。这部分属于<mark>静态空间</mark>。</li>
<li>可变空间，这部分空间的主要包括<mark>动态分配的空间</mark>，以及<strong>递归栈</strong>所需的空间等。这部分的空间大小<strong>与算法有关</strong>。</li>
</ul>
<br>
<h5 id="1622-表示方法"><a class="markdownIt-Anchor" href="#1622-表示方法"></a> 1.6.2.2 表示方法</h5>
<p>和时间复杂度类似，一个算法的空间复杂度，也常用<strong>大 O 记法</strong>表示</p>
<p>如果程序所占用的存储空间和输入值无关，则该程序的空间复杂度就为 O(1)；反之，如果有关，则需要进一步判断它们之间的关系：</p>
<ul>
<li>如果随着输入值 n 的增大，程序申请的临时空间成线性增长，则程序的空间复杂度用 <strong>O(n)</strong> 表示;</li>
<li>如果随着输入值 n 的增大，程序申请的临时空间成 <strong>n<sup>2</sup></strong> 关系增长，则程序的空间复杂度用 <strong>O(n<sup>2</sup>)</strong> 表示；</li>
<li>如果随着输入值 n 的增大，程序申请的临时空间成 <strong>n<sup>3</sup></strong> 关系增长，则程序的空间复杂度用 <strong>O(n<sup>3</sup>)</strong> 表示；</li>
<li>等等。</li>
</ul>
<blockquote>
<p>在多数场景中，一个好的算法往往更注重的是时间复杂度的比较，而空间复杂度只要在一个合理的范围内就可以。</p>
</blockquote>
<br>
<hr />
<hr />
<br>
<h2 id="2️⃣-线性表"><a class="markdownIt-Anchor" href="#2️⃣-线性表"></a> 2️⃣ 线性表</h2>
<p><font face="华文彩云" color=red size=5> 特别注意：</font> 使用线性表存储的数据，如同向数组中存储数据那样，要求 <strong><mark>数据类型必须一致</mark></strong> ，也就是说，线性表存储的数据，要么全部都是整形，要么全部都是字符串。一半是整形，另一半是字符串的一组数据无法使用线性</p>
<p>表存储。</p>
<br>
<h3 id="21-顺序储存和链式储存"><a class="markdownIt-Anchor" href="#21-顺序储存和链式储存"></a> 2.1 顺序储存和链式储存</h3>
<p><strong>线性表</strong>，全名为<strong>线性存储结构</strong>。使用线性表存储数据的方式可以这样理解，即 <strong>“把所有数据用一根线儿串起来，再</strong></p>
<p><strong>存储到物理空间中”</strong>。</p>
<br>
<br>
<p>这是一组具有 <strong>“一对一”</strong> 关系的数据，我们接下来采用线性表将其储存到 <strong>物理空间</strong> 中。</p>
<br>
<p>首先，把它们按照顺序“串”起来：</p>
<p><img src="https://pic.imgdb.cn/item/63079b2616f2c2beb17373dd.gif" alt="img" /></p>
<br>
<p>如上图所示，左侧是“串”起来的<strong>数据</strong>，右侧是空闲的<strong>物理空间</strong>。把这“一串儿”数据放置到物理空间，我们可以选择</p>
<p>以下两种方式：</p>
<p><img src="https://pic.imgdb.cn/item/63079b4216f2c2beb1738053.png" alt="image-20220812233506400" /></p>
<p>​										       	<mark>数据集中存放</mark>                                 <mark>数据分散存放</mark></p>
<br>
<p>如上图所示 ，线性表存储数据可细分为以下 2 种：</p>
<br>
<ul>
<li>将数据依次存储在<strong>连续的整块物理空间</strong>中，这种存储结构称为顺序存储结构（简称<mark>顺序表</mark>）；</li>
<li>数据<strong>分散的存储在物理空间</strong>中，通过一根线保存着它们之间的逻辑关系，这种存储结构称为链式存储结构（简称<mark>链表</mark>）；</li>
</ul>
<br>
<p>[ 也就是说，线性表存储结构可细分为<strong>顺序存储结构</strong>和<strong>链式存储结构</strong>。]</p>
<br>
<hr />
<br>
<h3 id="22-顺序表"><a class="markdownIt-Anchor" href="#22-顺序表"></a> 2.2 顺序表</h3>
<h4 id="221-顺序表初始化"><a class="markdownIt-Anchor" href="#221-顺序表初始化"></a> 2.2.1 顺序表初始化</h4>
<p>使用顺序表存储数据之前，除了要申请<strong>足够大小的物理空间</strong>之外，为了方便后期使用表中的数据，顺序表还需要实时记录以下 2 项数据：</p>
<ol>
<li>顺序表申请的<strong>存储容量</strong>；</li>
<li>顺序表的<strong>长度</strong>，也就是表中存储数据元素的个数；</li>
</ol>
<br>
<p><font face="华文彩云" color=red size=5> 特别注意：</font> 正常状态下，顺序表<strong>申请的存储容量</strong>要大于<strong>顺序表的长度</strong>。</p>
<br>
<p><strong>自定义顺序表：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Table</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> * head;<span class="comment">//声明了一个名为head的长度不确定的数组，也叫“动态数组”</span></span><br><span class="line">    <span class="type">int</span> length;<span class="comment">//记录当前顺序表的长度</span></span><br><span class="line">    <span class="type">int</span> size;<span class="comment">//记录顺序表分配的存储容量</span></span><br><span class="line">&#125;table;</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 注意：</font> <code>head</code> 是我们声明的一个未初始化的动态数组，不要只把它看做是普通的指针。</p>
<hr />
<br>
<p><strong>建立顺序表需要做如下工作</strong>：</p>
<ul>
<li>
<p>给 <code>head</code> 动态数据申请足够大小的物理空间；</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> maxsize 1024 <span class="comment">// 线性表中可能的最大节点数</span></span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>给 <code>size</code> 和 <code>length</code> 赋初值；</p>
</li>
</ul>
<br>
<p><mark>初始化函数：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">table <span class="title function_">initTable</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    table t;</span><br><span class="line">    t.head=(<span class="type">int</span>*)<span class="built_in">malloc</span>(maxsize*<span class="keyword">sizeof</span>(<span class="type">int</span>));<span class="comment">//构造一个空的顺序表，动态申请存储空间</span></span><br><span class="line">    <span class="keyword">if</span> (!t.head) 						  <span class="comment">//如果申请失败，作出提示并直接退出程序</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;初始化失败&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">-1</span>);						<span class="comment">//申请失败，返回-1</span></span><br><span class="line">    &#125;</span><br><span class="line">    t.length=<span class="number">0</span>;							<span class="comment">//空表的长度初始化为0</span></span><br><span class="line">    t.size=maxsize;						<span class="comment">//空表的初始存储空间为Size</span></span><br><span class="line">    <span class="keyword">return</span> t;							<span class="comment">// 创建成功，返回一个已经初始化完成的顺序表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><mark>main.c</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    table t = initTable();	<span class="comment">// 创建顺序表</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=maxsize; i++)  <span class="comment">//向顺序表中添加元素，这里为举例</span></span><br><span class="line">    &#123;</span><br><span class="line">        t.head[i<span class="number">-1</span>]=i;</span><br><span class="line">        t.length++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="222-顺序表的基本操作"><a class="markdownIt-Anchor" href="#222-顺序表的基本操作"></a> 2.2.2 顺序表的基本操作</h4>
<h5 id="2221-顺序表插入元素"><a class="markdownIt-Anchor" href="#2221-顺序表插入元素"></a> 2.2.2.1 顺序表插入元素</h5>
<h6 id="22211-操作思路"><a class="markdownIt-Anchor" href="#22211-操作思路"></a> 2.2.2.1.1 操作思路</h6>
<p>向已有顺序表中插入数据元素，根据插入位置的不同，可分为以下 <strong>3 种情况：</strong></p>
<ol>
<li>插入到顺序表的<mark>表头</mark>；</li>
<li>在<mark>表的中间</mark>位置插入元素；</li>
<li>尾随顺序表中已有元素，作为顺序表中的<mark>最后一个元素</mark>；</li>
</ol>
<br>
<p>虽然数据元素插入顺序表中的位置有所不同，但是都使用的是<strong>同一种方式</strong>去解决，即：通过<mark>遍历</mark>，找到数据元素要插入的位置，然后做如下两步工作：</p>
<ul>
<li>将要插入位置元素以及后续的元素<mark>整体向后移动</mark>一个位置；</li>
<li>将元素放到腾出来的位置上；</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font></p>
<p>在 <code>&#123;1,2,3,4,5&#125;</code> 的第 3 个位置上插入元素 6，实现过程如下：</p>
<br>
<ul>
<li>遍历至顺序表存储第 3 个数据元素的位置</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079c6416f2c2beb173f980.gif" alt="找到目标元素位置" /></p>
<br>
<ul>
<li>
<p>将元素 3 以及后续元素 4 和 5 整体向后移动一个位置</p>
<p><img src="https://pic.imgdb.cn/item/63079c6916f2c2beb173fce6.gif" alt="将插入位置腾出" /></p>
</li>
<li>
<p>将新元素 6 放入腾出的位置</p>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079c6c16f2c2beb173ff91.gif" alt="插入目标元素" /></p>
<br>
<br>
<hr />
<h6 id="22212-代码实现"><a class="markdownIt-Anchor" href="#22212-代码实现"></a> 2.2.2.1.2 代码实现</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief      顺序表插入操作函数</span></span><br><span class="line"><span class="comment">  * @param[in]  t	 ： 要操作的表</span></span><br><span class="line"><span class="comment">  * @param[in]  elem ： 插入的元素</span></span><br><span class="line"><span class="comment">  * @param[in]  add  ： 插入到顺序表的位置</span></span><br><span class="line"><span class="comment">  * @retval     返回操作后的结果</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">table <span class="title function_">addTable</span><span class="params">(table t,<span class="type">int</span> elem,<span class="type">int</span> add)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判断插入本身是否存在问题（如果插入元素位置比整张表的长度+1还大（如果相等，是尾随的情况），或者插入	的位置本身不存在，程序作为提示并自动退出）</span></span><br><span class="line">    <span class="keyword">if</span> (add&gt;t.length+<span class="number">1</span>||add&lt;<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;插入位置有问题\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//做插入操作时，首先需要看顺序表是否有多余的存储空间提供给插入的元素，如果没有，需要申请</span></span><br><span class="line">    <span class="keyword">if</span> (t.length==t.size) </span><br><span class="line">    &#123;</span><br><span class="line">        t.head=(<span class="type">int</span> *)<span class="built_in">realloc</span>(t.head, (t.size+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="type">int</span>));	<span class="comment">// 重新调整调用的malloc指																 //	向的内存块的大小</span></span><br><span class="line">        <span class="keyword">if</span> (!t.head) 	<span class="comment">// 分配失败</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;存储分配失败\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        &#125;</span><br><span class="line">        t.size+=<span class="number">1</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//插入操作，需要将从插入位置开始的后续元素，逐个后移</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=t.length<span class="number">-1</span>; i&gt;=add<span class="number">-1</span>; i--) </span><br><span class="line">    &#123;</span><br><span class="line">        t.head[i+<span class="number">1</span>]=t.head[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//后移完成后，直接将所需插入元素，添加到顺序表的相应位置</span></span><br><span class="line">    t.head[add<span class="number">-1</span>]=elem;</span><br><span class="line">    <span class="comment">//由于添加了元素，所以长度+1</span></span><br><span class="line">    t.length++;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2222-顺序表删除元素"><a class="markdownIt-Anchor" href="#2222-顺序表删除元素"></a> 2.2.2.2  顺序表删除元素</h5>
<h6 id="22221-操作思路"><a class="markdownIt-Anchor" href="#22221-操作思路"></a> 2.2.2.2.1 操作思路</h6>
<p>从顺序表中删除指定元素，实现起来非常简单，只需<strong>找到目标元素</strong>，并将其后续所有元素<strong>整体前移</strong> 1 个位置即可。</p>
<blockquote>
<p>后续元素整体前移一个位置，会直接将目标元素删除，可间接实现删除元素的目的。</p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font></p>
<p>例如，从 <code>&#123;1,2,3,4,5&#125;</code> 中删除元素 3：</p>
<p><img src="https://pic.imgdb.cn/item/63079c7916f2c2beb174084f.gif" alt="img" /></p>
<br>
<h6 id="22222-代码实现"><a class="markdownIt-Anchor" href="#22222-代码实现"></a> 2.2.2.2.2 代码实现</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief      顺序表删除操作函数</span></span><br><span class="line"><span class="comment">  * @param[in]  t	 ： 要操作的表</span></span><br><span class="line"><span class="comment">  * @param[in]  add  ： 删除顺序表的位置</span></span><br><span class="line"><span class="comment">  * @retval     返回操作后的结果</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">table <span class="title function_">delTable</span><span class="params">(table t,<span class="type">int</span> add)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (add&gt;t.length || add&lt;<span class="number">1</span>)  <span class="comment">// 删除元素位置大于表长度，或删除位置不存在</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;被删除元素的位置有误\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除操作，将删除位置后续元素整天前移一位</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=add; i&lt;t.length; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        t.head[i<span class="number">-1</span>]=t.head[i];</span><br><span class="line">    &#125;</span><br><span class="line">    t.length--;	<span class="comment">//删除后长度减一</span></span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2223-顺序表查找元素"><a class="markdownIt-Anchor" href="#2223-顺序表查找元素"></a> 2.2.2.3 顺序表查找元素</h5>
<p>顺序表中查找目标元素，可以使用多种查找算法实现，比如说<strong>二分查找算法</strong>、<strong>插值查找算法</strong>等</p>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font></p>
<p>用<strong>顺序查找法</strong>：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief      顺序表查找元素</span></span><br><span class="line"><span class="comment">  * @param[in]  t	 ： 要操作的表</span></span><br><span class="line"><span class="comment">  * @param[in]  elem ： 要查找的数据元素的值</span></span><br><span class="line"><span class="comment">  * @retval     返回操作后的结果</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">selectTable</span><span class="params">(table t,<span class="type">int</span> elem)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;t.length; i++)  <span class="comment">// 遍历查找</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (t.head[i]==elem)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//如果查找失败，返回-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2224-顺序表更改元素"><a class="markdownIt-Anchor" href="#2224-顺序表更改元素"></a> 2.2.2.4 顺序表更改元素</h5>
<p>顺序表更改元素：</p>
<ul>
<li>找到目标元素；</li>
<li>直接修改该元素的值；</li>
</ul>
<br>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief      顺序表更改元素</span></span><br><span class="line"><span class="comment">  * @param[in]  t	 ： 要操作的表</span></span><br><span class="line"><span class="comment">  * @param[in]  elem ： 要更改的元素</span></span><br><span class="line"><span class="comment">  * @param[in]  newElem  ： 新的数据元素</span></span><br><span class="line"><span class="comment">  * @retval     返回操作后的结果</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">table <span class="title function_">amendTable</span><span class="params">(table t,<span class="type">int</span> elem,<span class="type">int</span> newElem)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> add=selectTable(t, elem); <span class="comment">// 用查找函数查找要更改元素的位置</span></span><br><span class="line">    t.head[add<span class="number">-1</span>]=newElem;<span class="comment">//由于返回的是元素在顺序表中的位置，所以-1就是该元素在数组中的下标</span></span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<br>
<h4 id="223-顺序表的特点与缺点"><a class="markdownIt-Anchor" href="#223-顺序表的特点与缺点"></a> 2.2.3 顺序表的特点与缺点</h4>
<p>顺序表的<strong>特点是：</strong></p>
<p>存储结构的顺序与逻辑结构的顺序完全一致,因此顺序表的最大优点是可以<mark>方便</mark>地随机<mark>存取</mark>表中任一个结点。</p>
<br>
<p><strong>缺点：</strong></p>
<ul>
<li>插入或删除运算不方便,除表尾的位置以外,其他位置上的操作都必须<strong>移动大量的结点</strong>,平均要移动表中约一半的结点,平均时间复杂度为O(n), 其<mark>效率较低</mark>。</li>
<li>由于顺序表所占空间必须是连续空间,而结<strong>点数并不固定</strong>,只能预先分配空间(静态分配)。因此,<strong>难以确定合适的存储空间</strong>,空间过大会造成浪费,空间过小会造成表溢出。</li>
</ul>
<br>
<hr />
<br>
<h3 id="23-链表"><a class="markdownIt-Anchor" href="#23-链表"></a> 2.3 链表</h3>
<h4 id="231-链表概念"><a class="markdownIt-Anchor" href="#231-链表概念"></a> 2.3.1 链表概念</h4>
<br>
<ul>
<li>一个或多个<strong>结点</strong> 组合而成的数据结构称为<mark>链表</mark></li>
<li>结点在存储器中的位置是<strong>任意</strong>的，即<strong>逻辑上相邻</strong>的数据元素在<strong>物理上不一定相邻</strong></li>
<li>这组存储单元既<strong>可以是连续</strong>的，也<strong>可以是不连续</strong>的，<strong>甚至是零散分布</strong>在内存中的任意位置上的</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079b4916f2c2beb1738365.png" alt="image-20220816184532849" /></p>
<p>​																<mark>单链表储存示意图</mark></p>
<br>
<h5 id="2311-结点"><a class="markdownIt-Anchor" href="#2311-结点"></a> 2.3.1.1 结点</h5>
<p><strong>结点</strong> 一般由<strong>两部分</strong>内容构成：</p>
<ul>
<li>
<p><mark>数据域</mark>：存储<strong>真实数据元素</strong></p>
<p>(可以为你想要储存的任何数据格式，可以是数组，可以是int，甚至可以是结构体)</p>
</li>
<li>
<p>==指针域：==存储<strong>下一个</strong>结点的<strong>地址（指针）</strong></p>
<p>(链表的尾部NEXT指向NULL（空），因为尾部没有任何可以指向的空间了)</p>
<br>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079c8016f2c2beb1740d1f.gif" alt="img" /></p>
<br>
<p><strong><mark>结点结构代码实现：</mark></strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> datatype;			<span class="comment">// 结点的数据类型定义为datatype，方便更改，此处为int</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> 			// 结点类型定义</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    datatype data;				<span class="comment">// 结点的数据域类型</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span>			<span class="comment">// 结点的指针域类型</span></span><br><span class="line">&#125;linklist;						<span class="comment">// linklist为结点名，每个节点都是一个linklist结构体</span></span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 特别注意：</font>  由于指针域中的指针要指向的也是一个节点，因此要声明为 node 类型</p>
<p>（这里要写成 <code>struct node*</code> 的形式）。</p>
<br>
<hr />
<br>
<h5 id="2312-头指针-头结点和首元结点"><a class="markdownIt-Anchor" href="#2312-头指针-头结点和首元结点"></a> 2.3.1.2 头指针、头结点和首元结点</h5>
<p>一个<strong>完整的链表</strong>需要由以下几部分构成：</p>
<br>
<ul>
<li><strong>头指针：<strong>一个普通的指针，它的特点是永远指向链表</strong>第一个节点的位置</strong>。很明显，头指针<mark>用于指明链表的位置</mark>，便于后期找到链表并使用表中的数据。</li>
<li><strong>节点：</strong> 链表中的节点又细分为头节点、首元节点和其他节点：</li>
<li><strong>头节点</strong>：其实就是一个不存任何数据的空节点，通常作为<strong>链表的第一个节点</strong>。对于链表来说，头节点不是必须的，它的作用只是为了方便解决某些实际问题；</li>
<li><strong>首元节点</strong>：由于头节点（也就是空节点）的缘故，链表中称<strong>第一个存有数据的节点为首元节点</strong>。首元节点只是对链表中第一个存有数据节点的一个称谓，没有实际意义；</li>
<li><strong>其他节点：</strong> 链表中其他的节点；</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font> 一个存储 <code>&#123;1,2,3&#125;</code> 的完整链表结构如图所示：</p>
<p><img src="https://pic.imgdb.cn/item/63079c8516f2c2beb17411b7.gif" alt="完整的链表示意图" /></p>
<hr />
<p><strong>头结点好处：</strong></p>
<ul>
<li>
<p>便于首元结点的处理</p>
<blockquote>
<p>首元结点的地址保存在头结点的指针域中,所以在链表的第一个位置上的操作和其它位置一致，无须进行特殊处理;</p>
</blockquote>
</li>
<li>
<p>便于空表和非空表的统一处理</p>
<blockquote>
<p>无论链表是否为空，头指针都是指向头结点的非空指针，因此空表和非空表的处理也就统一了。</p>
</blockquote>
</li>
<li>
<p>头结点的数据域可以为空，也可存放线性表长度等附加信息，但此结点<mark>不能计入</mark>链表长度值</p>
</li>
</ul>
<p><font face="华文彩云" color=red size=5> 特别注意：</font> 链表中有头节点时，<strong>头指针指向头节点</strong>；反之，若链表中没有头节点，则头指针<strong>指向首元节点。</strong></p>
<br>
<hr />
<h4 id="232单链表"><a class="markdownIt-Anchor" href="#232单链表"></a> 2.3.2单链表</h4>
<h5 id="2311-链表初始化"><a class="markdownIt-Anchor" href="#2311-链表初始化"></a> 2.3.1.1 链表初始化</h5>
<p>创建一个链表需要做如下工作：</p>
<ul>
<li>声明一个<strong>头指针</strong>（如果有必要，可以声明一个头节点）；</li>
<li>创建多个存储数据的节点，在创建的过程中，要随时与其前驱节点建立逻辑关系；</li>
</ul>
<br>
<blockquote>
<p>一般来说，我们所谓的初始化单链表一般指的是申请结点的空间，同时对一个结点辅以空值(NULL)</p>
</blockquote>
<br>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化链表</span></span><br><span class="line">linklist *<span class="title function_">listinit</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    linklist * p;								<span class="comment">// 创建头结点</span></span><br><span class="line">    p = (linklist*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linklist));	<span class="comment">// 开辟空间</span></span><br><span class="line">    <span class="keyword">if</span>(p == <span class="literal">NULL</span>)					<span class="comment">//开辟失败，返回-1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;					<span class="comment">// 指针指向空</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<hr />
<br>
<h5 id="2312-建立单链表"><a class="markdownIt-Anchor" href="#2312-建立单链表"></a> 2.3.1.2  建立单链表</h5>
<br>
<p><strong>建立单链表</strong>的两种方法：<strong>头插法建表</strong>和<strong>尾插法建表</strong>。<br />
<em>（两者并无本质上的不同，都是利用指针指向下一个结点元素的方式进行逐个创建，只不过使用头插入法最终得到的结果是逆序的。）</em></p>
<h6 id="23121-头插入法"><a class="markdownIt-Anchor" href="#23121-头插入法"></a> 2.3.1.2.1 头插入法</h6>
<p>该方法从一个空表开始，生成新结点，并将读取到的数据存放到新结点的数据域中，然后将新结点<strong>插入到当前链表的表头</strong>，即头结点之后。</p>
<p><strong>过程特点：</strong></p>
<ul>
<li>开始链表的头指针<code>head</code><strong>指向空</strong>;</li>
<li>然后每增加一个结点,头指针<code>head</code>指向<strong>新增加的结点地址</strong></li>
<li>同时新增结点的指针域<strong>指向原链表头指针</strong>。</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b4e16f2c2beb173854d.png" alt="头插法创建单链表过程" /></p>
<p>​                                                                    <mark>头插法创建单链表过程</mark></p>
<br>
<p><mark>代码实现</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用头插入法建立单链表（有头结点）</span></span><br><span class="line">linklist *<span class="title function_">CreatList1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    linklist *head;</span><br><span class="line">    head = (linklist*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linklist));	<span class="comment">// 申请头结点空间</span></span><br><span class="line">    head -&gt;next = <span class="literal">NULL</span>;							<span class="comment">// 初始化一个空链表</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> ch = getchar();			<span class="comment">// ch为链表数据域中的数据</span></span><br><span class="line">    <span class="keyword">while</span>(ch != <span class="string">&#x27;#&#x27;</span>)	<span class="comment">// 当不是结束符时，就增加节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        linklist *p;</span><br><span class="line">        p = (linklist*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linklist));	<span class="comment">// 申请新的结点</span></span><br><span class="line">        p -&gt;data = ch;								<span class="comment">// 将输入的值放在数据域中</span></span><br><span class="line">        p -&gt;next = head -&gt;next						<span class="comment">// 将新结点指向原首元结点</span></span><br><span class="line">        head -&gt; next = p;    						<span class="comment">// 头结点指向新结点</span></span><br><span class="line">        ch = getchar();								<span class="comment">// 输入下一个结点的值</span></span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> (head);				<span class="comment">// 返回头指针</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23122-尾插入法"><a class="markdownIt-Anchor" href="#23122-尾插入法"></a> 2.3.1.2.2 尾插入法</h6>
<p>尾插法建表时按照节点的顺序逐渐将节点插入到链表的尾部，实现步骤如下：</p>
<ul>
<li>链表的头结点<code>head</code>指向空，然后头<code>head</code>始终<strong>指向第1个节点的地址</strong>。</li>
<li>新增节点的指针总是<strong>指向空</strong>，</li>
<li>原链表中的最后一个节点的指针总是指向新增的节点。</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b5216f2c2beb173871f.png" alt="尾插法创建单链表过程" /></p>
<p>​                                                         <mark>尾插法创建单链表过程</mark></p>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用尾插入法建立单链表(有头结点)</span></span><br><span class="line">linklist *<span class="title function_">CreatList2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    linklist *head;</span><br><span class="line">    head = (linklist*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linklist));	<span class="comment">// 申请头结点空间</span></span><br><span class="line">    head -&gt;next = <span class="literal">NULL</span>;							<span class="comment">// 初始化一个空链表</span></span><br><span class="line">    </span><br><span class="line">    linklist *e;								<span class="comment">// 尾指针</span></span><br><span class="line">    e = head;									<span class="comment">// e开始时指向头节点，之后指向尾节点</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> ch = getchar();			<span class="comment">// ch为链表数据域中的数据</span></span><br><span class="line">    <span class="keyword">while</span>(ch != <span class="string">&#x27;#&#x27;</span>)	<span class="comment">// 当不是结束符时，就增加节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        linklist *p;</span><br><span class="line">        p = (linklist*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linklist));	<span class="comment">// 申请新的结点</span></span><br><span class="line">        p -&gt;data =ch;								<span class="comment">// 结点数据域赋值</span></span><br><span class="line">        e -&gt;next = p; 						<span class="comment">// 新节点插入表尾Head--&gt;|1|--&gt;|2|--&gt;NULL</span></span><br><span class="line">        e = p;								<span class="comment">// 尾指针e指向新的表尾</span></span><br><span class="line">        ch = getchar();	</span><br><span class="line">    &#125;</span><br><span class="line">    e -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2313-单链表基本操作"><a class="markdownIt-Anchor" href="#2313-单链表基本操作"></a> 2.3.1.3 单链表基本操作</h5>
<h6 id="23131-遍历单链表"><a class="markdownIt-Anchor" href="#23131-遍历单链表"></a> 2.3.1.3.1 遍历单链表</h6>
<p>遍历单链表，只需要建立一个<strong>指向链表L的结点</strong>，然后沿着链表L逐个向后搜索即可。</p>
<p>1️⃣按序号查找</p>
<blockquote>
<p>在链表中,如果知道结点的序号,并不能像顺序表那样直接通过序号访问到结点,而必须从链表的头指针开始,经过各结点的指针域,逐个结点进行搜索,直到搜索到指定序号结点为止</p>
</blockquote>
<p><mark>代码实现</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	遍历寻找特定序号的结点</span></span><br><span class="line"><span class="comment">  * @param[in]  head ： 指向链表的头结点</span></span><br><span class="line"><span class="comment">  * @param[in]	i    :  所查找结点的序号</span></span><br><span class="line"><span class="comment">  * @retval    返回所查结点的值，如未找到返回空</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">linklist *<span class="title function_">ListFine1</span><span class="params">(linkedList *head , <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">       linklist *p; <span class="type">int</span> j = <span class="number">1</span>; 			<span class="comment">// 定义指向当前结点的结点p ； 计数器j</span></span><br><span class="line">       p = head -&gt; next;</span><br><span class="line">       <span class="keyword">while</span> (j &lt; i &amp;&amp; p -&gt;next != <span class="literal">NULL</span>)<span class="comment">// 小于i标号的数都得过一遍</span></span><br><span class="line">       &#123;</span><br><span class="line">           p = p -&gt; next;</span><br><span class="line">           j++;    						<span class="comment">// 已查找的结点数</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> ( j == i) <span class="keyword">return</span>(p);</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">return</span>(<span class="literal">NULL</span>);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<p>2️⃣按值查找</p>
<blockquote>
<p>用于在链表中查找给定结点值的结点存储地址</p>
</blockquote>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	遍历寻找特定值的结点</span></span><br><span class="line"><span class="comment">  * @param[in]  head ： 指向链表的头结点</span></span><br><span class="line"><span class="comment">  * @param[in]	e    :  所查找结点的值</span></span><br><span class="line"><span class="comment">  * @param[in]  *i	 ： 结点序号的指针变量，用于返回已查找到的结点的序号</span></span><br><span class="line"><span class="comment">  * @retval    返回所查结点的储存地址，未找到返回空</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">linklist *<span class="title function_">ListFine2</span><span class="params">(linkedList *head , datatype e, <span class="type">int</span> *i)</span></span><br><span class="line">&#123;</span><br><span class="line">    linklist *p;			<span class="comment">// 定义结点p总是指向当前搜索的结点</span></span><br><span class="line">    p = head -&gt;next;		<span class="comment">// p指向第1个结点	</span></span><br><span class="line">    *i = <span class="number">1</span>;     			<span class="comment">// 记录查找节点的序号</span></span><br><span class="line">    <span class="keyword">while</span> ( p != <span class="literal">NULL</span>)		<span class="comment">// 遍历所有结点</span></span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="keyword">if</span>( p-&gt;data != e)   <span class="comment">//在循环中判断是不是对应的节点</span></span><br><span class="line">      	&#123;</span><br><span class="line">          p = p-&gt;next;</span><br><span class="line">          * i = * i + <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">break</span>;		<span class="comment">// 找到结点，退出循环</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23132-插入元素"><a class="markdownIt-Anchor" href="#23132-插入元素"></a> 2.3.1.3.2 插入元素</h6>
<p>向链表中增添元素，根据添加位置不同，可分为以下 <strong>3 种情况：</strong></p>
<ul>
<li>插入到链表的<strong>头部</strong>（头节点之后），作为首元节点；</li>
<li>插入到链表<strong>中间</strong>的某个位置；</li>
<li>插入到链表的<strong>最末端</strong>，作为链表中最后一个数据元素；</li>
</ul>
<br>
<p>链表插入新元素步骤：</p>
<ul>
<li>将新结点的 <code>next</code> 指针指向<strong>插入位置后的结点</strong>；</li>
<li>将插入位置前结点的 <code>next</code> 指针<strong>指向插入结点</strong>；</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font> 在链表 <code>&#123;1,2,3,4&#125;</code> 的基础上分别实现在头部、中间部位、尾部插入新元素 5</p>
<p><img src="https://pic.imgdb.cn/item/63079c8916f2c2beb17416ce.gif" alt="链表中插入元素的 3 种情况示意图" /></p>
<br>
<blockquote>
<p><font face="华文彩云" color=red size=5> 注意：</font> 链表插入元素的操作必须是先步骤 1，再步骤 2；反之，若先执行步骤 2，除非再添加一个指针，作为插入位置后续链表的头指针，否则会导致插入位置后的这部分链表丢失，无法再实现步骤 1。</p>
</blockquote>
<hr />
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	在特定位置插入元素</span></span><br><span class="line"><span class="comment">  * @param[in]  head ： 指向链表的头结点</span></span><br><span class="line"><span class="comment">  * @param[in]	elem :  新的数据元素</span></span><br><span class="line"><span class="comment">  * @param[in]  add	 ： 要插入的位置</span></span><br><span class="line"><span class="comment">  * @retval    返回插入后的链表头结点</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">linklist *<span class="title function_">List_Insert</span><span class="params">(linklist *head , <span class="type">int</span> elem , <span class="type">int</span> add)</span></span><br><span class="line">&#123;</span><br><span class="line">    linklist *temp = head;  <span class="comment">//temp 用于指向搜索的节点</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//首先找到要插入位置的上一个结点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; add; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = temp-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="literal">NULL</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;插入位置无效\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建插入结点c</span></span><br><span class="line">     linklist *c = (linklist*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linklist)); 			<span class="comment">// 分配空间</span></span><br><span class="line">     c -&gt; data = elem;				<span class="comment">// 写入新数据</span></span><br><span class="line">     c -&gt; next = temp -&gt; next;		<span class="comment">// 将待插入节点连接其后继节点</span></span><br><span class="line">     temp-&gt;next = c;				<span class="comment">// 将待插入的节点连接其前趋节点</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> head</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23133-删除元素"><a class="markdownIt-Anchor" href="#23133-删除元素"></a> 2.3.1.3.3 删除元素</h6>
<p>从链表中删除指定数据元素时，需要进行以下 2 步操作：</p>
<ul>
<li>将结点从链表中摘下来;</li>
<li>手动释放掉结点，<strong>回收</strong>被结点占用的<strong>存储空间</strong>;</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079c8e16f2c2beb1741afb.gif" alt="链表删除元素示意图" /></p>
<br>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	在特定位置删除元素</span></span><br><span class="line"><span class="comment">  * @param[in]  head ： 指向链表的头结点</span></span><br><span class="line"><span class="comment">  * @param[in]  add	 ： 要删除结点的序号</span></span><br><span class="line"><span class="comment">  * @retval    返回插入后的链表头结点</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">linklist *<span class="title function_">LinkDelete</span><span class="params">(linklist *head,<span class="type">int</span> add)</span></span><br><span class="line">&#123;</span><br><span class="line">    linklist * temp = head;		<span class="comment">//temp 用于指向搜索的节点</span></span><br><span class="line">    <span class="comment">/*遍历到被删除结点的上一个结点*/</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; add; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = temp-&gt;next;			<span class="comment">// 向后查找</span></span><br><span class="line">        <span class="keyword">if</span> (temp-&gt;next == <span class="literal">NULL</span>) 	<span class="comment">// 找不到该结点序号</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;没有该结点\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;        </span><br><span class="line">    &#125;</span><br><span class="line">    linklist * del = temp-&gt;next;	<span class="comment">//单独设置一个指针指向被删除结点，以防丢失</span></span><br><span class="line">    temp-&gt;next = temp-&gt;next-&gt;next;	<span class="comment">//删除某个结点的方法就是更改前一个结点的指针域（del-&gt;next）</span></span><br><span class="line">    <span class="built_in">free</span>(del);					    <span class="comment">//手动释放该结点，防止内存泄漏</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h4 id="233-静态链表"><a class="markdownIt-Anchor" href="#233-静态链表"></a> 2.3.3 静态链表</h4>
<h5 id="2331-静态链表概念"><a class="markdownIt-Anchor" href="#2331-静态链表概念"></a> 2.3.3.1 静态链表概念</h5>
<p>静态链表的<strong>优点和不足：</strong></p>
<ul>
<li>
<p>优点</p>
<ul>
<li>高效的查找操作（顺序表）</li>
<li>高效的删除、插入操作（链表）</li>
</ul>
</li>
<li>
<p>不足</p>
<ul>
<li>需要提前申请内存，不能动态增加链表容量</li>
<li>维护两条链表，一条保存已使用的节点，一条保存未使用的节点</li>
<li>失去顺序存储结构随机存取的特性</li>
</ul>
</li>
</ul>
<br>
<blockquote>
<p>使用静态链表存储数据，数据全部<mark>存储在数组</mark>中（和顺序表一样），但<mark>存储位置是随机</mark>的，数据之间&quot;一对一&quot;的逻辑关系通过一个整形变量（称为&quot;游标&quot;，和指针功能类似）维持（和链表类似）。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/63079b5716f2c2beb1738914.png" alt="在这里插入图片描述" /></p>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font> 使用静态链表存储 <code>&#123;1,2,3&#125;</code>:</p>
<ul>
<li>创建一个足够大的数组，假设大小为 6</li>
<li>接着，在将数据存放到数组中时，给各个数据元素配备一个整形变量，此变量用于指明各个元素的<strong>直接后继元素</strong>所在<strong>数组中的位置下标</strong></li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079c9216f2c2beb1741e74.gif" alt="静态链表存储数据" /></p>
<p>​                                                                                                    <mark>静态链表储存数据</mark></p>
<blockquote>
<p>通常，静态链表会将第一个数据元素放到数组下标为 1 的位置（a[1]）中。</p>
</blockquote>
<p><strong>如上图所示：</strong></p>
<ul>
<li>从 a[1] 存储的数据元素 1 开始，通过<strong>存储的游标变量</strong> 3，就可以在 a[3] 中找到元素 1 的直接后继元素 2；</li>
<li>同样，通过元素 a[3] 存储的游标变量 5，可以在 a[5] 中找到元素 2 的直接后继元素 3，这样的循环过程直到<strong>某元素的游标变量为 0</strong> 截止（因为 a[0] 默认不存储数据元素）。</li>
</ul>
<br>
<hr />
<br>
<h5 id="2332-数据表与备用表"><a class="markdownIt-Anchor" href="#2332-数据表与备用表"></a> 2.3.3.2 数据表与备用表</h5>
<p>静态链表需要维护两条链路：</p>
<ul>
<li>
<p>一条是维护<mark>已使用</mark>的节点链路（有效数据链路），称为<strong>数据表</strong>。</p>
</li>
<li>
<p>一条是维护<mark>未使用</mark>的节点链路（数据元素为空的备用链路），称为<strong>备用表</strong>。</p>
<blockquote>
<p>对于备用表，元素节点的游标存储的是<mark>下一空节点</mark>的地址。</p>
</blockquote>
</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5> 注意：</font> 为了简化链表维护过程，一般是使用<mark>带头结点</mark>的静态链表。</p>
<br>
<p><strong>维护静态链表的两个表：</strong></p>
<ul>
<li>通常我们会使用头尾元素节点作为两个表的头结点。</li>
<li>元素第首节点作为备用表的头结点，元素末尾节点作为有效数据表的节点。
<ul>
<li>这样的好处是，空表从首节点开始变量，有效数据表从末尾节点开始遍历；</li>
<li>插入数据时只需访问首节点即可快速获取空闲链表地址。</li>
</ul>
</li>
</ul>
<br>
<hr />
<br>
<p>静态链表<strong>空表</strong>特点：</p>
<ul>
<li>备用链表节点游标值存储下一空闲节点的数组下标，如图所示灰色区域就是空闲节点</li>
<li>备用表<strong>最后节点游标值为0</strong>，如上图中的<code>“a6”</code>节点</li>
<li>数据表<strong>头指针游标值为0</strong></li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b5b16f2c2beb1738b1c.png" alt="在这里插入图片描述" /></p>
<p>​                                                                          <mark>静态链表空表</mark></p>
<br>
<p>静态链表<strong>非空表</strong>特点：</p>
<ul>
<li>数据表头指针游标为值为第一个有效节点</li>
<li>最后一个有效数据节点游标值为0，如“a2”节点</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079b6116f2c2beb1738d68.png" alt="在这里插入图片描述" /></p>
<p><font face="华文彩云" color=red size=5> 注意：</font> 备用链表表头通常是<strong>使用首节点</strong>；有效数据链表表头可以使用任意节点，为了方便管理，一般使用<strong>末尾节点</strong>或者<strong>第二个节点</strong>。</p>
<br>
<hr />
<br>
<h5 id="2333-静态链表创建"><a class="markdownIt-Anchor" href="#2333-静态链表创建"></a> 2.3.3.3 静态链表创建</h5>
<h6 id="23331-静态链表结点"><a class="markdownIt-Anchor" href="#23331-静态链表结点"></a> 2.3.3.3.1 静态链表结点</h6>
<p>用静态结构体数组实现的链表，其中元素节点是一个结构体变量，包含了<strong>数据域</strong>（data）和<strong>游标</strong>（cur）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 静态链表节点 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">static_link_list_node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  	<span class="type">int</span> data;			<span class="comment">// 数据域</span></span><br><span class="line">	<span class="type">int</span> cur;			<span class="comment">// 游标</span></span><br><span class="line">&#125;<span class="type">list_node_type_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 链表数据，包括长度和各个结点信息等 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">static_link_list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> capacity;				<span class="comment">// 容积</span></span><br><span class="line">  	<span class="type">list_node_type_t</span> *node;		<span class="comment">// 各结点信息</span></span><br><span class="line">&#125;<span class="type">static_link_list_t</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23332-静态链表创建"><a class="markdownIt-Anchor" href="#23332-静态链表创建"></a> 2.3.3.3.2 静态链表创建</h6>
<p>静态链表创建，一般是创建一个<strong>空的链表</strong>，这里我们创建一个<strong>带头节点</strong>的空静态链表。这里通过<code>malloc</code>申请一块<strong>连续内存</strong>作为静态链表存储空间。</p>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<ul>
<li>多申请两个节点作为<strong>备用表和数据表头节点</strong>，<mark>不存储有效数据</mark></li>
<li>备用表节点游标赋值</li>
<li>备用表最后节点游标值为0</li>
<li>数据表头节点游标值为0</li>
</ul>
<br>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	创建静态链表</span></span><br><span class="line"><span class="comment">  * @param[in]  capacity ： 表长度（不包括2个头结点）</span></span><br><span class="line"><span class="comment">  * @retval    返回创建完成的静态链表</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">static_link_list_t</span> *<span class="title function_">create_static_link_list</span><span class="params">(<span class="type">int</span> capacity)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">static_link_list_t</span> *<span class="built_in">list</span> = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">// 构造一个空的顺序表，动态申请存储空间</span></span><br><span class="line">	<span class="keyword">if</span> (capacity &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">list</span> = (<span class="type">static_link_list_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">static_link_list_t</span>) + </span><br><span class="line">											<span class="keyword">sizeof</span>(<span class="type">list_node_type_t</span>) * (capacity+<span class="number">2</span>));   <span class="comment">/* 多申请2节点作头节点 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span> != <span class="literal">NULL</span>)	<span class="comment">// 创建成功</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">list</span>-&gt;capacity = capacity;</span><br><span class="line">		<span class="built_in">list</span>-&gt;node = (<span class="type">list_node_type_t</span>*)(<span class="built_in">list</span>+<span class="number">1</span>);<span class="comment">//指向分配的数组空间的地址(首地址储存容积)</span></span><br><span class="line">		<span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;capacity+<span class="number">2</span>; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">list</span>-&gt;node[i].data = <span class="number">0</span>;		<span class="comment">/* 备用表节点数据赋值 */</span></span><br><span class="line">			<span class="built_in">list</span>-&gt;node[i].cur = i+<span class="number">1</span>;	<span class="comment">/* 将每个数组分量链接到一起 */</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">list</span>-&gt;node[capacity].cur = <span class="number">0</span>;	<span class="comment">/* 备用表最后一个节点游标值为0 */</span></span><br><span class="line">		<span class="built_in">list</span>-&gt;node[capacity+<span class="number">1</span>].cur = <span class="number">0</span>;	<span class="comment">/* 数据表头节点游标值为0 */</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">list</span>;					<span class="comment">/* 返回创建后的静态链表</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2334-静态链表基本操作"><a class="markdownIt-Anchor" href="#2334-静态链表基本操作"></a> 2.3.3.4 静态链表基本操作</h5>
<h6 id="23341-静态链表的清空与销毁"><a class="markdownIt-Anchor" href="#23341-静态链表的清空与销毁"></a> 2.3.3.4.1 静态链表的清空与销毁</h6>
<ul>
<li>静态链表清空指的是<strong>删除链表有效元素节点</strong>，释放节点内存空间。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	清空静态链表</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被清空的静态链表</span></span><br><span class="line"><span class="comment">  * @retval    清空成功返回0</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">clear_static_link_list</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">if</span> (get_static_link_list_occupy(<span class="built_in">list</span>) == <span class="number">0</span>)		<span class="comment">// 有效结点为0（即为空表）</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="built_in">list</span>-&gt;capacity+<span class="number">2</span>; i++)		<span class="comment">// 遍历整个链表</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">list</span>-&gt;node[i].data = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">list</span>-&gt;node[i].cur = i+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">list</span>-&gt;node[<span class="built_in">list</span>-&gt;capacity].cur = <span class="number">0</span>;			<span class="comment">/* 备用表最后一个节点游标值为0 */</span></span><br><span class="line">	<span class="built_in">list</span>-&gt;node[<span class="built_in">list</span>-&gt;capacity+<span class="number">1</span>].cur = <span class="number">0</span>;		<span class="comment">/* 数据表头节点游标值为0 */</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<ul>
<li>静态链表销毁指的是<strong>删除所有节点</strong>，包括头结点，并释放节点内存空间。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	销毁静态链表</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被销毁的静态链表</span></span><br><span class="line"><span class="comment">  * @retval    清空成功返回0</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">destory_static_link_list</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">static_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">free</span>(<span class="built_in">list</span>);</span><br><span class="line">	<span class="built_in">list</span> = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23342-静态链表查找"><a class="markdownIt-Anchor" href="#23342-静态链表查找"></a> 2.3.3.4.2 静态链表查找</h6>
<p>静态链表的查找方式有两种：</p>
<ul>
<li>根据元素节点索引号（<strong>数组下标</strong>）</li>
<li>根据节点数据<strong>元素值</strong>查找</li>
<li>这两种方式都需要从链表头开始<strong>遍历链表</strong>，直至查找到指定节点。</li>
</ul>
<p><font face="华文彩云" color=red size=5> 注意：</font> <em>对于元素值查找，只适用于链表中存储的元素值都是唯一的情况，否则只能使用节点索引号查找。</em></p>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font>  假设需查找<code>“a3”</code>节点，遍历过程如下：</p>
<ul>
<li>首先根据头节点游标值1找到a1</li>
<li>根据节点a1游标值2找到a2</li>
<li>根据节点a2游标值3找到a3</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b6616f2c2beb1738ec4.png" alt="image-20220825235146696" /></p>
<br> 
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	静态链表查找</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被查找的静态链表</span></span><br><span class="line"><span class="comment">  * @param[in]  pos  :  被查元素索引值（数组下标）</span></span><br><span class="line"><span class="comment">  * @param[in]  rnode:	记录被查找索引值的结点 对应的数据域和游标内容</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0 失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_static_link_list_node</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos, <span class="type">list_node_type_t</span> *rnode)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> index,i;						<span class="comment">// index 为结点索引值， i为游标值</span></span><br><span class="line">	<span class="type">list_node_type_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span> == <span class="literal">NULL</span>)||(pos&lt;<span class="number">1</span>))		<span class="comment">// 被查链表不存在 或 索引号不合法</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (get_static_link_list_occupy(<span class="built_in">list</span>) == <span class="number">0</span>)	<span class="comment">// 静态链表有效结点为0 （即是空表）</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	index = (<span class="built_in">list</span>-&gt;capacity+<span class="number">2</span>) - <span class="number">1</span>;		<span class="comment">// 获取数据表头结点的索引号（数组下标），即最后一个结点</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 遍历数组 找到对应结点的前一结点的位置（index为前一结点位置）</span></span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;pos; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		index = <span class="built_in">list</span>-&gt;node[index].cur;	</span><br><span class="line">	&#125;</span><br><span class="line">	i = <span class="built_in">list</span>-&gt;node[index].cur;         <span class="comment">// 被查结点的位置</span></span><br><span class="line">	rnode-&gt;data = <span class="built_in">list</span>-&gt;node[i].data;  <span class="comment">// 记录被查元素的数据域</span></span><br><span class="line">	rnode-&gt;cur = <span class="built_in">list</span>-&gt;node[i].cur;	   <span class="comment">// 记录被查元素的游标</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23343-静态链表插入"><a class="markdownIt-Anchor" href="#23343-静态链表插入"></a> 2.3.3.4.3 静态链表插入</h6>
<p>静态链表插入 <strong>时间复杂度为O(1)</strong> 插入操作首先需遍历查找到目标位置的前一节点，大体步骤如下：</p>
<p>【1】申请存储节点，从备用表获取一个空闲节点空间并赋数据值</p>
<p>【2】遍历查找到插入位置前一节点</p>
<p>【3】插入节点，插入位置前一节点游标赋值给待插入节点游标</p>
<p>【4】更改游标关系，待插入节点数组下标赋值给插入位置前一节点游标</p>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font>  在“a2”的位置插入一个数据值为d的有效节点。（插入后数据表为 <code>d0—&gt;d—&gt;d1</code>）</p>
<p><img src="https://pic.imgdb.cn/item/63079b6b16f2c2beb17390e1.png" alt="image-20220819222817737" /></p>
<p>​                                                                           <mark>插入后数据表</mark></p>
<br>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	静态链表pos位置插入value</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被查找的静态链表</span></span><br><span class="line"><span class="comment">  * @param[in]  value:  插入元素的数据</span></span><br><span class="line"><span class="comment">  * @param[in]  pos  :  插入元素索引值（数组下标）</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0，失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">insert_static_link_list_node</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> value, <span class="type">int</span> pos)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> findex,iindex,i,j,k;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(pos&lt;<span class="number">1</span> || (pos&gt;<span class="built_in">list</span>-&gt;capacity))   <span class="comment">// 可用索引值为（1 ~ capacity） </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;						<span class="comment">// 索引号不合法 返回-1</span></span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	findex = get_static_link_list_free_index(<span class="built_in">list</span>);   <span class="comment">/* 获取备用链表可用索引号 */</span></span><br><span class="line">	<span class="keyword">if</span> (findex &lt;= <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;	<span class="comment">/* 链表已满 */</span></span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	iindex = (<span class="built_in">list</span>-&gt;capacity+<span class="number">2</span>) - <span class="number">1</span>;			<span class="comment">// 数据表头结点索引号（数组下标）</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 遍历数组 找到插入结点的前一结点位置（iindex为前一结点位置）</span></span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;pos; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		iindex = <span class="built_in">list</span>-&gt;node[iindex].cur; </span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	<span class="built_in">list</span>-&gt;node[findex].data = value;			<span class="comment">// 将value赋予从备用表找到的空闲结点</span></span><br><span class="line">	<span class="built_in">list</span>-&gt;node[findex].cur = <span class="built_in">list</span>-&gt;node[iindex].cur; <span class="comment">// 将待插入节点连接其后继节点（即将插入位置前一节点游标赋值给待插入节点游标）</span></span><br><span class="line">	<span class="built_in">list</span>-&gt;node[iindex].cur = findex;   <span class="comment">// 将待插入的节点连接其前趋节点（即将待插入节点数组下标赋值给插入位置前一节点游标）</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<blockquote>
<p>静态链表的插入操作与单链表一样，也是需查找到插入目标位置的前一节点。这也是单向链表的特性，双向链表则可以直接操作插入目标位置。</p>
</blockquote>
<br>
<br>
<hr />
<br>
<h6 id="23344-静态链表删除"><a class="markdownIt-Anchor" href="#23344-静态链表删除"></a> 2.3.3.4.4 静态链表删除</h6>
<p>静态链表删除<strong>时间复杂度为O(1)</strong>。静态链表删除与插入是一个相反的的过程，删除操作首先需遍历查找到目标位置的<strong>前一节点</strong>，大体步骤如下：</p>
<p>【1】遍历查找到插入位置前一节点</p>
<p>【2】删除节点，插入位置节点游标值赋给前一节点游标</p>
<p>【3】标记为空闲节点，备用表头结点游标值赋给插入位置节点游标</p>
<p>【4】更改备用头结点，插入位置节点索引号（数组下标）值赋给备用表头结点游标</p>
<br>
<p><font face="华文彩云" color=red size=5> 例：</font> 删除<code>“a2”</code>节点数据 (删除后数据表为 <code>d0—&gt;d2</code>)</p>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b6f16f2c2beb1739297.png" alt="image-20220819231754544" /></p>
<p>​                                                                  <mark>删除后数据表</mark></p>
<br>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	静态链表pos位置删除元素</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被操作的静态链表</span></span><br><span class="line"><span class="comment">  * @param[in]  pos  :  删除元素索引号（数组下标）</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0，失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">delete_static_link_list_node</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i,j,index;</span><br><span class="line">	<span class="type">list_node_type_t</span> node;       </span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)				<span class="comment">// 链表不存在</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 删除位置超出范围 */</span></span><br><span class="line">	<span class="keyword">if</span> (pos&lt;<span class="number">1</span> || (pos&gt;=get_static_link_list_occupy(<span class="built_in">list</span>)))	<span class="comment">// 位置大于有效结点数</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;   </span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	index = (<span class="built_in">list</span>-&gt;capacity+<span class="number">2</span>) - <span class="number">1</span>;              <span class="comment">// 数据表头结点索引号（数组下标）</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 遍历数组 找到删除结点的前一结点位置（index为前一结点位置）*/</span></span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;pos; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		index = <span class="built_in">list</span>-&gt;node[index].cur;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	j = <span class="built_in">list</span>-&gt;node[index].cur;     				<span class="comment">// 获取目标位置 </span></span><br><span class="line">	<span class="built_in">list</span>-&gt;node[index].cur = <span class="built_in">list</span>-&gt;node[j].cur;	<span class="comment">// 删除节点，删除位置节点游标值赋给前一节点游标</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 设置备用链表 */</span></span><br><span class="line">	<span class="built_in">list</span>-&gt;node[j].cur = <span class="built_in">list</span>-&gt;node[<span class="number">0</span>].cur; <span class="comment">// 标记为空闲节点，备用表头结点游标值赋给插入位置节点游标（即把后续空闲结点索引号，赋给删除结点游标）</span></span><br><span class="line">	<span class="built_in">list</span>-&gt;node[<span class="number">0</span>].cur = j;				   <span class="comment">// 更改备用头结点，删除位置节点索引号（数组下标）值赋给备用表头结点游标</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2335-其他操作"><a class="markdownIt-Anchor" href="#2335-其他操作"></a> 2.3.3.5 其他操作</h5>
<h6 id="23351-获取备用链表可用索引号"><a class="markdownIt-Anchor" href="#23351-获取备用链表可用索引号"></a> 2.3.3.5.1  获取备用链表可用索引号</h6>
<blockquote>
<p>只需访问首节点即可快速获取空闲链表地址 （空闲结点的索引号储存在备用表头结点的 游标中）</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	获取备用链表可用索引号</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被操作的静态链表</span></span><br><span class="line"><span class="comment">  * @retval     成功返回可用结点索引号，失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_static_link_list_free_index</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="comment">/* 链表不存在 */</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	i = <span class="built_in">list</span>-&gt;node[<span class="number">0</span>].cur;			<span class="comment">// 获取备用表头结点的游标值（即空闲结点索引号）</span></span><br><span class="line">    <span class="comment">/* 链表未满 */</span></span><br><span class="line">	<span class="keyword">if</span> (i&gt;<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">list</span>-&gt;node[<span class="number">0</span>].cur = <span class="built_in">list</span>-&gt;node[i].cur;		<span class="comment">// 备用表头结点的游标值 指向 下一个空闲结点索引号</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23352-获取有效结点数"><a class="markdownIt-Anchor" href="#23352-获取有效结点数"></a> 2.3.3.5.2 获取有效结点数</h6>
<blockquote>
<p>最后一个有效结点的游标值为0，遍历链表直到游标值为0</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	获取静态链表有效节点数，不包括头节点</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被操作的静态链表</span></span><br><span class="line"><span class="comment">  * @retval     成功返回有效结点数</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_static_link_list_occupy</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	i = <span class="built_in">list</span>-&gt;node[<span class="built_in">list</span>-&gt;capacity+<span class="number">2</span><span class="number">-1</span>].cur;		<span class="comment">// 获取数据表头结点游标值（即第一个元素node[1]的索引号）</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment">/*  获取有效结点个数（j为有效结点个数） */</span></span><br><span class="line">    <span class="keyword">while</span> (i &gt; <span class="number">0</span>)		<span class="comment">// 不是最后一个有效结点</span></span><br><span class="line">	&#123;</span><br><span class="line">		j++;</span><br><span class="line">		i = <span class="built_in">list</span>-&gt;node[i].cur;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23353-输出链表有效数据"><a class="markdownIt-Anchor" href="#23353-输出链表有效数据"></a> 2.3.3.5.3 输出链表有效数据</h6>
<p>输出链表有效数据，即按数组下标输出数组的内容。</p>
<blockquote>
<p>大概思路与获取有效结点数类似，也是遍历链表直到游标值为0</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	打印有效结点</span></span><br><span class="line"><span class="comment">  * @param[in]  list ： 被操作的静态链表</span></span><br><span class="line"><span class="comment">  * @retval     none</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printf_static_link_list_data_node</span><span class="params">(<span class="type">static_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	index = (<span class="built_in">list</span>-&gt;capacity+<span class="number">2</span>) - <span class="number">1</span>;					<span class="comment">// 数据表头结点索引号（数组下标）</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;[head,%d] &quot;</span>, <span class="built_in">list</span>-&gt;node[index].cur);	<span class="comment">// 打印数据表头结点的信息</span></span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">list</span>-&gt;node[index].cur &gt; <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		index = <span class="built_in">list</span>-&gt;node[index].cur;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;[%d, %d] &quot;</span>, <span class="built_in">list</span>-&gt;node[index].data, <span class="built_in">list</span>-&gt;node[index].cur);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2336-总结实例"><a class="markdownIt-Anchor" href="#2336-总结实例"></a> 2.3.3.6 总结实例</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SLINK_LIST_SIZE 10   <span class="comment">// 有效数据容积（即数组长度，不包括头结点）</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">static_link_list_t</span> *linklist = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">static_link_list_t</span> *ptemp;</span><br><span class="line">	<span class="type">list_node_type_t</span>  node;</span><br><span class="line">	<span class="type">int</span> elem = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 创建静态链表 */</span></span><br><span class="line">	linklist = create_static_link_list(SLINK_LIST_SIZE);	</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 插入操作 */</span></span><br><span class="line">	insert_static_link_list_node(linklist, <span class="number">1</span>, <span class="number">1</span>);			<span class="comment">// 在node[1]位置插入“1”</span></span><br><span class="line">	insert_static_link_list_node(linklist, <span class="number">2</span>, <span class="number">2</span>);			<span class="comment">// 同理插入其他值</span></span><br><span class="line">	insert_static_link_list_node(linklist, <span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line">	insert_static_link_list_node(linklist, <span class="number">5</span>, <span class="number">1</span>);			<span class="comment">// 最后数组结果&#123;5,3,1,2&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输出静态链表全部结点\n&quot;</span>);</span><br><span class="line">	printf_static_link_list_all_node(linklist);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;静态链表有效结点数:[%d]\n&quot;</span>, get_static_link_list_occupy(linklist));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输出静态链表有效结点： \n&quot;</span>);</span><br><span class="line">	printf_static_link_list_data_node(linklist);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 查找操作 */</span></span><br><span class="line">	get_static_link_list_node(linklist, <span class="number">2</span>, &amp;node);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;node[2]的数据为： , value:[%d, %d]\n&quot;</span>, node.data, node.cur);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 删除操作 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;删除结点node[2]\n&quot;</span>);</span><br><span class="line">	delete_static_link_list_node(linklist, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输出静态链表全部结点:\n&quot;</span>);</span><br><span class="line">	printf_static_link_list_all_node(linklist);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;静态链表有效结点数 :[%d]\n&quot;</span>, get_static_link_list_occupy(linklist));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输出静态链表有效结点：\n&quot;</span>);</span><br><span class="line">	printf_static_link_list_data_node(linklist);</span><br><span class="line">	destory_static_link_list(linklist);	<span class="comment">/* 销毁静态链表 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><mark>运行结果：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//输出静态链表全部结点:</span></span><br><span class="line">node0[<span class="number">0</span>, <span class="number">5</span>] node1[<span class="number">1</span>, <span class="number">2</span>] node2[<span class="number">2</span>, <span class="number">0</span>] node3[<span class="number">3</span>, <span class="number">1</span>] node4[<span class="number">5</span>, <span class="number">3</span>] node5[<span class="number">0</span>, <span class="number">6</span>] node6[<span class="number">0</span>, <span class="number">7</span>] node7[<span class="number">0</span>, <span class="number">8</span>] node8[<span class="number">0</span>, <span class="number">9</span>] node9[<span class="number">0</span>, <span class="number">10</span>] node10[<span class="number">0</span>, <span class="number">0</span>] node11[<span class="number">0</span>, <span class="number">4</span>] </span><br><span class="line"></span><br><span class="line">静态链表有效结点数:[<span class="number">4</span>]    </span><br><span class="line"></span><br><span class="line"><span class="comment">//输出静态链表有效结点：</span></span><br><span class="line">[head,<span class="number">4</span>] [<span class="number">5</span>, <span class="number">3</span>] [<span class="number">3</span>, <span class="number">1</span>] [<span class="number">1</span>, <span class="number">2</span>] [<span class="number">2</span>, <span class="number">0</span>] </span><br><span class="line"></span><br><span class="line">node[<span class="number">2</span>]的数据为：, value:[<span class="number">3</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">删除结点node[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出静态链表全部结点:</span></span><br><span class="line">node0[<span class="number">0</span>, <span class="number">3</span>] node1[<span class="number">1</span>, <span class="number">2</span>] node2[<span class="number">2</span>, <span class="number">0</span>] node3[<span class="number">3</span>, <span class="number">5</span>] node4[<span class="number">5</span>, <span class="number">1</span>] node5[<span class="number">0</span>, <span class="number">6</span>] node6[<span class="number">0</span>, <span class="number">7</span>] node7[<span class="number">0</span>, <span class="number">8</span>] node8[<span class="number">0</span>, <span class="number">9</span>] node9[<span class="number">0</span>, <span class="number">10</span>] node10[<span class="number">0</span>, <span class="number">0</span>] node11[<span class="number">0</span>, <span class="number">4</span>] </span><br><span class="line">静态链表有效结点数:[<span class="number">3</span>]   </span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h4 id="234-双向链表"><a class="markdownIt-Anchor" href="#234-双向链表"></a> 2.3.4  双向链表</h4>
<h5 id="2341-双向链表概念"><a class="markdownIt-Anchor" href="#2341-双向链表概念"></a> 2.3.4.1 双向链表概念</h5>
<p><strong>双向链表的概念：</strong> <em>在单链表的基础上，对于每一个结点设计一个前驱结点，前驱结点与前一个结点相互连接，构成一个链表。</em></p>
<blockquote>
<p>它的每个数据结点中都有<mark>两个指针</mark>，分别指向<mark>直接后继</mark>和<mark>直接前驱</mark>。所以，从双向链表中的<mark>任意一个结点开始</mark>，都可以很方便地访问它的前驱结点和后继结点。</p>
</blockquote>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b7416f2c2beb173946d.png" alt="双链表示意图" /></p>
<p>​                                                                   <mark>双向链表示意图</mark></p>
<blockquote>
<p>一个完整的双向链表应该是头结点的pre指针指为空，尾结点的next指针指向空，其余结点前后相链。</p>
</blockquote>
<br>
<hr />
<br>
<h5 id="2342-与单链表的异同"><a class="markdownIt-Anchor" href="#2342-与单链表的异同"></a> 2.3.4.2 与单链表的异同</h5>
<p><strong>相同点：</strong></p>
<ul>
<li>
<p>都属于链表一种</p>
</li>
<li>
<p>插入、删除时间复杂度都是O(1)</p>
</li>
<li>
<p>支持链式访问</p>
</li>
<li>
<p>支持带头节点和不带头节点</p>
</li>
</ul>
<br>
<p><strong>不同点：</strong></p>
<ul>
<li>组成结构不同，双向链表带前驱和后继指针；单链表只有后继指针</li>
<li>访问方向不同，双向链表支持前驱、后继访问；单链表支持后继访问</li>
<li>访问效率不同， 单链表节点无法直接访问其前驱节点，逆序访问单链表时效率低</li>
<li>空表判断方式不同</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 带头节点双向链表判断空表 */</span></span><br><span class="line"><span class="keyword">if</span> ((head-&gt;font==<span class="literal">NULL</span>) &amp;&amp; (head-&gt;next==<span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* todo */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不带头节点双向链表判断空表，与单链表判断方式相同 */</span></span><br><span class="line"><span class="keyword">if</span> (head-&gt;font==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* todo */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2343-双向链表创建"><a class="markdownIt-Anchor" href="#2343-双向链表创建"></a> 2.3.4.3 双向链表创建</h5>
<h6 id="23431-双向链表结点"><a class="markdownIt-Anchor" href="#23431-双向链表结点"></a> 2.3.4.3.1 双向链表结点</h6>
<p>双向链表中各节点包含以下 3 部分信息：</p>
<ul>
<li>指针域：用于指向当前节点的直接前驱节点；</li>
<li>数据域：用于存储数据元素。</li>
<li>指针域：用于指向当前节点的直接后继节点；</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079c9716f2c2beb17421f0.gif" alt="双向链表的节点构成" /></p>
<br>
<p><mark>代码实现：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> datatype;			<span class="comment">// 结点的数据类型定义为datatype，方便更改，此处为int</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">doubly_link_list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  	datatype data;					 <span class="comment">// 有效数据 </span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> _<span class="title">doubly_link_list</span> *<span class="title">pnext</span>;</span> <span class="comment">// 后继指针域 </span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> _<span class="title">doubly_link_list</span> *<span class="title">pfront</span>;</span><span class="comment">// 前驱指针域 </span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23432-双向链表创建"><a class="markdownIt-Anchor" href="#23432-双向链表创建"></a> 2.3.4.3.2 双向链表创建</h6>
<p>与单链表不同，双链表创建过程中，每创建一个新节点，都要与其前驱节点<strong>建立两次联系</strong>，分别是：</p>
<ul>
<li>将新节点的 <code>pfront</code>指针指向直接前驱节点；</li>
<li>将直接前驱节点的 <code>pnext</code> 指针指向新节点；</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	创建双向链表结点</span></span><br><span class="line"><span class="comment">  * @param[in]  none</span></span><br><span class="line"><span class="comment">  * @retval     返回创建成功的链表</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">doubly_link_list_t</span>* <span class="title function_">create_doubly_link_list</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span>* head = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    head = (<span class="type">doubly_link_list_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">doubly_link_list_t</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        head-&gt;data=<span class="number">0</span>;			<span class="comment">/* 头结数据域为空 */</span></span><br><span class="line">		head-&gt;pnext = <span class="literal">NULL</span>;		</span><br><span class="line">		head-&gt;pfont = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2344-双向链表基本操作"><a class="markdownIt-Anchor" href="#2344-双向链表基本操作"></a> 2.3.4.4 双向链表基本操作</h5>
<h6 id="23441-双向链表清空与销毁"><a class="markdownIt-Anchor" href="#23441-双向链表清空与销毁"></a> 2.3.4.4.1 双向链表清空与销毁</h6>
<ul>
<li>链表清空指的是删除链表有效节点，释放节点内存空间。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向链表清空操作</span></span><br><span class="line"><span class="comment">  * @param[in]  被操作的链表</span></span><br><span class="line"><span class="comment">  * @retval     none</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">clear_doubly_link_list</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *q = <span class="literal">NULL</span>;</span><br><span class="line">	</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">    <span class="comment">/*  遍历链表删除有效结点 */</span></span><br><span class="line">	<span class="keyword">while</span>(p != <span class="literal">NULL</span>)		<span class="comment">// 不是空表</span></span><br><span class="line">	&#123;</span><br><span class="line">		q = p-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(p);</span><br><span class="line">		p = q;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">list</span>-&gt;pnext=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<ul>
<li>链表销毁指的是删除所有节点，包括头结点，并释放节点内存空间。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向链表清空操作</span></span><br><span class="line"><span class="comment">  * @param[in]  被操作的链表</span></span><br><span class="line"><span class="comment">  * @retval     none</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">destory_doubly_link_list</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">list</span> != <span class="literal">NULL</span>)		<span class="comment">// 还存在结点</span></span><br><span class="line">	&#123;</span><br><span class="line">		p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(<span class="built_in">list</span>);</span><br><span class="line">		<span class="built_in">list</span> = p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">list</span> = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23442-双向链表查找"><a class="markdownIt-Anchor" href="#23442-双向链表查找"></a> 2.3.4.4.2 双向链表查找</h6>
<p>双向链表与单链表的查找方式一样，有<strong>两种方式:</strong></p>
<ul>
<li>根据元素索引号查找</li>
<li>根据节点数据元素值查找</li>
</ul>
<blockquote>
<p>这两种方式都需要从链表头开始遍历链表，直至查找到指定节点。(对于元素值查找，只适用于链表中存储的元素值都是唯一的情况，否则只能使用节点索引号查找。)</p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5> 例如：</font>  查找一个带头节点双向链表的第二个节点，可以通过索节点引号[1]查找或者通过唯一的节点数据元素[a1]查找。</p>
<p><img src="https://pic.imgdb.cn/item/63079b7a16f2c2beb1739670.png" alt="image-20220821000645158" /></p>
<br>
<hr />
<br>
<p><mark>代码实现:</mark></p>
<p>1️⃣ <em>通过节点索引号查找</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向链表通过节点索引号查找</span></span><br><span class="line"><span class="comment">  * @param[in]  list : 被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]  pos  : 查找结点索引号</span></span><br><span class="line"><span class="comment">  * @retval     返回所查结点地址</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">doubly_link_list_t</span> *<span class="title function_">get_doubly_link_list_node_pos</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在或插入位置不合法  */</span></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	p = <span class="built_in">list</span>;</span><br><span class="line">    <span class="comment">/* 遍历索引号 */</span></span><br><span class="line">	<span class="keyword">while</span>(pos&gt;=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">		<span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		pos--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p>2️⃣ <em>通过节点数据元素查找</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向链表通过节点数据元素值查找</span></span><br><span class="line"><span class="comment">  * @param[in]  list : 被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]  elem : 结点数据元素</span></span><br><span class="line"><span class="comment">  * @retval     返回所查结点地址</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">doubly_link_list_t</span> *<span class="title function_">get_doubly_link_list_node_elem</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> elem)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在或是空表 */</span></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (<span class="built_in">list</span>-&gt;pnext==<span class="literal">NULL</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;	<span class="comment">// 首元结点</span></span><br><span class="line">    <span class="comment">/* 遍历元素值 */</span></span><br><span class="line">	<span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (p-&gt;data == elem)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> p;</span><br><span class="line">		&#125;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23443-双向链表插入"><a class="markdownIt-Anchor" href="#23443-双向链表插入"></a> 2.3.4.4.3 双向链表插入</h6>
<p>双向链表插入时间复杂度为O(1)。与单链表的插入类型一样，分为三种:</p>
<ul>
<li>表头插入，无需遍历链表</li>
<li>表尾插入，无需遍历链表</li>
<li>表中间插入，需遍历链表，即是查找操作</li>
</ul>
<p>双向链表插入步骤与单链表稍有不同，主要区别是需处理前驱指针的指向：</p>
<p>【1】查找到插入位置节点的前一节点，可通过节点索引号或者唯一节点数据元素查找</p>
<p>【2】申请待插入新节点内存并赋值</p>
<p>【3】新节点后继指针域指向插入位置的原节点，如下图第1步</p>
<p>【4】新节点前驱指针域指向插入位置原节点的前一节点，如下图第2步</p>
<p>【5】插入位置原节点的前驱指针域指向新节点，如下图第3步</p>
<p>【6】插入位置原节点的前一节点的后继节指针域指向新节点，如下图第4步</p>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b7f16f2c2beb173986a.png" alt="在这里插入图片描述" /></p>
<p><br> <mark>代码实现:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向链表在pos位置插入value</span></span><br><span class="line"><span class="comment">  * @param[in]  list  :被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]	value :数据域的值</span></span><br><span class="line"><span class="comment">  * @param[in]  pos	  :插入位置</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0; 失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">insert_doubly_link_list_node_pos</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> value, <span class="type">int</span> pos)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;				<span class="comment">// 插入位置前一结点</span></span><br><span class="line">	<span class="type">doubly_link_list_t</span> *node = <span class="literal">NULL</span>;			<span class="comment">// 新增插入结点</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 链表不存在或插入位置不合法 */</span></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))			</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">/*  获取前驱结点 */</span></span><br><span class="line">	<span class="keyword">if</span> (pos == <span class="number">0</span>)	<span class="comment">// 表头插入</span></span><br><span class="line">	&#123;</span><br><span class="line">		p = <span class="built_in">list</span>;	<span class="comment">// 插入第一个节点位置</span></span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    	p = get_doubly_link_list_node_pos(<span class="built_in">list</span>, pos<span class="number">-1</span>);			<span class="comment">// 获取插入位置的前一结点</span></span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="comment">/* 前驱结点不存在 */</span></span><br><span class="line">	<span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	node = (<span class="type">doubly_link_list_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">doubly_link_list_t</span>));  <span class="comment">// 申请待插入新节点内存</span></span><br><span class="line">    <span class="comment">/* 申请失败 */</span></span><br><span class="line">	<span class="keyword">if</span> (node == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	node-&gt;data = value;					<span class="comment">// 新结点数据域赋值</span></span><br><span class="line">	node-&gt;pnext = p-&gt;pnext;				<span class="comment">// 新结点连接其后继结点 (即后继指针域指向插入位置的原节点)</span></span><br><span class="line">	node-&gt;pfront = p;					<span class="comment">// 新结点连接其前驱节点 (即新节点前驱指针域 指向 插入位置原节点的前一节点)</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment">/* 非表尾插入 */</span></span><br><span class="line">	<span class="keyword">if</span> (p-&gt;pnext != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p-&gt;pnext-&gt;pfront = node;		<span class="comment">// 插入位置原节点 连接 新结点(即插入位置原节点的前驱指针域指向新节点)</span></span><br><span class="line">	&#125;	</span><br><span class="line">	p-&gt;pnext = node;					<span class="comment">// 插入位置原节点的前驱结点 连接 新结点 (即插入位置原节点的前一节点的后继节指针域指向新节点)</span></span><br><span class="line">	</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23444-双向链表删除"><a class="markdownIt-Anchor" href="#23444-双向链表删除"></a> 2.3.4.4.4 双向链表删除</h6>
<p>双向链表删除时间复杂度为O(1)。双向链表删除与插入是一个相反的的过程，<strong>删除类型有三种:</strong></p>
<ul>
<li>表头删除</li>
<li>表尾删除</li>
<li>表中间删除</li>
</ul>
<p><em>(这三种类型,实现方式一样)</em></p>
<br>
<p>双向链表删除步骤与单链表稍有不同，主要区别是需<strong>处理前驱指针的指向</strong>：</p>
<p>【1】查<strong>找到删除位置</strong>的节点，可通过节点索引号或者唯一节点数据元素查找</p>
<p>【2】删除位置节点的前一节点的后继指针域 , 指向其后一节点，如下图第1步</p>
<p>【3】删除位置节点的后一节点的前驱指针域 ,  指向其前一节点，如下图第2步</p>
<p>【4】释放删除节点内存</p>
<p><img src="https://pic.imgdb.cn/item/63079b8416f2c2beb1739a6f.png" alt="在这里插入图片描述" /></p>
<br>
<p><mark>代码实现:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向链表在pos位置删除一个结点</span></span><br><span class="line"><span class="comment">  * @param[in]  list  :被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]  pos	  :删除位置</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0; 失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">delete_doubly_link_list_node_pos</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos)</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在或插入位置不合法 */</span></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">/* 检测是否是空表  */</span></span><br><span class="line">	<span class="keyword">if</span> (check_doubly_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	p = get_doubly_link_list_node_pos(<span class="built_in">list</span>, pos);	<span class="comment">/* 获取删除位置的结点 */</span></span><br><span class="line">	<span class="keyword">if</span> (p!=<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p-&gt;pfront-&gt;pnext = p-&gt;pnext;				<span class="comment">// 删除位置 节点的前一节点的后继指针域,指向后一结点</span></span><br><span class="line">		<span class="comment">/* 非表尾删除 */</span></span><br><span class="line">        <span class="keyword">if</span> (p-&gt;pnext != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			p-&gt;pnext-&gt;pfront = p-&gt;pfront;			<span class="comment">// 删除位置节点的后一节点的前驱指针域,指向前一结点</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">free</span>(p);									<span class="comment">// 释放结点内存</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2345-其他简单操作"><a class="markdownIt-Anchor" href="#2345-其他简单操作"></a> 2.3.4.5 其他简单操作</h5>
<h6 id="23451-检查是否空表"><a class="markdownIt-Anchor" href="#23451-检查是否空表"></a> 2.3.4.5.1  检查是否空表</h6>
<blockquote>
<p>带头节点的双向链表空表，头节点的前驱指针域和后继指针域都指向NULL</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 检查是否是空表 */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">check_doubly_link_list_empty</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>-&gt;pfront==<span class="literal">NULL</span>) &amp;&amp; (<span class="built_in">list</span>-&gt;pnext==<span class="literal">NULL</span>))	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23452-获取链表长度"><a class="markdownIt-Anchor" href="#23452-获取链表长度"></a> 2.3.4.5.2 获取链表长度</h6>
<blockquote>
<p>遍历链表获取有效结点数</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 获取链表长度 */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_doubly_link_list_capacity</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">int</span> size = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		size++;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2346-总结实例"><a class="markdownIt-Anchor" href="#2346-总结实例"></a> 2.3.4.6 总结实例</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *linklist = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *ptemp;</span><br><span class="line">	<span class="type">int</span> elem = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 创建双向链表 */</span></span><br><span class="line">	linklist = create_doubly_link_list();	</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 插入操作 */</span></span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">5</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;双向链表长度:[%d]\n&quot;</span>, get_doubly_link_list_capacity(linklist));</span><br><span class="line">    <span class="comment">/* 打印所有结点 */</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;get_doubly_link_list_capacity(linklist); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp = get_doubly_link_list_node_pos(linklist, i);			<span class="comment">// 查找操作</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;双向链表结点 node[%d]=%d\n&quot;</span>, i, ptemp-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 删除操作 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;删除双向链表 node[2]\n&quot;</span>);</span><br><span class="line">	delete_doubly_link_list_node_pos(linklist, <span class="number">2</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;双向链表长度:[%d]\n&quot;</span>, get_doubly_link_list_capacity(linklist));</span><br><span class="line">    <span class="comment">/* 打印所有结点 */</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;get_doubly_link_list_capacity(linklist); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp = get_doubly_link_list_node_pos(linklist, i);		<span class="comment">// 查找操作</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;doubly link list node[%d]=%d\n&quot;</span>, i, ptemp-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">	destory_doubly_link_list(linklist);	<span class="comment">// 销毁双向链表 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><strong>运行结果:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">双向链表长度:[<span class="number">4</span>]</span><br><span class="line">双向链表结点 node[<span class="number">0</span>]=<span class="number">3</span></span><br><span class="line">双向链表结点 node[<span class="number">1</span>]=<span class="number">5</span></span><br><span class="line">双向链表结点 node[<span class="number">2</span>]=<span class="number">0</span></span><br><span class="line">双向链表结点 node[<span class="number">3</span>]=<span class="number">1</span></span><br><span class="line">删除双向链表结点 node[<span class="number">2</span>]</span><br><span class="line">双向链表长度:[<span class="number">3</span>]</span><br><span class="line">双向链表结点 node[<span class="number">0</span>]=<span class="number">3</span></span><br><span class="line">双向链表结点t node[<span class="number">1</span>]=<span class="number">5</span></span><br><span class="line">双向链表结点 node[<span class="number">2</span>]=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h4 id="235-循环链表"><a class="markdownIt-Anchor" href="#235-循环链表"></a> 2.3.5 循环链表</h4>
<p><strong>首尾相接的链表称为循环链表</strong></p>
<ul>
<li>单链表和双向链表都支持循环形式，分别称为<strong>循环单链表</strong>和<strong>循环双向链表</strong>。</li>
<li>循环链表同样地支持<strong>带头节点</strong>和<strong>不带头节点</strong>的形式</li>
<li>对于带头结点的循环链表，<strong>单链表</strong>的末尾节点后继指针域指向的是头节点；(形成一个链路环)</li>
<li><strong>双链表</strong>的末尾节点后继指针域指向头节点，头节点前驱指针域指向末尾节点。(形成两个链路环)</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b8816f2c2beb1739c59.png" alt="在这里插入图片描述" /></p>
<p>​                                                                                     <mark>带头结点的循环单链表</mark></p>
<p><img src="https://pic.imgdb.cn/item/63079b8b16f2c2beb1739db5.png" alt="在这里插入图片描述" /></p>
<p>​															                        <mark>带头结点的循环双链表</mark></p>
<br>
<p>循环链表<strong>优点:</strong></p>
<ul>
<li>从表中任一结点出发均可找到表中其他结点，遍历灵活性提高</li>
<li>可以无需增加存储空间，重复利用空间，类似于“<strong>队列</strong>”</li>
</ul>
<br>
<blockquote>
<p>循环链表的创建、插入、删除、查找、清空、销毁等操作，与非循环链表基本一致。只是在空表检查上的差异以及注意头节点和末尾节点的指针域处理。</p>
</blockquote>
<br>
<hr />
<br>
<h5 id="2351-循环链表空表判断"><a class="markdownIt-Anchor" href="#2351-循环链表空表判断"></a> 2.3.5.1 循环链表空表判断</h5>
<ul>
<li>
<p>对于不带头节点的循环链表，判断方式与非循环链表一致，都是<strong>头指针指向NULL</strong>。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (head == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">/* 不带头结点空表判断 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>带头节点的循环链表，由于头、尾相连，检查链表是为空表的条件是前驱和后继指针域<strong>指向是否相等</strong>。</p>
</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b9316f2c2beb173a097.png" alt="image-20220821225057395" /></p>
<br>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 循环单链表空表判断 */</span></span><br><span class="line"><span class="keyword">if</span> (head == head-&gt;pnext)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 带头结点空表判断 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 循环双向链表空表判断 */</span></span><br><span class="line"><span class="keyword">if</span> (head-&gt;pfront == head-&gt;pnext)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 带头结点空表判断 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2352-循环链表创建"><a class="markdownIt-Anchor" href="#2352-循环链表创建"></a> 2.3.5.2 循环链表创建</h5>
<blockquote>
<p>以双向链表为例 , 循环双向链表创建，一般是创建一个空的链表，这里我们创建一个带头节点的空链表。循环双向链表的空表，<mark>前驱和后继指针域都指向头结点本身</mark>。</p>
</blockquote>
<br>
<p><strong>代码实现:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	创建双向循环链表头结点</span></span><br><span class="line"><span class="comment">  * @param[in]  none</span></span><br><span class="line"><span class="comment">  * @retval     返回创建成功的带头结点的空链表</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">doubly_link_list_t</span>* <span class="title function_">create_doubly_link_list</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span>* head = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    head = (<span class="type">doubly_link_list_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">doubly_link_list_t</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        head-&gt;data=<span class="number">0</span>;			<span class="comment">// 头结数据域为空</span></span><br><span class="line">		head-&gt;pnext = head;		<span class="comment">// 后继指针域都指向头结点本身(非循环链表指向NULL)</span></span><br><span class="line">		head-&gt;pfront = head;	<span class="comment">// 前驱指针域都指向头结点本身(非循环链表指向NULL)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2353-双向循环链表基本操作"><a class="markdownIt-Anchor" href="#2353-双向循环链表基本操作"></a> 2.3.5.3 双向循环链表基本操作</h5>
<h6 id="23531-双向循环链表的清空与销毁"><a class="markdownIt-Anchor" href="#23531-双向循环链表的清空与销毁"></a> 2.3.5.3.1 双向循环链表的清空与销毁</h6>
<blockquote>
<p>循环双向链表清空与销毁与普通双向链表操作一致，都是遍历整个链表，只是遍历的<mark>结束条件不同</mark>。</p>
</blockquote>
<br>
<p>1️⃣ 链表清空指的是删除链表有效元素节点，释放节点内存空间。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向循环链表清空操作</span></span><br><span class="line"><span class="comment">  * @param[in]  被操作的链表</span></span><br><span class="line"><span class="comment">  * @retval     none</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">clear_doubly_link_list</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *q = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在 */</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">/* 检查是否是空表  */</span></span><br><span class="line">	<span class="keyword">if</span> (check_doubly_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="built_in">list</span>)	<span class="comment">// 遍历结束条件</span></span><br><span class="line">	&#123;</span><br><span class="line">		q = p-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(p);</span><br><span class="line">		p = q;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">list</span>-&gt;pnext=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p>2️⃣ 链表销毁指的是删除所有节点，包括头结点，并释放节点内存空间。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向链表销毁操作</span></span><br><span class="line"><span class="comment">  * @param[in]  被操作的链表</span></span><br><span class="line"><span class="comment">  * @retval     none</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">destory_doubly_link_list</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *q = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在 */</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">/* 检查是否是空表  */</span></span><br><span class="line">	<span class="keyword">if</span> (check_doubly_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">free</span>(<span class="built_in">list</span>);</span><br><span class="line">		<span class="built_in">list</span> = <span class="literal">NULL</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="built_in">list</span>)	<span class="comment">// 遍历结束条件</span></span><br><span class="line">	&#123;</span><br><span class="line">		q = p-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(p);</span><br><span class="line">		p = q;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">free</span>(<span class="built_in">list</span>);			<span class="comment">// 释放头结点内存</span></span><br><span class="line">	<span class="built_in">list</span> = <span class="literal">NULL</span>;		</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23532-双向循环链表的查找"><a class="markdownIt-Anchor" href="#23532-双向循环链表的查找"></a> 2.3.5.3.2 双向循环链表的查找</h6>
<p>循环双向链表与普通双向链表的查找方式一样，有<strong>两种方式:</strong></p>
<ul>
<li>根据元素索引号查找</li>
<li>根据节点数据元素值查找</li>
</ul>
<blockquote>
<p>这两种方式都需要从链表头开始遍历链表，直至查找到指定节点。(对于元素值查找，只适用于链表中存储的元素值都是唯一的情况，否则只能使用节点索引号查找。)</p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5> 例如：</font>   查找一个带头节点双向链表的第二个节点，可以通过索节点引号[1]查找或者通过唯一的节点数据元素[a1]查找。</p>
<p><img src="https://pic.imgdb.cn/item/63079b7a16f2c2beb1739670.png" alt="image-20220821000645158" /></p>
<br>
<hr />
<br>
<p><mark>代码实现:</mark></p>
<p>1️⃣ <em>通过节点索引号查找</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	循环双向链表通过节点索引号查找</span></span><br><span class="line"><span class="comment">  * @param[in]  list : 被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]  pos  : 查找结点索引号</span></span><br><span class="line"><span class="comment">  * @retval     返回所查结点地址</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">doubly_link_list_t</span> *<span class="title function_">get_doubly_link_list_node_pos</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在或插入位置不合法  */</span></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*  判断是否空表 */</span></span><br><span class="line">	<span class="keyword">if</span> (check_doubly_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	p = <span class="built_in">list</span>;</span><br><span class="line">	<span class="keyword">while</span>(pos&gt;=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">		<span class="keyword">if</span> (p == <span class="built_in">list</span>)  <span class="comment">// 重新回到头结点(这里与普通双向链表不同)</span></span><br><span class="line">		&#123;</span><br><span class="line">			p = <span class="literal">NULL</span>;	<span class="comment">// 未找到目标节点 </span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		pos--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p>2️⃣  <em>通过节点数据元素查找</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	循环双向链表通过节点数据元素值查找</span></span><br><span class="line"><span class="comment">  * @param[in]  list : 被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]  elem : 结点数据元素</span></span><br><span class="line"><span class="comment">  * @retval     返回所查结点地址</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">doubly_link_list_t</span> *<span class="title function_">get_doubly_link_list_node_elem</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> elem)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在 */</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/* 判断是否空表 */</span></span><br><span class="line">	<span class="keyword">if</span> (check_doubly_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;		<span class="comment">// 首元结点</span></span><br><span class="line">	<span class="keyword">while</span>(p!=<span class="built_in">list</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (p-&gt;data == elem)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> p;</span><br><span class="line">		&#125;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23533-双向循环链表插入"><a class="markdownIt-Anchor" href="#23533-双向循环链表插入"></a> 2.3.5.3.3 双向循环链表插入</h6>
<p>循环双向链表插入时间复杂度为O(1)。与普通双向链表的插入类型一样，分为三种:</p>
<ul>
<li>表头插入，无需遍历链表</li>
<li>表尾插入，无需遍历链表</li>
<li>表中间插入，需遍历链表，即是查找操作</li>
</ul>
<blockquote>
<p>因为此时链表是一个”环“, 因此，表头、表尾、表中间插入操作实现方法都是都相同。</p>
</blockquote>
<p>【1】查找到插入位置节点的前一节点，可通过节点索引号或者唯一节点数据元素查找</p>
<p>【2】申请待插入新节点内存并赋值</p>
<p>【3】新节点后继指针域指向插入位置的原节点，如下图第1步</p>
<p>【4】新节点前驱指针域指向插入位置原节点的前一节点，如下图第2步</p>
<p>【5】插入位置原节点的前驱指针域指向新节点，如下图第3步</p>
<p>【6】插入位置原节点的前一节点的后继节指针域指向新节点，如下图第4步</p>
<br>
<p><img src="https://pic.imgdb.cn/item/63079b9f16f2c2beb173a545.png" alt="在这里插入图片描述" /></p>
<br>
<p><mark>代码实现:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	循环双向链表在pos位置插入value</span></span><br><span class="line"><span class="comment">  * @param[in]  list  :被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]	value :数据域的值</span></span><br><span class="line"><span class="comment">  * @param[in]  pos	  :插入位置</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0; 失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">insert_doubly_link_list_node_pos</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> value, <span class="type">int</span> pos)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *node = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">doubly_link_list_t</span>  *temp;</span><br><span class="line">     <span class="comment">/* 链表不存在或插入位置不合法 */</span></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">/*  获取前驱结点 */</span></span><br><span class="line">	<span class="keyword">if</span> (pos == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = <span class="built_in">list</span>;	<span class="comment">// 插入第一个节点位置 </span></span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    	p = get_doubly_link_list_node_pos(<span class="built_in">list</span>, pos<span class="number">-1</span>);	<span class="comment">// 获取插入位置的前一结点 </span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">/* 空表，插入第一个节点位置  */</span></span><br><span class="line">	<span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = <span class="built_in">list</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	node = (<span class="type">doubly_link_list_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">doubly_link_list_t</span>));  <span class="comment">// 申请待插入新节点内存</span></span><br><span class="line">     <span class="comment">/* 申请失败 */</span></span><br><span class="line">	<span class="keyword">if</span> (node == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	node-&gt;data = value;					<span class="comment">// 新结点数据域赋值</span></span><br><span class="line">	node-&gt;pnext = p-&gt;pnext;				<span class="comment">// 新结点连接其后继结点 (即后继指针域指向插入位置的原节点)</span></span><br><span class="line">	node-&gt;pfront = p;					<span class="comment">// 新结点连接其前驱节点 (即新节点前驱指针域 指向 插入位置原节点的前一节点)</span></span><br><span class="line">	p-&gt;pnext-&gt;pfront = node;			<span class="comment">// 插入位置原节点 连接 新结点(即插入位置原节点的前驱指针域指向新节点)</span></span><br><span class="line">	p-&gt;pnext = node;					<span class="comment">// 插入位置原节点的前驱结点 连接 新结点 (即插入位置原节点的前一节点的后继节指针域指向新节点)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="23534-双向循环链表删除"><a class="markdownIt-Anchor" href="#23534-双向循环链表删除"></a> 2.3.5.3.4 双向循环链表删除</h6>
<p>循环双向链表删除时间复杂度为O(1)。双向链表删除与插入是一个相反的的过程，<strong>删除类型有三种:</strong></p>
<ul>
<li>表头删除</li>
<li>表尾删除</li>
<li>表中间删除</li>
</ul>
<p><em>(这三种类型,实现方式一样)</em></p>
<br>
<blockquote>
<p>循环双向链表删除步骤与普通双向链表操作步骤一样，因为此时链表是一个”环“。因此，表头、表尾、表中间删除操作实现方法都是都相同的。</p>
</blockquote>
<p>【1】查找到删除位置的节点，可通过节点索引号或者唯一节点数据元素查找</p>
<p>【2】删除位置节点的前一节点的后继指针域指向其后一节点，如下图第1步</p>
<p>【3】删除位置节点的后一节点的前驱指针域指向其前一节点，如下图第2步</p>
<p>【4】释放删除节点内存</p>
<br>
<p><img src="https://pic.imgdb.cn/item/63079c0216f2c2beb173cbbc.png" alt="在这里插入图片描述" /></p>
<br>
<p><mark>代码实现:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	双向循环链表在pos位置删除一个结点</span></span><br><span class="line"><span class="comment">  * @param[in]  list  :被操作的链表</span></span><br><span class="line"><span class="comment">  * @param[in]  pos	  :删除位置</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0; 失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">delete_doubly_link_list_node_pos</span><span class="params">(<span class="type">doubly_link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos)</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">/* 链表不存在或插入位置不合法 */</span></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">/* 检测是否是空表  */</span></span><br><span class="line">	<span class="keyword">if</span> (check_doubly_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	p = get_doubly_link_list_node_pos(<span class="built_in">list</span>, pos);	<span class="comment">// 获取删除位置的结点 </span></span><br><span class="line">	<span class="keyword">if</span> (p!=<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p-&gt;pfront-&gt;pnext = p-&gt;pnext;				<span class="comment">// 删除位置 节点的前一节点的后继指针域,指向后一结点</span></span><br><span class="line">		p-&gt;pnext-&gt;pfront = p-&gt;pfront;				<span class="comment">// 删除位置节点的后一节点的前驱指针域,指向前一结点</span></span><br><span class="line">		<span class="built_in">free</span>(p);									<span class="comment">// 释放结点内存</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2354-总结实例"><a class="markdownIt-Anchor" href="#2354-总结实例"></a> 2.3.5.4 总结实例</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *linklist = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">doubly_link_list_t</span> *ptemp;</span><br><span class="line">	<span class="type">int</span> elem = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 创建双向链表 */</span></span><br><span class="line">	linklist = create_doubly_link_list();	</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 插入操作 */</span></span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">	insert_doubly_link_list_node_pos(linklist, <span class="number">5</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;双向链表长度:[%d]\n&quot;</span>, get_doubly_link_list_capacity(linklist));</span><br><span class="line">    <span class="comment">/* 打印所有结点 */</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;get_doubly_link_list_capacity(linklist); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp = get_doubly_link_list_node_pos(linklist, i);			<span class="comment">// 查找操作</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;双向链表结点 node[%d]=%d\n&quot;</span>, i, ptemp-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 删除操作 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;删除双向链表 node[2]\n&quot;</span>);</span><br><span class="line">	delete_doubly_link_list_node_pos(linklist, <span class="number">2</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;双向链表长度:[%d]\n&quot;</span>, get_doubly_link_list_capacity(linklist));</span><br><span class="line">    <span class="comment">/* 打印所有结点 */</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;get_doubly_link_list_capacity(linklist); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp = get_doubly_link_list_node_pos(linklist, i);		<span class="comment">// 查找操作</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;doubly link list node[%d]=%d\n&quot;</span>, i, ptemp-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">	destory_doubly_link_list(linklist);	<span class="comment">// 销毁双向链表 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><mark>运行结果:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">双向链表长度:[<span class="number">4</span>]</span><br><span class="line">双向链表结点 node[<span class="number">0</span>]=<span class="number">3</span></span><br><span class="line">双向链表结点 node[<span class="number">1</span>]=<span class="number">5</span></span><br><span class="line">双向链表结点 node[<span class="number">2</span>]=<span class="number">0</span></span><br><span class="line">双向链表结点 node[<span class="number">3</span>]=<span class="number">1</span></span><br><span class="line">删除双向链表结点 node[<span class="number">2</span>]</span><br><span class="line">双向链表长度:[<span class="number">3</span>]</span><br><span class="line">双向链表结点 node[<span class="number">0</span>]=<span class="number">3</span></span><br><span class="line">双向链表结点t node[<span class="number">1</span>]=<span class="number">5</span></span><br><span class="line">双向链表结点 node[<span class="number">2</span>]=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<br>
<h5 id="2355-循环单链表实现"><a class="markdownIt-Anchor" href="#2355-循环单链表实现"></a> 2.3.5.5 循环单链表实现</h5>
<blockquote>
<p>循环单链表只是循环双向链表中的一个“正向环路” ; 以下为循环单链表实现。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">link_list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  	<span class="type">int</span> data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> _<span class="title">link_list</span> *<span class="title">pnext</span>;</span><span class="comment">/* 下一节点 */</span></span><br><span class="line">&#125;<span class="type">link_list_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">link_list_t</span>* <span class="title function_">create_link_list</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span>* head = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    head = (<span class="type">link_list_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">link_list_t</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        head-&gt;data=<span class="number">0</span>;		<span class="comment">/* 头结数据域为空 */</span></span><br><span class="line">		head-&gt;pnext = head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">check_link_list_empty</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>-&gt;pnext == <span class="built_in">list</span>)	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">clear_link_list</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">link_list_t</span> *q = <span class="literal">NULL</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (check_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="built_in">list</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		q = p-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(p);</span><br><span class="line">		p = q;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">list</span>-&gt;pnext=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">destory_link_list</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">link_list_t</span> *q = <span class="literal">NULL</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (check_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">free</span>(<span class="built_in">list</span>);</span><br><span class="line">		<span class="built_in">list</span> = <span class="literal">NULL</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="built_in">list</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		q = p-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(p);</span><br><span class="line">		p = q;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">free</span>(<span class="built_in">list</span>);</span><br><span class="line">	<span class="built_in">list</span> = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_link_list_capacity</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">int</span> size = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (check_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="built_in">list</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		size++;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">link_list_t</span> *<span class="title function_">get_link_list_node_pos</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (check_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	p = <span class="built_in">list</span>;</span><br><span class="line">	<span class="keyword">while</span>(pos&gt;=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">		<span class="keyword">if</span> (p == <span class="built_in">list</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			p = <span class="literal">NULL</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		pos--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">link_list_t</span> *<span class="title function_">get_link_list_node_elem_per</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> elem)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (check_link_list_empty(<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	p = <span class="built_in">list</span>-&gt;pnext;</span><br><span class="line">	<span class="keyword">while</span>(p!=<span class="built_in">list</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (p-&gt;pnext-&gt;data == elem)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> p;</span><br><span class="line">		&#125;</span><br><span class="line">		p = p-&gt;pnext;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">insert_link_list_node_pos</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> value, <span class="type">int</span> pos)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">link_list_t</span> *node = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (pos == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = <span class="built_in">list</span>;	<span class="comment">/* 插入第一个节点位置 */</span></span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    	p = get_link_list_node_pos(<span class="built_in">list</span>, pos<span class="number">-1</span>);	<span class="comment">/* 获取插入位置的前一节点 */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;<span class="comment">/* 空表，插入第一个节点位置  */</span></span><br><span class="line">		p = <span class="built_in">list</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	node = (<span class="type">link_list_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">link_list_t</span>));</span><br><span class="line">	<span class="keyword">if</span> (node == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	node-&gt;data = value;</span><br><span class="line">	node-&gt;pnext = p-&gt;pnext;</span><br><span class="line">	p-&gt;pnext = node;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">insert_link_list_node_elem</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> value, <span class="type">int</span> elem)</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">link_list_t</span> *node = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    p = get_link_list_node_elem_per(<span class="built_in">list</span>, elem);	<span class="comment">/* 获取插入位置的前一节点 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;<span class="comment">/* 空表，插入第一个节点位置  */</span></span><br><span class="line">		p = <span class="built_in">list</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	node = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">link_list_t</span>));</span><br><span class="line">	<span class="keyword">if</span> (node == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	node-&gt;data = value;</span><br><span class="line">	node-&gt;pnext = p-&gt;pnext;</span><br><span class="line">	p-&gt;pnext = node;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">delete_link_list_node_pos</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> pos)</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">link_list_t</span> *node = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ((<span class="built_in">list</span>==<span class="literal">NULL</span>) || (pos&lt;<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (pos == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		p = <span class="built_in">list</span>;	<span class="comment">/* 删除第一个节点 */</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>	</span><br><span class="line">	&#123;</span><br><span class="line">		p = get_link_list_node_pos(<span class="built_in">list</span>, pos<span class="number">-1</span>);	<span class="comment">/* 获取删除位置的前一节点 */</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> ((p!=<span class="literal">NULL</span>) &amp;&amp; (p-&gt;pnext!=<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		node = p-&gt;pnext;</span><br><span class="line">		p-&gt;pnext = node-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(node);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">delete_link_list_node_elem</span><span class="params">(<span class="type">link_list_t</span> *<span class="built_in">list</span>, <span class="type">int</span> elem)</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">link_list_t</span> *node = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">list</span>==<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	p = get_link_list_node_elem_per(<span class="built_in">list</span>, elem);	<span class="comment">/* 获取删除位置的前一节点 */</span></span><br><span class="line">	<span class="keyword">if</span> ((p!=<span class="literal">NULL</span>) &amp;&amp; (p-&gt;pnext!=<span class="built_in">list</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		node = p-&gt;pnext;</span><br><span class="line">		p-&gt;pnext = node-&gt;pnext;</span><br><span class="line">		<span class="built_in">free</span>(node);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">link_list_t</span> *linklist = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">link_list_t</span> *ptemp;</span><br><span class="line">	<span class="type">int</span> elem = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 创建循环单链表 */</span></span><br><span class="line">	linklist = create_link_list();	</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 插入操作 */</span></span><br><span class="line">	insert_link_list_node_pos(linklist, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	insert_link_list_node_pos(linklist, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">	insert_link_list_node_pos(linklist, <span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">	insert_link_list_node_pos(linklist, <span class="number">5</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;link list capacity:[%d]\n&quot;</span>, get_link_list_capacity(linklist));</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;get_link_list_capacity(linklist); i++)</span><br><span class="line">    &#123;<span class="comment">/* 查找操作 */</span></span><br><span class="line">        ptemp = get_link_list_node_pos(linklist, i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;link list node[%d]=%d\n&quot;</span>, i, ptemp-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 删除操作 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;delete link list node[2]\n&quot;</span>);</span><br><span class="line">	delete_link_list_node_pos(linklist, <span class="number">2</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;link list capacity:[%d]\n&quot;</span>, get_link_list_capacity(linklist));</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;get_link_list_capacity(linklist); i++)</span><br><span class="line">    &#123;<span class="comment">/* 查找操作 */</span></span><br><span class="line">        ptemp = get_link_list_node_pos(linklist, i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;link list node[%d]=%d\n&quot;</span>, i, ptemp-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">	destory_link_list(linklist);	<span class="comment">/* 销毁循环单链表 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h3 id="24-几类线性表总结"><a class="markdownIt-Anchor" href="#24-几类线性表总结"></a> 2.4 几类线性表总结</h3>
<h4 id="241-各类线性表特点"><a class="markdownIt-Anchor" href="#241-各类线性表特点"></a> 2.4.1 各类线性表特点</h4>
<ul>
<li>顺序表，高效的查找操作</li>
<li>单链表，高效的插入/删除操作</li>
<li>双向链表，双向遍历，遍历效率高</li>
<li>循环链表，任一节点开始，可以遍历整个链表，遍历灵活性高</li>
<li>静态链表，综合了顺序表和链表特点，既有高效的查找操作，又能快速增删元素节点</li>
</ul>
<br>
<hr />
<br>
<h4 id="242-线性表特点比较"><a class="markdownIt-Anchor" href="#242-线性表特点比较"></a> 2.4.2 线性表特点比较</h4>
<br>
<table>
<thead>
<tr>
<th></th>
<th>存储地址</th>
<th>存储空间</th>
<th>存储密度</th>
<th>存取结构</th>
<th>空间长度</th>
<th>查找</th>
<th>删除/插入</th>
</tr>
</thead>
<tbody>
<tr>
<td>顺序表</td>
<td>连续</td>
<td>静态</td>
<td>=1</td>
<td>顺序/随机</td>
<td>定长</td>
<td>O(1)</td>
<td>O(n)</td>
</tr>
<tr>
<td>单链表</td>
<td>非连续</td>
<td>动态</td>
<td>&lt;1</td>
<td>顺序</td>
<td>动态增加</td>
<td>O(n)</td>
<td>O(1)</td>
</tr>
<tr>
<td>双向链表</td>
<td>非连续</td>
<td>动态</td>
<td>&lt;1</td>
<td>顺序</td>
<td>动态增加</td>
<td>O(n)</td>
<td>O(1)</td>
</tr>
<tr>
<td>循环链表</td>
<td>非连续</td>
<td>动态</td>
<td>&lt;1</td>
<td>顺序</td>
<td>动态增加</td>
<td>O(n)</td>
<td>O(1)</td>
</tr>
<tr>
<td>静态链表</td>
<td>非连续</td>
<td>静态</td>
<td>&lt;1</td>
<td>顺序</td>
<td>定长</td>
<td>O(1)</td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<br>
<hr />
<br>
<h4 id="243-线性表适用场景参考"><a class="markdownIt-Anchor" href="#243-线性表适用场景参考"></a> 2.4.3 线性表适用场景参考</h4>
<br>
<table>
<thead>
<tr>
<th>应用场景</th>
<th>线性表选择</th>
</tr>
</thead>
<tbody>
<tr>
<td>固定表长度</td>
<td>顺序表/静态链表</td>
</tr>
<tr>
<td>频繁查找操作</td>
<td>顺序表/静态链表</td>
</tr>
<tr>
<td>频繁插入/删除操作</td>
<td>链表</td>
</tr>
<tr>
<td>复用缓冲队列</td>
<td>循环链表</td>
</tr>
<tr>
<td>双向遍历</td>
<td>双向链表</td>
</tr>
<tr>
<td>兼顾查找/插入/删除效率</td>
<td>静态链表</td>
</tr>
<tr>
<td>约瑟夫环问题</td>
<td>循环链表</td>
</tr>
<tr>
<td>LRU 缓存淘汰算法</td>
<td>循环链表</td>
</tr>
</tbody>
</table>
<br>
<hr />
<br>
<h2 id="3️⃣-栈与队列"><a class="markdownIt-Anchor" href="#3️⃣-栈与队列"></a> 3️⃣ 栈与队列</h2>
<h3 id="31-栈"><a class="markdownIt-Anchor" href="#31-栈"></a> 3.1 栈</h3>
<h4 id="311-栈的概念"><a class="markdownIt-Anchor" href="#311-栈的概念"></a> 3.1.1 栈的概念</h4>
<p><strong>栈</strong> 是<strong>线性表的特例</strong>，其具备先进后出 FILO <strong>特性</strong></p>
<blockquote>
<p><strong>栈的定义:</strong> 栈是一个<strong>线性</strong>的数据结构，规定这个数据结构只允许<strong>在其中一端</strong>进行操作，并禁止直接访问除这一端以外的数据。</p>
</blockquote>
<br>
<p>栈对数据 <strong>“存” 和 “取”</strong> 的过程有特殊的要求：</p>
<ul>
<li>栈只能从表的一端存取数据，另一端是封闭的.</li>
<li>在栈中，无论是存数据还是取数据，都必须遵循==&quot;先进后出==&quot;的原则，即最先进栈的元素最后出栈。</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079c9b16f2c2beb1742564.gif" alt="栈存储结构示意图" /></p>
<br>
<p>通常，栈的开口端被称为<strong>栈顶</strong>；相应地，封口端被称为<strong>栈底</strong>。因此，<strong>栈顶元素</strong>指的就是距离栈顶最近的元素。</p>
<br>
<p><font face="华文彩云" color=red size=5> 例如：</font> 如图所示 , 栈顶元素为元素 4；栈底元素为元素 1。</p>
<p><img src="https://pic.imgdb.cn/item/63079ca016f2c2beb174294a.gif" alt="栈顶和栈底" /></p>
<br>
<hr />
<br>
<h4 id="312顺序栈"><a class="markdownIt-Anchor" href="#312顺序栈"></a> 3.1.2	顺序栈</h4>
<br>
<p><strong>顺序栈：<strong>可以使线性表的</strong>顺序存储结构</strong>（即数组）实现栈，将之称之为 <strong>顺序栈</strong></p>
<blockquote>
<p>用数组下标表示的栈顶指针top(相对指针)完成各种操作; top 初始值为 -1，表示栈中没有存储任何数据元素，及栈是&quot;空栈&quot;。一旦有数据元素进栈，则 top 就做 +1 操作；反之，如果数据元素出栈，top 就做 -1 操作。</p>
</blockquote>
<br>
<p><strong>特点:</strong></p>
<ul>
<li>顺序栈需要事<strong>先确定一个固定的长度</strong>（数组长度）</li>
<li>可能存在内存空间浪费问题，但它的优势是<strong>存取时定位很方便</strong></li>
</ul>
<br>
<h5 id="3121-顺序栈定义"><a class="markdownIt-Anchor" href="#3121-顺序栈定义"></a> 3.1.2.1 顺序栈定义</h5>
<p><img src="https://pic.imgdb.cn/item/63079bb016f2c2beb173abed.png" alt="image-20220823202403725" /></p>
<br>
<p><mark>定义方式:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> <span class="type">data_t</span>; <span class="comment">//定义栈中数据元素的数据类型,此处为int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">  <span class="type">data_t</span> *data; 	<span class="comment">//用指针指向栈的存储空间</span></span><br><span class="line">  <span class="type">int</span> maxlen; 		<span class="comment">//当前栈的最大元素大小</span></span><br><span class="line">  <span class="type">int</span> top;  		<span class="comment">//只是栈顶元素位置</span></span><br><span class="line">&#125;sqstack;</span><br></pre></td></tr></table></figure>
<br>
<p><mark>顺序栈创建:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	顺序栈创建</span></span><br><span class="line"><span class="comment">  * @param[in]  len	  :最大长度</span></span><br><span class="line"><span class="comment">  * @retval     成功返回创建后的栈</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">sqstack * <span class="title function_">stack_create</span><span class="params">(<span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">       sqstack * s;</span><br><span class="line">    	<span class="comment">/* 申请结构体内存 */</span></span><br><span class="line">       <span class="keyword">if</span> ((s = (sqstack *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqstack)))== <span class="literal">NULL</span>)</span><br><span class="line">       &#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;sqstack 内存分配失败\n&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">       &#125;</span><br><span class="line">    	<span class="comment">/* 申请数据域内存(即数组内存) */</span></span><br><span class="line">       <span class="keyword">if</span>((s-&gt;data = (<span class="type">data_t</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">data_t</span>) * len))==<span class="literal">NULL</span>)</span><br><span class="line">       &#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;数据域内存分配失败\n&quot;</span>);</span><br><span class="line">               <span class="built_in">free</span>(s);</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">       &#125;</span><br><span class="line">    	<span class="comment">/* 初始化结构体成员 */</span></span><br><span class="line">       <span class="built_in">memset</span>(s-&gt;data, <span class="number">0</span> , len * <span class="keyword">sizeof</span>(<span class="type">data_t</span>));		<span class="comment">// 数据域全部写入0</span></span><br><span class="line">       s-&gt;maxlen = len;									<span class="comment">// 初始化长度</span></span><br><span class="line">       s-&gt;top = <span class="number">-1</span>;										<span class="comment">// top 初始值为 -1,表示空栈</span></span><br><span class="line">       <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="3122-顺序栈基本操作"><a class="markdownIt-Anchor" href="#3122-顺序栈基本操作"></a> 3.1.2.2 顺序栈基本操作</h5>
<p>基于栈结构的特点，在实际应用中，通常只会对栈执行以下两种操作：</p>
<ul>
<li>向栈中添加元素，此过程被称为 <strong>“进栈”</strong> （<strong>入栈或压栈</strong>）；</li>
<li>从栈中提取出指定元素，此过程被称为 <strong>“出栈”</strong> （或弹栈）；</li>
</ul>
<br>
<h6 id="31221-顺序栈入栈"><a class="markdownIt-Anchor" href="#31221-顺序栈入栈"></a> 3.1.2.2.1 顺序栈入栈</h6>
<blockquote>
<p>入栈操作很简单，只需要先将<code>top</code>加1，然后将元素放入数组即可。特别要注意检查此时<strong>栈是否已满。</strong></p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/63079bb416f2c2beb173adc1.png" alt="img" /></p>
<br>
<p><mark>代码实现:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	顺序栈入栈</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :被操作的栈</span></span><br><span class="line"><span class="comment">  * @param[in]  value :压栈元素</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0;失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_push</span><span class="params">(sqstack * s, <span class="type">data_t</span> value)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(s == <span class="literal">NULL</span>)</span><br><span class="line">       &#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;stack is null&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">    	<span class="comment">/* 判断栈是否已满 */</span></span><br><span class="line">        <span class="keyword">if</span>(s-&gt;top == s-&gt;maxlen - <span class="number">1</span>)</span><br><span class="line">        &#123;  </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;stack is full&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       s-&gt;top++;					<span class="comment">// 栈顶top +1</span></span><br><span class="line">       s-&gt;data[s-&gt;top] = value;		<span class="comment">// 元素放入数组</span></span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="31222-顺序栈出栈"><a class="markdownIt-Anchor" href="#31222-顺序栈出栈"></a> 3.1.2.2.2 顺序栈出栈</h6>
<blockquote>
<p>出栈操作: 先访问元素，然后将top减1</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	顺序栈出栈</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :被操作的栈</span></span><br><span class="line"><span class="comment">  * @param[in]  *value :返回栈顶元素</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0;失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_pop</span><span class="params">(sqstack * s , <span class="type">data_t</span> *value)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (s == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;stack is null\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">/* 判断栈是否为空 */</span></span><br><span class="line">    <span class="keyword">if</span>(stack_empty(s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    &#125;</span><br><span class="line">	s-&gt;top--;						<span class="comment">// top减1</span></span><br><span class="line">    *value = s-&gt;data[s-&gt;top];		<span class="comment">// 返回栈顶元素</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;		</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="3123-其他操作"><a class="markdownIt-Anchor" href="#3123-其他操作"></a> 3.1.2.3 其他操作</h5>
<h6 id="31231-访问栈顶元素"><a class="markdownIt-Anchor" href="#31231-访问栈顶元素"></a> 3.1.2.3.1 访问栈顶元素</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	顺序栈返回栈顶元素</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :被操作的栈</span></span><br><span class="line"><span class="comment">  * @param[in]  *value :返回栈顶元素</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0;失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_top</span><span class="params">(sqstack * s , <span class="type">data_t</span> *value)</span></span><br><span class="line">&#123;</span><br><span class="line">   	<span class="keyword">if</span> (s == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;stack is null\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">     <span class="comment">/* 判断栈是否为空 */</span></span><br><span class="line">    <span class="keyword">if</span>(stack_empty(s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    &#125;</span><br><span class="line">    *value = s-&gt;data[s-&gt;top];		<span class="comment">// 返回栈顶元素</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="31232-判断栈是否满"><a class="markdownIt-Anchor" href="#31232-判断栈是否满"></a> 3.1.2.3.2 判断栈是否满</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	判断栈是否满</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :被操作的栈</span></span><br><span class="line"><span class="comment">  * @retval     已满返回1;未满返回0</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_full</span><span class="params">(sqstack *s)</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">if</span> (s == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;stack is null\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">return</span> (s-&gt;top == s-&gt;maxlen - <span class="number">1</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h6 id="31233-判断栈是否为空"><a class="markdownIt-Anchor" href="#31233-判断栈是否为空"></a> 3.1.2.3.3 判断栈是否为空</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	判断栈是否空</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :被操作的栈</span></span><br><span class="line"><span class="comment">  * @retval     空返回1;非空返回0</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_empty</span><span class="params">(sqstack *s)</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">if</span> (s == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;stack is null\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">   <span class="keyword">return</span> (s-&gt;top == <span class="number">-1</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h4 id="313-链式栈"><a class="markdownIt-Anchor" href="#313-链式栈"></a> 3.1.3 链式栈</h4>
<p><strong>链栈:</strong> 可以使用<strong>单链表</strong>结构实现栈， 将之称之为 <strong>链栈</strong></p>
<blockquote>
<p>链式栈可以动态扩容，基本没有长度限制（受限于内存）。注意:在入栈以及出栈的时候需要<strong>申请或者释放内存</strong>。</p>
</blockquote>
<br>
<p><strong>特点:</strong></p>
<ul>
<li>要求<strong>每个元素</strong>都要配套一个<strong>指向下个结点的指针域</strong></li>
<li>增大了内存开销，但好处是栈的<strong>长度无限</strong></li>
</ul>
<br>
<hr />
<h5 id="3131-链栈定义"><a class="markdownIt-Anchor" href="#3131-链栈定义"></a> 3.1.3.1 链栈定义</h5>
<blockquote>
<p>插入操作和删除操作均在<strong>链表头部</strong>进行，链表尾部就是栈底，<strong>栈顶指针就是头指针</strong>。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/63079bba16f2c2beb173b038.png" alt="img" /></p>
<br>
<p><mark>栈结构定义:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> <span class="type">data_t</span>;			<span class="comment">//定义栈中数据元素的数据类型,此处为int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackInfo</span>		// 结点类型定义</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">data_t</span> value;					<span class="comment">// 记录栈顶位置</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">StackInfo</span> *<span class="title">next</span>;</span>		<span class="comment">// 指向栈的下一个元素</span></span><br><span class="line">&#125;StackInfo_st;</span><br></pre></td></tr></table></figure>
<br>
<p><mark>链栈创建:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	顺序栈创建</span></span><br><span class="line"><span class="comment">  * @param[in]  none</span></span><br><span class="line"><span class="comment">  * @retval     成功返回创建后的栈</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">StackInfo_st *<span class="title function_">stack_create</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">        StackInfo_st *s = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(StackInfo_st));		<span class="comment">// 分配头结点内存;</span></span><br><span class="line">        </span><br><span class="line">    	<span class="comment">/* 分配失败 */</span></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;malloc failed&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    	<span class="comment">/* 初始化 */</span></span><br><span class="line">        s-&gt;value = <span class="number">0</span>;			</span><br><span class="line">        s-&gt;next = <span class="literal">NULL</span>;		<span class="comment">// stack-next为栈顶指针</span></span><br><span class="line">        <span class="keyword">return</span> s;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="3132-链栈基本操作"><a class="markdownIt-Anchor" href="#3132-链栈基本操作"></a> 3.1.3.2 链栈基本操作</h5>
<h6 id="31321-链栈入栈"><a class="markdownIt-Anchor" href="#31321-链栈入栈"></a> 3.1.3.2.1 链栈入栈</h6>
<blockquote>
<p>入栈只需要为新的元素申请内存空间，并将栈顶指针指向新的节点即可。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/63079bbe16f2c2beb173b239.png" alt="image-20220823212616414" /></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	链栈入栈</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :头结点</span></span><br><span class="line"><span class="comment">  * @param[in]  value :压栈元素</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0;失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_push</span><span class="params">(StackInfo_st * s, <span class="type">data_t</span> value)</span></span><br><span class="line">&#123;</span><br><span class="line">    StackInfo_st *temp = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(StackInfo_st));			<span class="comment">// 新的元素结点</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span> == temp)</span><br><span class="line">    &#123;</span><br><span class="line">     	<span class="built_in">printf</span>(<span class="string">&quot;malloc failed\n&quot;</span>);</span><br><span class="line">      	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    temp-&gt;value = value;</span><br><span class="line">    temp-&gt;next = s-&gt;next;			<span class="comment">// 将新的节点添加s-&gt;next前，使得s-&gt;next永远指向栈顶</span></span><br><span class="line">    s-&gt;next = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="31322-链栈出栈"><a class="markdownIt-Anchor" href="#31322-链栈出栈"></a> 3.1.3.2.2 链栈出栈</h6>
<blockquote>
<p>出栈时，将栈顶指针指向下下个节点，返回元素值，并释放栈顶指针下个节点的内存。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	链栈出栈</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :头结点</span></span><br><span class="line"><span class="comment">  * @param[in]  value :出栈元素</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0;失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_pop</span><span class="params">(StackInfo_st *s,<span class="type">data_t</span> *value)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*首先判断栈是否为空*/</span></span><br><span class="line">    <span class="keyword">if</span>(stack_is_empty(s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*找出栈顶元素*/</span></span><br><span class="line">    *value = s-&gt;next-&gt;value;				<span class="comment">// 出栈元素</span></span><br><span class="line">    StackInfo_st *temp = s-&gt;next;				</span><br><span class="line">    s-&gt;next = s-&gt;next-&gt;next;				<span class="comment">// 栈顶指针指向下下个元素</span></span><br><span class="line">    	</span><br><span class="line">    <span class="comment">/*释放栈顶节点内存*/</span></span><br><span class="line">    <span class="built_in">free</span>(temp);</span><br><span class="line">    temp = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="3133-其他操作"><a class="markdownIt-Anchor" href="#3133-其他操作"></a> 3.1.3.3 其他操作</h5>
<h6 id="31331-访问栈顶元素"><a class="markdownIt-Anchor" href="#31331-访问栈顶元素"></a> 3.1.3.3.1 访问栈顶元素</h6>
<blockquote>
<p>访问栈顶元素只需要返回栈顶指针指向节点的元素值即可。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	链栈访问栈顶元素</span></span><br><span class="line"><span class="comment">  * @param[in]  s	  :头结点</span></span><br><span class="line"><span class="comment">  * @param[in]  value :用于返回栈顶元素</span></span><br><span class="line"><span class="comment">  * @retval     成功返回0;失败返回-1</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_top</span><span class="params">(StackInfo_st *s,<span class="type">data_t</span> *value)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*首先判断栈是否为空*/</span></span><br><span class="line">    <span class="keyword">if</span>(stack_is_empty(s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    *value = s-&gt;next-&gt;value;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="31332-判断栈是否为空"><a class="markdownIt-Anchor" href="#31332-判断栈是否为空"></a> 3.1.3.3.2 判断栈是否为空</h6>
<blockquote>
<p>判断栈顶指针是否为空即可。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*判断栈是否为空，空返回1，未空返回0*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">stack_is_empty</span><span class="params">(StackInfo_st *s)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span>(s == <span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">/*栈顶指针为空，则栈为空*/</span></span><br><span class="line">   <span class="keyword">return</span> (s-&gt;next == <span class="literal">NULL</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<hr />
<br>
<h3 id="32-队列"><a class="markdownIt-Anchor" href="#32-队列"></a> 3.2 队列</h3>
<h4 id="321-队列的概念"><a class="markdownIt-Anchor" href="#321-队列的概念"></a> 3.2.1 队列的概念</h4>
<br>
<p><mark><strong>定义:</strong></mark> <strong>队列</strong>是只允许<strong>在一端</strong>进行<strong>插入操作</strong>，而在<strong>另一端</strong>进行<strong>删除操作</strong>的<strong>线性表</strong></p>
<br>
<p><img src="https://pic.imgdb.cn/item/63079ca416f2c2beb1742c1b.gif" alt="队列存储结构" /></p>
<br>
<p><mark><strong>特点:</strong></mark></p>
<ul>
<li><strong>队列</strong> 是一种 <strong>先进先出（FIFO）</strong> 的线性表</li>
<li><strong>对头：<strong>允许</strong>删除</strong>的一端称为对头</li>
<li><strong>队尾：</strong> 允许<strong>插入</strong>的一端称为队尾</li>
<li><strong>空队:</strong> 当线性表中没有元素时，成为<strong>空队</strong></li>
</ul>
<br>
<p><strong><mark>队列的常规操作:</mark></strong></p>
<ul>
<li>创建队列</li>
<li>清空队列</li>
<li>判断队列空</li>
<li>判断队列满</li>
<li>入队</li>
<li>出队</li>
</ul>
<br>
<p><strong><mark>队列储存结构:</mark></strong></p>
<ul>
<li><strong>顺序队列：<strong>在</strong>顺序表</strong>的基础上实现的队列结构；</li>
<li><strong>链队列：<strong>在</strong>链表</strong>的基础上实现的队列结构；</li>
</ul>
<blockquote>
<p>两者的区别仅是顺序表和链表的区别，即在实际的物理空间中，数据集中存储的队列是顺序队列，分散存储的队列是链队列。</p>
</blockquote>
<br>
<p><strong><mark>队列实现方式:</mark></strong></p>
<ul>
<li>
<p><strong>静态数组</strong>，容量固定，操作简便，效率高</p>
</li>
<li>
<p><strong>动态数组</strong>，容量可自定义，操作简便，因为涉及内存的申请与释放，因此实现比静态数组稍微复杂一点点</p>
</li>
<li>
<p><strong>链表</strong>，容量理论上只受限于内存，实现也较为复杂</p>
<br>
</li>
</ul>
<hr />
<br>
<h4 id="322-顺序队列"><a class="markdownIt-Anchor" href="#322-顺序队列"></a> 3.2.2 顺序队列</h4>
<p><strong>顺序队列实现思路:</strong></p>
<ul>
<li>当有数据元素<strong>进队列</strong>时，对应的实现操作是将其存储在指针 <code>rear</code>(尾指针) 指向的数组位置，然后 <code>rear+1</code>；</li>
<li>当需要队头元素<strong>出队</strong>时，仅需做 <code>front+1</code> (头指针) 操作</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63079bc316f2c2beb173b410.png" alt="image-20220825214743180" /></p>
<blockquote>
<p>顺序队列在数据不断地进队出队过程中，在顺序表中的位置不断后移; 导致空间浪费或数组溢出等问题.</p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5> 因此：</font>  通常在设计队列时,会使用更为优秀的结构—-<mark>循环队列</mark></p>
<br>
<hr />
<br>
<h5 id="3221-循环队列"><a class="markdownIt-Anchor" href="#3221-循环队列"></a> 3.2.2.1 循环队列</h5>
<p><strong>循环队列实现思路:</strong></p>
<ul>
<li>就是给定我们队列的大小范围;</li>
<li>在原有队列的基础上，只要队列的后方满了，就从这个队列的前面开始进行插入，以达到重复利用空间的效果</li>
</ul>
<br>
<p><img src="https://pic.imgdb.cn/item/63079bc716f2c2beb173b612.png" alt="image-20220825215900928" /></p>
<p><font face="华文彩云" color=red size=5> 特别注意：</font></p>
<ul>
<li>其不是一个真正的环，循环队列依旧是<strong>单线性</strong>的。</li>
<li></li>
</ul>
<br>
<h5 id="3222-循环队列结构"><a class="markdownIt-Anchor" href="#3222-循环队列结构"></a> 3.2.2.2 循环队列结构</h5>
<br>
<p><img src="https://pic.imgdb.cn/item/63079bcc16f2c2beb173b801.png" alt="image-20220825220906512" /></p>
<ul>
<li><code>data</code>表示一个数据域</li>
<li><code>rear</code>代表尾指针，入队时移动。</li>
<li><code>front</code>代表头指针，出队时移动。</li>
</ul>
<br>
<p><mark>循环队列结构:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> DataType;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_SIZE 10;</span></span><br><span class="line"><span class="comment">/*定义队列结构*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">QueueInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> front; 			<span class="comment">//队头位置</span></span><br><span class="line">    <span class="type">int</span> rear;  			<span class="comment">//队尾位置</span></span><br><span class="line">    DataType queueArr[MAX_SIZE]; <span class="comment">//队列数组</span></span><br><span class="line"></span><br><span class="line">&#125;QueueInfo;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="3223-循环队列操作"><a class="markdownIt-Anchor" href="#3223-循环队列操作"></a> 3.2.2.3 循环队列操作</h5>
<h6 id="32231-循环队列创建"><a class="markdownIt-Anchor" href="#32231-循环队列创建"></a> 3.2.2.3.1 循环队列创建</h6>
<blockquote>
<p>初始化循环队列</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief         	循环队列的初始化</span></span><br><span class="line"><span class="comment">  * @param[in]      pfifo: 将循环缓冲区初始化</span></span><br><span class="line"><span class="comment">  * @param[in]      size: 缓冲区的大小</span></span><br><span class="line"><span class="comment">  * @retval         成功返回0</span></span><br><span class="line"><span class="comment">  * @attention</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">queue_init</span><span class="params">(QueueInfo *pfifo,  <span class="type">int</span> size)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pfifo) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pfifo-&gt;front = <span class="number">0</span>;</span><br><span class="line">    pfifo-&gt;rear = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="32232-循环队列入列"><a class="markdownIt-Anchor" href="#32232-循环队列入列"></a> 3.2.2.3.2 循环队列入列</h6>
<blockquote>
<p>记得判断队列是否已满, 同时如果rear超过size,则直接将其从a[0]重新开始存储</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief          循环队列入列</span></span><br><span class="line"><span class="comment">  * @param[in]      queue: 操作队列</span></span><br><span class="line"><span class="comment">  * @param[in]      value: 入列元素</span></span><br><span class="line"><span class="comment">  * @retval         成功返回0</span></span><br><span class="line"><span class="comment">  * @attention</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">queue_insert</span><span class="params">(QueueInfo *<span class="built_in">queue</span>,DataType value)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 判断队列是否满 */</span></span><br><span class="line">   <span class="keyword">if</span>(queue_is_full(<span class="built_in">queue</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">queue</span>-&gt;rear = (<span class="built_in">queue</span>-&gt;rear + <span class="number">1</span>) % MAX_SIZE;			<span class="comment">// rear超过size,则直接将其从a[0]重新开始存储</span></span><br><span class="line">    <span class="built_in">queue</span>-&gt;queueArr[<span class="built_in">queue</span>-&gt;rear] = value;				<span class="comment">// 入列</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;insert %d  to %d\n&quot;</span>,value,<span class="built_in">queue</span>-&gt;rear);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="32233-循环队列出列"><a class="markdownIt-Anchor" href="#32233-循环队列出列"></a> 3.2.2.3.3 循环队列出列</h6>
<blockquote>
<p>出列判断队列是否为空 , 同时 front指针+1后超过size,则直接将其从a[0]重新开始存储</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief          循环队列出列</span></span><br><span class="line"><span class="comment">  * @param[in]      queue: 操作队列</span></span><br><span class="line"><span class="comment">  * @param[in]      value: 出列元素</span></span><br><span class="line"><span class="comment">  * @retval         成功返回0</span></span><br><span class="line"><span class="comment">  * @attention</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">queue_insert</span><span class="params">(QueueInfo *<span class="built_in">queue</span>,DataType *value)</span></span><br><span class="line">&#123;	</span><br><span class="line">    <span class="comment">/* 判断队列是否为空 */</span></span><br><span class="line">    <span class="keyword">if</span>(queue_is_empty(<span class="built_in">queue</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">    *value = <span class="built_in">queue</span>-&gt;queueArr[<span class="built_in">queue</span>-&gt;front];				<span class="comment">// 返回出列元素值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;get  value from front %d  is %d\n&quot;</span>,<span class="built_in">queue</span>-&gt;front,*value);</span><br><span class="line">    <span class="built_in">queue</span>-&gt;front = (<span class="built_in">queue</span>-&gt;front + <span class="number">1</span>) % MAX_SIZE;		<span class="comment">// 出列</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="32234-判断循环队列是否已满"><a class="markdownIt-Anchor" href="#32234-判断循环队列是否已满"></a> 3.2.2.3.4 判断循环队列是否已满</h6>
<blockquote>
<p>如果rear+1和front重合，则表示数组已满</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief           判断循环队列是否已满</span></span><br><span class="line"><span class="comment">  * @param[in]      queue: 操作队列</span></span><br><span class="line"><span class="comment">  * @retval         已满返回1,未满返回0</span></span><br><span class="line"><span class="comment">  * @attention</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">queue_is_full</span><span class="params">(QueueInfo *<span class="built_in">queue</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="built_in">queue</span>-&gt;rear + <span class="number">1</span>) % MAX_SIZE == <span class="built_in">queue</span>-&gt;front)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;queue is full\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="32235-判断循环队列是否为空"><a class="markdownIt-Anchor" href="#32235-判断循环队列是否为空"></a> 3.2.2.3.5 判断循环队列是否为空</h6>
<blockquote>
<p>如果<code>rear</code>==<code>front</code> 表示队列为空</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief           判断循环队列是否为空</span></span><br><span class="line"><span class="comment">  * @param[in]      queue: 操作队列</span></span><br><span class="line"><span class="comment">  * @retval         空返回1,非空返回0</span></span><br><span class="line"><span class="comment">  * @attention</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">queue_is_empty</span><span class="params">(QueueInfo *<span class="built_in">queue</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (<span class="built_in">queue</span>-&gt;front == <span class="built_in">queue</span>-&gt;rear ? <span class="number">1</span>: <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h6 id="32236-使用示例"><a class="markdownIt-Anchor" href="#32236-使用示例"></a> 3.2.2.3.6 使用示例</h6>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">/*队列初始化*/</span></span><br><span class="line">    QueueInfo <span class="built_in">queue</span>;</span><br><span class="line">   	<span class="built_in">memset</span>(&amp;<span class="built_in">queue</span>,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="built_in">queue</span>));			<span class="comment">// 数组初始化为0</span></span><br><span class="line">    <span class="built_in">queue</span>.front = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">queue</span>.rear = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">/*入队6个数据，最后两个入队失败*/</span></span><br><span class="line">    queue_insert(&amp;<span class="built_in">queue</span>,<span class="number">5</span>);</span><br><span class="line">    queue_insert(&amp;<span class="built_in">queue</span>,<span class="number">4</span>);</span><br><span class="line">    queue_insert(&amp;<span class="built_in">queue</span>,<span class="number">3</span>);</span><br><span class="line">    queue_insert(&amp;<span class="built_in">queue</span>,<span class="number">2</span>);</span><br><span class="line">    queue_insert(&amp;<span class="built_in">queue</span>,<span class="number">1</span>);</span><br><span class="line">    queue_insert(&amp;<span class="built_in">queue</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*出队6个数据，最后两个出队失败*/</span></span><br><span class="line">    DataType a = <span class="number">0</span>;</span><br><span class="line">    queue_delete(&amp;<span class="built_in">queue</span>,&amp;a);</span><br><span class="line">    queue_delete(&amp;<span class="built_in">queue</span>,&amp;a);</span><br><span class="line">    queue_delete(&amp;<span class="built_in">queue</span>,&amp;a);</span><br><span class="line">    queue_delete(&amp;<span class="built_in">queue</span>,&amp;a);</span><br><span class="line">    queue_delete(&amp;<span class="built_in">queue</span>,&amp;a);</span><br><span class="line">    queue_delete(&amp;<span class="built_in">queue</span>,&amp;a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><mark>运行结果:</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">insert <span class="number">5</span>  to <span class="number">1</span></span><br><span class="line">insert <span class="number">4</span>  to <span class="number">2</span></span><br><span class="line">insert <span class="number">3</span>  to <span class="number">3</span></span><br><span class="line">insert <span class="number">2</span>  to <span class="number">4</span></span><br><span class="line"><span class="built_in">queue</span> is full</span><br><span class="line"><span class="built_in">queue</span> is full</span><br><span class="line">get  value from front <span class="number">1</span>  is <span class="number">5</span></span><br><span class="line">get  value from front <span class="number">2</span>  is <span class="number">4</span></span><br><span class="line">get  value from front <span class="number">3</span>  is <span class="number">3</span></span><br><span class="line">get  value from front <span class="number">4</span>  is <span class="number">2</span></span><br><span class="line"><span class="built_in">queue</span> is empty</span><br><span class="line"><span class="built_in">queue</span> is empty</span><br></pre></td></tr></table></figure>
<hr />
<br>
<h4 id="323-队列使用总结"><a class="markdownIt-Anchor" href="#323-队列使用总结"></a> 3.2.3 队列使用总结</h4>
<br>
<ul>
<li>队列的实现相对比栈复杂一些,因为它需要考虑队空和对满的区别，以及考虑数据搬移的性能影响.</li>
<li>一般使用队列都是使用循环队列,同时由于循环对列给定了数据范围的大小，则不需要使用链式的动态创建方法了</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5> 使用场景：</font></p>
<ul>
<li>一般在嵌入式系统中,环形队列的使用是比较多的</li>
<li>可以用于配合<code>DMA</code>接收串口数据、<code>can</code>的发送队列等</li>
<li>只要是涉及<strong>频繁数据收发</strong>的都可以用的上</li>
</ul>
<br>
<p>(👇 实现过程可以参这篇文章)</p>
<p><a href="https://blog.csdn.net/K_O_R_K/article/details/120535857?spm=1001.2014.3001.5502">stm32 高效串口收发</a></p>
<br>
<hr />
<br>
<h2 id="最后的话"><a class="markdownIt-Anchor" href="#最后的话"></a> 最后的话</h2>
<p><em>因为目前个人水平还比较低，平时接触和用到的都些比较基础的，暂时先对平时常用到的进行一个复兴；后续再慢慢重新复习后续内容</em></p>
<hr />
<br>
<h2 id="参考链接"><a class="markdownIt-Anchor" href="#参考链接"></a> 参考链接</h2>
<p><a href="http://c.biancheng.net/data_structure/intro/">c语言数据结构</a></p>
<p><a href="https://acuity.blog.csdn.net/article/details/108180545">静态链表操作详解及C语言实现</a></p>
<p><a href="https://www.dotcpp.com/course/ds/">数据结构</a></p>
<p><a href="https://developer.aliyun.com/article/890230#slide-2">【从零开始的嵌入式生活】数据结构4——栈与队列（1）</a></p>
<p><a href="https://blog.csdn.net/K_O_R_K/article/details/120535857?spm=1001.2014.3001.5502">stm32 高效串口收发</a></p>
<p>《嵌入式系统软件设计中的数据结构》</p>
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>数据结构</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 学习笔记</title>
    <url>/2023/04/08/C++%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="c学习笔记"><a class="markdownIt-Anchor" href="#c学习笔记"></a> C++学习笔记</h1>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.8.7」</em>   最后补充<br />
<br><br />
<strong>author：</strong>  <em>Y.Z.T.</em><br />
<br></p>
<p><strong>摘要：</strong>  <em>自己在C++学习时做的笔记，随便记录一下</em></p>
<p><strong>简介：</strong> <em>其实就是学习《C++ Primer Plus》的读书笔记，因为目前开发还是主要用C语言，部分感觉不常用的特性，仅简单记录或不记录</em></p>
</blockquote>
<span id="more"></span>
<hr />
<br>
<br>
<hr />
<h3 id="1-基础部分"><a class="markdownIt-Anchor" href="#1-基础部分"></a> 1. 基础部分</h3>
<h4 id="11-std"><a class="markdownIt-Anchor" href="#11-std"></a> 1.1 std::</h4>
<p>作用域解析符（::）；</p>
<p>一般在调用c++标准库的时候，要写上std</p>
<hr />
<h4 id="12-cout打印变量"><a class="markdownIt-Anchor" href="#12-cout打印变量"></a> 1.2 cout打印变量</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout &lt;&lt; carrots;</span><br></pre></td></tr></table></figure>
<p>cout能智能根据其后的数据类型相应调整其行为，是一个运算符重载的例子。</p>
<h5 id="121-cout与printf"><a class="markdownIt-Anchor" href="#121-cout与printf"></a> 1.2.1 cout与printf（）</h5>
<p><img src="https://pic.imgdb.cn/item/62f2818216f2c2beb18c5171.png" alt="image-20220721220644065" /></p>
<hr />
<h4 id="13-cin输入语句"><a class="markdownIt-Anchor" href="#13-cin输入语句"></a> 1.3 cin输入语句</h4>
<p><strong>cin是与cout对应的用于输入的对象</strong></p>
<p><img src="https://pic.imgdb.cn/item/62f2818716f2c2beb18c7043.png" alt="image-20220721221903373" /></p>
<hr />
<h4 id="14-类简介"><a class="markdownIt-Anchor" href="#14-类简介"></a> 1.4 类简介</h4>
<p><img src="https://pic.imgdb.cn/item/62f2819616f2c2beb18cc00b.png" alt="image-20220721223532560" /></p>
<hr />
<h4 id="15-位与字节"><a class="markdownIt-Anchor" href="#15-位与字节"></a> 1.5 位与字节</h4>
<p><img src="https://pic.imgdb.cn/item/62f2819916f2c2beb18cd74c.png" alt="image-20220721230055905" /></p>
<hr />
<h4 id="16-数据类型长度"><a class="markdownIt-Anchor" href="#16-数据类型长度"></a> 1.6  数据类型长度</h4>
<p>short、int和long类型都表示整型值，存储空间的大小不同。一般，short类型为半个机器字长（word）长，int类型为一个机器字长，而long类型为一个或两个机器字长（在32位机器中int类型和long类型通常字长是相同的）。</p>
<table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>16位系统/字节</strong></th>
<th><strong>32位系统/字节</strong></th>
<th><strong>64位系统/字节</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>char</strong></td>
<td><strong>1</strong></td>
<td><strong>1</strong></td>
<td><strong>1</strong></td>
</tr>
<tr>
<td><strong>char*</strong></td>
<td><strong>2</strong></td>
<td><strong>4</strong></td>
<td><strong>8</strong></td>
</tr>
<tr>
<td><strong>short</strong></td>
<td><strong>2</strong></td>
<td><strong>2</strong></td>
<td><strong>2</strong></td>
</tr>
<tr>
<td><strong>int</strong></td>
<td><strong>2</strong></td>
<td><strong>4</strong></td>
<td><strong>4</strong></td>
</tr>
<tr>
<td><strong>long</strong></td>
<td><strong>4</strong></td>
<td><strong>4</strong></td>
<td><strong>8</strong></td>
</tr>
<tr>
<td><strong>long long</strong></td>
<td><strong>8</strong></td>
<td><strong>8</strong></td>
<td><strong>8</strong></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>说明</th>
<th>32位字节数</th>
<th>64位字节数</th>
<th>取值范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>bool</td>
<td>布尔型</td>
<td>1</td>
<td>1</td>
<td>true，false</td>
</tr>
<tr>
<td>char</td>
<td>字符型</td>
<td>1</td>
<td>1</td>
<td>-128~127</td>
</tr>
<tr>
<td>unsigned char</td>
<td>无符号字符型</td>
<td>1</td>
<td>1</td>
<td>0~255</td>
</tr>
<tr>
<td>short</td>
<td>短整型</td>
<td>2</td>
<td>2</td>
<td>-32768~32767</td>
</tr>
<tr>
<td>unsigned short</td>
<td>无符号短整型</td>
<td>2</td>
<td>2</td>
<td>0~65535</td>
</tr>
<tr>
<td>int</td>
<td>整型</td>
<td>4</td>
<td>4</td>
<td>-2147483648~2147483647</td>
</tr>
<tr>
<td>unsigned int</td>
<td>无符号整型</td>
<td>4</td>
<td>4</td>
<td>0~4294967295</td>
</tr>
<tr>
<td>long</td>
<td>长整型</td>
<td>4</td>
<td>8</td>
<td>–</td>
</tr>
<tr>
<td>unsigned long</td>
<td>无符号长整型</td>
<td>4</td>
<td>8</td>
<td>–</td>
</tr>
<tr>
<td>long long</td>
<td>长整型</td>
<td>8</td>
<td>8</td>
<td>-2<sup>64</sup> ~ 2<sup>64</sup> -1</td>
</tr>
<tr>
<td><strong>float</strong></td>
<td><strong>单精度浮点数</strong></td>
<td><strong>4</strong></td>
<td><strong>4</strong></td>
<td>范围-2<sup>128</sup>~2<sup>128</sup> 精度为6~7位有效数字</td>
</tr>
<tr>
<td><strong>double</strong></td>
<td><strong>双精度浮点数</strong></td>
<td><strong>8</strong></td>
<td><strong>8</strong></td>
<td>范围-2<sup>1024</sup>~2<sup>1024</sup> 精度为15~16位</td>
</tr>
<tr>
<td>long double</td>
<td>扩展精度浮点数</td>
<td>8</td>
<td>8</td>
<td>范围-2<sup>1024</sup>~2<sup>1024</sup> 精度为15~16位</td>
</tr>
<tr>
<td>*</td>
<td>地址</td>
<td>4</td>
<td>8</td>
<td>–</td>
</tr>
</tbody>
</table>
<p><strong>2的：</strong></p>
<blockquote>
<p><strong>8次方：</strong> 256</p>
<p><strong>16次方：</strong> 65536</p>
<p><strong>32次方：</strong> 4 294 967 296</p>
</blockquote>
<hr />
<h4 id="17-浮点数的e表示法"><a class="markdownIt-Anchor" href="#17-浮点数的e表示法"></a> 1.7 浮点数的E表示法</h4>
<p><em>用于表达很大或很小的数</em></p>
<p><img src="https://pic.imgdb.cn/item/62f2819f16f2c2beb18cf52c.png" alt="image-20220722143421153" /></p>
<h5 id="171-浮点数在内存中的储存"><a class="markdownIt-Anchor" href="#171-浮点数在内存中的储存"></a> 1.7.1 浮点数在内存中的储存</h5>
<h3 id="1️⃣"><a class="markdownIt-Anchor" href="#1️⃣"></a> 1️⃣</h3>
<p>现在绝大多数计算机使用的浮点数，一般采用的是 IEEE 制定的国际标准，这种标准形式如下图：</p>
<p><img src="https://pic.imgdb.cn/item/6431562e0d2dde5777b163b5.png" alt="img" /></p>
<br>
<p>这三个重要部分的意义如下：</p>
<ul>
<li><strong><em>符号位</em>：</strong> 表示数字是正数还是负数，为 0 表示正数，为 1 表示负数；</li>
<li><strong><em>指数位</em>：</strong> 指定了小数点在数据中的位置，指数可以是负数，也可以是正数，<strong>指数位的长度越长则数值的表达范围就越大</strong>；</li>
<li><strong><em>尾数位</em>：</strong> 小数点右侧的数字，也就是小数部分，比如二进制 1.0011 x 2<sup>-2</sup>，尾数部分就是 <code>0011</code>，而且 <strong>尾数的长度决定了这个数的精度</strong> ，因此如果要表示精度更高的小数，则就要提高尾数位的长度；</li>
</ul>
<br>
<hr />
<h3 id="2️⃣"><a class="markdownIt-Anchor" href="#2️⃣"></a> 2️⃣</h3>
<p>用 <code>32</code> 位来表示的浮点数，则称为<strong>单精度浮点数</strong>，也就是我们编程语言中的 <code>float</code> 变量，而用 <code>64</code> 位来表示的浮点数，称为<strong>双精度浮点数</strong>，也就是 <code>double</code> 变量，它们的结构如下：</p>
<p><img src="https://pic.imgdb.cn/item/643156410d2dde5777b18637.png" alt="img" /></p>
<p>可以看到：</p>
<ul>
<li><code>double</code> 的<strong>尾数部分是 <code>52</code> 位</strong>，float 的<strong>尾数部分是 <code>23</code> 位</strong>，由于同时都带有一个固定隐含位（这个后面会说），所以 double 有 53 个二进制有效位，float 有 24 个二进制有效位，所以所以它们的精度在十进制中分别是 <code>log10(2^53)</code> 约等于 <code>15.95</code> 和 <code>log10(2^24)</code>约等于 <code>7.22</code> 位，因此 double 的有效数字是 <code>15~16</code> 位，float 的有效数字是 <code>7~8</code>位，这些是有效位是包含整数部分和小数部分；</li>
<li>double 的指数部分是 11 位，而 float 的指数位是 8 位，意味着 double 相比 float 能表示更大的数值范围；</li>
</ul>
<br>
<hr />
<h3 id="3️⃣"><a class="markdownIt-Anchor" href="#3️⃣"></a> 3️⃣</h3>
<p><font face="华文彩云" color=red size=6> 例:</font> 我们就以 <code>10.625</code> 作为例子，看看这个数字在 float 里是如何存储的</p>
<p><img src="https://pic.imgdb.cn/item/6431566e0d2dde5777b1c84f.png" alt="img" /></p>
<br>
<ul>
<li>首先，我们计算出 10.625 的二进制小数为 1010.101;</li>
<li>然后<strong>把小数点，移动到第一个有效数字后面</strong>，即将 1010.101 右移 <code>3</code> 位成 <code>1.010101</code>，</li>
<li>右移 3 位就代表 +3，左移 3 位就是 -3，<strong>float 中的「指数位」就跟这里移动的位数有关系，把移动的位数再加上「偏移量」，float 的话偏移量是 127，相加后就是指数位的值了</strong>，即指数位这 8 位存的是 <code>10000010</code>（十进制 130），因此你可以认为「指数位」相当于指明了小数点在数据中的位置。</li>
<li><code>1.010101</code> 这<strong>小数点右侧的数字就是 float 里的「尾数位」</strong>，由于尾数位是 23 位，则后面要补充 0，所以最终尾数位存储的数字是 <code>01010100000000000000000</code>。</li>
</ul>
<br>
<hr />
<h3 id="4️⃣"><a class="markdownIt-Anchor" href="#4️⃣"></a> 4️⃣</h3>
<p>在算指数的时候，为什么要加上偏移量呢？</p>
<p>前面也提到，指数可能是正数，也可能是负数，即指数是有符号的整数，而有符号整数的计算是比无符号整数麻烦的，所以为了减少不必要的麻烦，在实际存储指数的时候，需要把指数转换成<strong>无符号整数</strong>，float 的指数部分是 8 位，IEEE 标准规定单精度浮点的指数取值范围是 <code>-127 ~ +128</code>，于是为了把指数<strong>转换成无符号整数</strong>，就要加个<strong>偏移量</strong>，比如 float 的指数偏移量是 <code>127</code>，这样指数就不会出现负数了。</p>
<br>
<p>比如，指数如果是 8，则实际存储的指数是 8 + 127 = 135，即把 135 转换为二进制之后再存储，而当我们需要计算实际的十进制数的时候，再把指数减去偏移量即可。</p>
<br>
<p>细心的朋友肯定发现，移动后的小数点左侧的有效位（即 1）消失了，它并没有存储到 float 里，这是因为 IEEE 标准规定，二进制浮点数的小数点左侧只能有 1 位，并且还只能是 1，<strong>既然这一位永远都是 1，那就可以不用存起来了</strong>，于是就让 23 位尾数只存储小数部分，电路在计算时会自动把这个 1 加上，这样就可以节约 1 位的空间，尾数就能多存一位小数，相应的精度就更高了一点。</p>
<br>
<p>那么，对于我们在从 float 的二进制浮点数转换成十进制时，要考虑到这个隐含的 1，转换公式如下：</p>
<p><img src="https://pic.imgdb.cn/item/6431567d0d2dde5777b1de06.png" alt="img" /></p>
<p>举个例子，我们把下图这个 float 的数据转换成十进制，过程如下：</p>
<p><img src="https://pic.imgdb.cn/item/643156990d2dde5777b2073f.png" alt="img" /></p>
<table>
<thead>
<tr>
<th style="text-align:left">类型</th>
<th style="text-align:left">符号位</th>
<th style="text-align:left">指数</th>
<th style="text-align:left">尾数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Float</td>
<td style="text-align:left">1位（第31位）</td>
<td style="text-align:left">8位（第23~30位）</td>
<td style="text-align:left">23位（第0~22位）</td>
</tr>
<tr>
<td style="text-align:left">Double</td>
<td style="text-align:left">1位（第63位）</td>
<td style="text-align:left">11位（第52~62位）</td>
<td style="text-align:left">52位（第0~51位）</td>
</tr>
</tbody>
</table>
<hr />
<h4 id="18-string类简介"><a class="markdownIt-Anchor" href="#18-string类简介"></a> 1.8 string类简介</h4>
<p>sring类能让我们像处理普通变量一样处理字符串。</p>
<hr />
<h4 id="19-左值右值"><a class="markdownIt-Anchor" href="#19-左值右值"></a> 1.9 左值/右值</h4>
<p>凡是能对其进行取地址的都是左值*[即能开辟内存空间储存数据数值的]*；不能进行取地址的是右值[如：a+b、10等]。</p>
<hr />
<h4 id="110-类vector简介"><a class="markdownIt-Anchor" href="#110-类vector简介"></a> 1.10 类vector简介</h4>
<p><mark>相当于动态数组</mark></p>
<p><img src="https://pic.imgdb.cn/item/62f281cb16f2c2beb18df007.png" alt="image-20220722171513505" /></p>
<hr />
<h4 id="111-类array简介"><a class="markdownIt-Anchor" href="#111-类array简介"></a> 1.11 类array简介</h4>
<p><mark>静态数组，用栈分配内存</mark></p>
<p><img src="https://pic.imgdb.cn/item/62f281f216f2c2beb18ecad0.png" alt="image-20220722171616347" /></p>
<hr />
<h3 id="2-函数指针"><a class="markdownIt-Anchor" href="#2-函数指针"></a> 2. 函数指针</h3>
<h4 id="21-声明函数指针"><a class="markdownIt-Anchor" href="#21-声明函数指针"></a> 2.1 声明函数指针</h4>
<p>如函数原型为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">pam</span><span class="params">(<span class="type">int</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>则可声明一个函数指针：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> (*pf)(<span class="type">int</span>);</span><br></pre></td></tr></table></figure>
<p><em>[其中double是返回值， int 是特征标； <mark>特征标</mark> 和<mark>返回值</mark>必须与原型相同]</em></p>
<p>这与函数<strong>pam()<strong>的声明相似， 只是将</strong>pam</strong> 替换成了 *<em>（<em>pf）</em></em></p>
<p>[注意： （*pf）也是<mark>函数</mark> ， 而pf则是<mark>函数指针</mark>]。</p>
<p>正确声明pf后 ， 可将对应的函数地址赋给它：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">pf = pam;</span><br></pre></td></tr></table></figure>
<hr />
<h4 id="22-调用函数"><a class="markdownIt-Anchor" href="#22-调用函数"></a> 2.2 调用函数</h4>
<p>将地址赋给函数指针后 ， 直接将（*pf）看作函数名就行：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> x = （*pf）（<span class="number">5</span>）;</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="3-函数指针数组"><a class="markdownIt-Anchor" href="#3-函数指针数组"></a> 3. 函数指针数组</h3>
<p>如果想定义一个包含三个函数指针的数组，可定义如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> *  <span class="title function_">f1</span><span class="params">(<span class="type">const</span> <span class="type">double</span> ar[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">double</span> *  <span class="title function_">f2</span><span class="params">(<span class="type">const</span> <span class="type">double</span> ar[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">double</span> *  <span class="title function_">f3</span><span class="params">(<span class="type">const</span> <span class="type">double</span> ar[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">double</span> *  (*pa[<span class="number">3</span>])（<span class="type">const</span> <span class="type">double</span> *,  <span class="type">int</span>） = &#123;f1, f2, f3&#125;</span><br></pre></td></tr></table></figure>
<p>其中 <em><em>(<em>pa)[i]</em></em>  表示的是数组中的元素 ， 即</em><em>函数指针</em>*。</p>
<h3 id="4-内联函数与宏"><a class="markdownIt-Anchor" href="#4-内联函数与宏"></a> 4. 内联函数与宏</h3>
<h4 id="41-宏与带参宏"><a class="markdownIt-Anchor" href="#41-宏与带参宏"></a> 4.1 宏与带参宏</h4>
<p>宏定义<code>#define</code>  本质是替换，从宏变成最终替换文本的过程称为<mark>宏展开</mark>。</p>
<h4 id="42-带参宏"><a class="markdownIt-Anchor" href="#42-带参宏"></a> 4.2 带参宏</h4>
<p>带参宏的用法与函数调用不完全相同，可能存在部分陷阱。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">define</span> SQUARE(X) X*X</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    x = <span class="number">5</span>;</span><br><span class="line">	SQUARE(x+<span class="number">2</span>);</span><br><span class="line">    SQUARE(++x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>[注意 ：上面两个运行结果分别是 <mark>17</mark> ；<mark>42</mark>]</p>
<h6 id="421-原因如下"><a class="markdownIt-Anchor" href="#421-原因如下"></a> 4.2.1 原因如下：</h6>
<p><code>SQUARE(x+2);</code> 被替换成（5+2 * 5 +2 = 17）</p>
<p><code>SQUARE(++x);</code> 被替换成（++x * ++x = 6*7 =42）</p>
<h6 id="422-总结"><a class="markdownIt-Anchor" href="#422-总结"></a> 4.2.2 总结：</h6>
<ul>
<li>宏起到的作用只是替换，而不提供计算；</li>
<li>宏是在代码处不加任何验证的简单替代</li>
<li>宏不可以在运行时调试</li>
</ul>
<h4 id="43-内联函数"><a class="markdownIt-Anchor" href="#43-内联函数"></a> 4.3  内联函数</h4>
<h5 id="431-定义"><a class="markdownIt-Anchor" href="#431-定义"></a> 4.3.1 定义：</h5>
<p><strong>内联函数可以定义在头文件中，因为内联函数具有内部链接，所以在多个文件中定义同一个内联函数不会产生什么问题</strong></p>
<p>如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="type">double</span> <span class="title function_">square</span><span class="params">(<span class="type">double</span> x)</span>&#123;<span class="keyword">return</span> x*x;&#125;</span><br></pre></td></tr></table></figure>
<hr />
<p>inline是指嵌入代码，就是在调用函数的地方不是跳转，而是把代码直接写到那里去。<strong>对于短小的代码来说，inline可以带来一定的效率提升</strong>，而且和C时代的宏函数相比，inline <strong>更安全可靠</strong>。可是这个是以<strong>增加空间消耗为代价</strong>的。因为内联函数相当于<strong>代码复制</strong>，在运行时，将内联的代码复制上去。</p>
<p>内联函数一般使用情况：</p>
<ul>
<li>一个函数不断被重复调用。</li>
<li>函数只有简单的几行，且函数不包含for、while、switch语句。</li>
</ul>
<p>[一般来说，我们写小程序没有必要定义成inline，但是如果要完成一个工程项目，<mark>当一个简单函数被调用多次时</mark>，则应该考虑用inline。]</p>
<h5 id="432-总结"><a class="markdownIt-Anchor" href="#432-总结"></a> 4.3.2 总结：</h5>
<ul>
<li>宏是在代码处不加任何验证的简单替代，而内联函数是将代码直接插入调用处，而减少了普通函数调用时的资源消耗。</li>
<li>宏不是函数，只是在编译前（编译预处理阶段）将程序中有关字符串替换成宏体。</li>
<li>inline函数是函数，但在编译中不单独产生代码，而是将有关代码嵌入到调用处。</li>
<li>编译器会对内联函数的参数类型做安全检查或自动类型转换（同普通函数），而宏定 义则不会；</li>
</ul>
<h3 id="5-c引用"><a class="markdownIt-Anchor" href="#5-c引用"></a> 5. c++引用</h3>
<p>用作函数参数，会使得函数中的变量名成为调用程序中的变量的别名。称为<mark>引用传递</mark></p>
<p><img src="https://pic.imgdb.cn/item/62f281f916f2c2beb18ef17c.png" alt="image-20220723224049976" /></p>
<p>引用时，两个变量本质上是同样的，<strong>修改其中一个，另一个也会改变。</strong></p>
<h5 id="51-左值引用"><a class="markdownIt-Anchor" href="#51-左值引用"></a> 5.1 <strong>左值引用</strong>:</h5>
<p>只能是引用左值：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> &amp;c = a;</span><br></pre></td></tr></table></figure>
<h5 id="52-常引用"><a class="markdownIt-Anchor" href="#52-常引用"></a> 5.2 <strong>常引用</strong></h5>
<p>能引用右值，但只能用来读取数据而不能用来修改数据：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> &amp;c = (a + b);</span><br></pre></td></tr></table></figure>
<h5 id="53-右值引用"><a class="markdownIt-Anchor" href="#53-右值引用"></a> 5.3 右值引用：</h5>
<p>用于支持移动语义</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> &amp;&amp;x = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> &amp;&amp;y = (a + b);</span><br></pre></td></tr></table></figure>
<h5 id="54-结构体引用"><a class="markdownIt-Anchor" href="#54-结构体引用"></a> 5.4  结构体引用</h5>
<p>引用主要就是用于在<mark>结构</mark>和<mark>类</mark>中应用的:</p>
<ol>
<li>可以将指向该结构的引用作为参数：</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">set_pc</span><span class="params">(free_throws &amp; ft)</span>;</span><br></pre></td></tr></table></figure>
<p>2.如果加入const,这只是使用这些数据 而不进行修改</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">set_pc</span><span class="params">(<span class="type">const</span> free_throws &amp; ft)</span>;</span><br></pre></td></tr></table></figure>
<p>3.返回引用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">free_throws &amp; <span class="title function_">accumulate</span> <span class="params">(free_throws &amp; target , <span class="type">const</span> free_throws &amp; source)</span>;</span><br><span class="line"></span><br><span class="line">free_throws &amp; <span class="title function_">accumulate</span> <span class="params">(free_throws &amp; target , <span class="type">const</span> free_throws &amp; source)</span></span><br><span class="line">&#123;</span><br><span class="line">    target.a += source.a;</span><br><span class="line">    target.m += source.m;</span><br><span class="line">    set_pc(target);</span><br><span class="line">    <span class="keyword">return</span> target;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">display(accumulate(team,one));</span><br></pre></td></tr></table></figure>
<p>将<strong>accumulate（）返回值</strong>作为参数传递给了<strong>display（）</strong>，意味着将<strong>team</strong>传递给了<strong>display（）</strong>，意味着<strong>display（）中的ft</strong>指向<strong>team</strong></p>
<p><mark>等效于：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">accumulate(team,one);</span><br><span class="line">display(team);</span><br></pre></td></tr></table></figure>
<p>[<strong>注意：</strong> <em>返回引用的函数实际上是被引用的变量的别名</em>]</p>
<h5 id="55-类引用"><a class="markdownIt-Anchor" href="#55-类引用"></a> 5.5 类引用</h5>
<p>基类引用可以指向派生类，而<strong>无需强制类型转换</strong> ；（可以定义一个接收基类引用作为参数的函数，调用该函数时，可以将基类对象作为参数，也可以将派生类对象作为参数）</p>
<h5 id="55-何时使用引用参数"><a class="markdownIt-Anchor" href="#55-何时使用引用参数"></a> 5.5 何时使用引用参数</h5>
<p><img src="https://pic.imgdb.cn/item/62f281fe16f2c2beb18f12b4.png" alt="image-20220724155849723" /></p>
<hr />
<h3 id="6-c默认参数"><a class="markdownIt-Anchor" href="#6-c默认参数"></a> 6. c++默认参数</h3>
<p>指在当函数调用中省略了实参时自动使用的一个值；</p>
<p>[ 在设计类时，通过使用默认参数，可以减少要定义的构析函数、方法、及方法重载的数量]；</p>
<p><strong>定义默认值：</strong></p>
<p><img src="https://pic.imgdb.cn/item/62f2820316f2c2beb18f2f59.png" alt="image-20220724160815350" /></p>
<p><img src="https://pic.imgdb.cn/item/62f2820c16f2c2beb18f632d.png" alt="image-20220724165139378" /></p>
<hr />
<h3 id="7-函数重载"><a class="markdownIt-Anchor" href="#7-函数重载"></a> 7. 函数重载</h3>
<p><img src="https://pic.imgdb.cn/item/62f2820916f2c2beb18f537b.png" alt="image-20220724164739037" /></p>
<p><img src="https://pic.imgdb.cn/item/62f2820c16f2c2beb18f632d.png" alt="image-20220724165139378" /></p>
<p><strong>[注意：</strong> <em>编译器会把类型引用和类型本身视为同一个特征标</em>]</p>
<p>如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">cube</span><span class="params">(<span class="type">double</span> x)</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">cube</span><span class="params">(<span class="type">double</span> &amp;x)</span></span><br></pre></td></tr></table></figure>
<p>这两个函数会被视为同样的特征标。</p>
<h5 id="71-何时使用函数重载"><a class="markdownIt-Anchor" href="#71-何时使用函数重载"></a> 7.1 何时使用函数重载</h5>
<p><img src="https://pic.imgdb.cn/item/62f2820f16f2c2beb18f77c9.png" alt="image-20220724172347565" /></p>
<hr />
<h3 id="8-函数模版"><a class="markdownIt-Anchor" href="#8-函数模版"></a> 8. 函数模版</h3>
<p>需要多个对不同类型使用同一种算法的函数时，可使用模版。</p>
<h5 id="81-定义"><a class="markdownIt-Anchor" href="#81-定义"></a> 8.1 定义</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> AnyType&gt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Swap</span><span class="params">(AnyType &amp;a , AnyType &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AnyType AnyType;</span><br><span class="line">    temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/62f2821316f2c2beb18f8c32.png" alt="image-20220724175145943" /></p>
<p><strong>类型名：AnyType 可任意命名</strong></p>
<p>[注意：原型声明时，记得将<code>template &lt;typename AnyType&gt;</code> 带上]</p>
<h5 id="82-注意事项"><a class="markdownIt-Anchor" href="#82-注意事项"></a> 8.2 注意事项：</h5>
<p>编写一个函数，在编译调用后仍会生成多个不同的函数</p>
<p><img src="https://pic.imgdb.cn/item/62f2821716f2c2beb18f9fe6.png" alt="image-20220724180111337" /></p>
<hr />
<h3 id="9-实例化和具体化"><a class="markdownIt-Anchor" href="#9-实例化和具体化"></a> 9. 实例化和具体化</h3>
<p><img src="https://pic.imgdb.cn/item/62f2821a16f2c2beb18fb1bc.png" alt="image-20220724212225673" /></p>
<hr />
<h3 id="10-const-限定符"><a class="markdownIt-Anchor" href="#10-const-限定符"></a> 10. const 限定符</h3>
<p><code>const</code>定义的变量，在初始化之后不可被改变</p>
<h4 id="101-const-和-指针"><a class="markdownIt-Anchor" href="#101-const-和-指针"></a> 10.1 <code>const</code> 和 指针</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> *p1 = &amp;x;        <span class="comment">//错误，p1只是一个普通指针</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p2 = &amp;x;  <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>;   </span><br><span class="line"><span class="type">const</span> *p3 = &amp;y;  <span class="comment">//正确</span></span><br><span class="line">*p3 = <span class="number">2</span>;         <span class="comment">//错误，(const *)  (但y可以改变，可以用于权限管理)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="type">const</span> p4 = &amp;y;       <span class="comment">//正确，p4将一直指向y</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p5 = x;  <span class="comment">//正确，p5是一个指向常量对象的常量指针</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="102-顶层-const"><a class="markdownIt-Anchor" href="#102-顶层-const"></a> 10.2 顶层 const</h4>
<p>如前所述，指针本身是一个对象，它又可以指向另外一个对象。因此， <strong>指针本身是不是常量 以及 指针所指的是不是一个常量 就是两个相互独立的问题。</strong></p>
<ul>
<li>用名词顶层const(top-level const)表示指针本身是个常量</li>
<li>而用名词底层const (low-level const)表示指针所指的对象是一个常量。</li>
</ul>
<p>更一般的，顶层const可以表示任意的对象是常量，这一点对任何数据类型都适用，如<strong>算术类型、类、指针</strong>等。底层const则与<strong>指针和引用</strong>等复合类型的基本类型部分有关。比较特殊的是，指针类型既可以是顶层const也可以是底层const，这一点和其他类型相比区别明显</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> *<span class="type">const</span> p1 = &amp;i;   <span class="comment">//不能改变p1的值, 这是一个顶层const</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ci = <span class="number">42</span>;    <span class="comment">//不能改变ci的值, 这是一个顶层const</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p2 = &amp;ci;  <span class="comment">//允许改变p2的值, 这是一个底层const</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p3 = p2;  <span class="comment">//靠右的const是顶层const, 靠左的是底层const</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> &amp;r = ci;         <span class="comment">//用于声明引用的const都是底层const</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用示例 */</span></span><br><span class="line">i = ci;    <span class="comment">//正确: 拷贝ci的值, ci是一个顶层const,对此操作无影响</span></span><br><span class="line">p2 = p3;   <span class="comment">//正确: p2和p3指向的对象类型相同, p3顶层const的部分不影响</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *p = p3;        <span class="comment">//! 错误: p3包含底层const的定义, 而p没有</span></span><br><span class="line">p2 = p3;            <span class="comment">//正确: p2和p3都是底层const</span></span><br><span class="line">p2 = &amp;i;            <span class="comment">//正确: int*能转换成const int*</span></span><br><span class="line"><span class="type">int</span> &amp;r = ci;        <span class="comment">//! 错误: 普通的int&amp;不能绑定到int常量上</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> &amp;r2 = i;  <span class="comment">//正确: const int&amp;可以绑定到一个普通int上</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="10-3constexpr-变量"><a class="markdownIt-Anchor" href="#10-3constexpr-变量"></a> 10. 3<code>constexpr</code> 变量</h4>
<p>常量表达式(<code>const expression</code>) ，声明为此类型表示此变量一定为<strong>常量</strong>，而且必须用常量初始化</p>
<hr />
<h3 id="11-作用域"><a class="markdownIt-Anchor" href="#11-作用域"></a> 11. 作用域</h3>
<h4 id="111-头文件的内容"><a class="markdownIt-Anchor" href="#111-头文件的内容"></a> 11.1 头文件的内容</h4>
<ul>
<li>函数原型</li>
<li>使用<code>#define</code>和<code>const</code>定义的符号常量</li>
<li>结构声明</li>
<li>类声明</li>
<li>模版声明</li>
<li>内联函数</li>
</ul>
<p>[<mark>注意：</mark> 不要将函数定义和变量声明放在头文件中，容易导致重定义。 除非该函数是<mark>内联函数</mark>]</p>
<h4 id="112-inlcude-中-和-的区别"><a class="markdownIt-Anchor" href="#112-inlcude-中-和-的区别"></a> 11.2 <code>#inlcude</code>  中“ ” 和 &lt; &gt;的区别</h4>
<p><img src="https://pic.imgdb.cn/item/62f2829016f2c2beb19248e8.png" alt="image-20220802175044341" /></p>
<h4 id="113-内存在程序中保留的时间"><a class="markdownIt-Anchor" href="#113-内存在程序中保留的时间"></a> 11.3 内存在程序中保留的时间</h4>
<ul>
<li>自动储存：<strong>局部变量</strong>、<strong>函数参数</strong> 在程序开始执行其所属的函数和代码块时<mark>被创建</mark>， 在执行完函数和代码块时，<mark>内存被释放</mark></li>
<li>静态储存：<strong>全局变量</strong>、<code>staic</code>关键字定义的<strong>局部变量</strong>和<strong>全局变量</strong> 。在整个程序运行过程中<mark>都存在</mark>。</li>
<li>动态存储： 用<code>new</code> 分配的内存会<mark>一直存在</mark>，<mark>直到</mark>使用<code>delete</code> 关键字将其释放。 也称为<strong>堆</strong></li>
</ul>
<h4 id="114-作用域和链接"><a class="markdownIt-Anchor" href="#114-作用域和链接"></a> 11.4 作用域和链接</h4>
<ul>
<li><strong>作用域：</strong> 值在上面范围内能看到这个（ <strong>函数/变量</strong> ），描述了名称在文件的多大范围内可见。</li>
<li><strong>链接性：</strong> 描述了名称在不同单元键的共享</li>
</ul>
<p><strong>局部变量作用域：</strong> 作用域只在定义它的代码块中</p>
<p><strong>全局变量作用域：</strong> 作用域为<mark>定义位置</mark>到文件结尾</p>
<p><strong>自动变量作用域：</strong>  作用域为局部</p>
<p><strong>函数体作用域：</strong>  整个类或整个名称空间，但不能是局部的</p>
<p><strong>[<em>例如：</em></strong>  局部变量和函数形参的 储存持续性为<mark>自动</mark>,作用域为<mark>局部</mark>； 没有<mark>链接性</mark>。 当程序开始执行时，为该变量分配内存，当函数结束时，这些变量会消失。]</p>
<p><font face="华文彩云" color=red size=6> 特别注意：</font></p>
<p><img src="https://pic.imgdb.cn/item/62f2822116f2c2beb18fd9b9.png" alt="image-20220803173542707" /></p>
<hr />
<h4 id="115-静态储存的链接性"><a class="markdownIt-Anchor" href="#115-静态储存的链接性"></a> 11.5 静态储存的链接性</h4>
<h5 id="1151-静态变量的链接性"><a class="markdownIt-Anchor" href="#1151-静态变量的链接性"></a> 11.5.1 静态变量的链接性：</h5>
<ul>
<li><strong>外部链接性：</strong> 可在其他文件中访问</li>
<li><strong>内部链接性：</strong> 只能在当前文件中访问</li>
<li><strong>无链接性：</strong>     只能在当前函数或代码块中访问</li>
</ul>
<p>静态变量的<mark>数量</mark>在程序运行期间是<mark>不变的</mark>， 编译器会分配<mark>固定的内存块</mark>来储存所有的静态变量，这些变量在程序</p>
<p>执行期间<mark>一直存在</mark>。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>;    <span class="comment">// 静态持续变量，连接性为外部</span></span><br><span class="line"></span><br><span class="line">staic <span class="type">int</span> b = <span class="number">0</span>; <span class="comment">// 静态持续变量，连接性为内部</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">funct</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    staic <span class="type">int</span> c = <span class="number">0</span>;		<span class="comment">//静态变量，无链接性</span></span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>;				<span class="comment">// 自动变量，无链接性</span></span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 特别注意：</font> 变量c是储存在<mark>静态数据区</mark>的，会在程序刚开始运行时就完成初始化，<strong>也是唯一的一次初始化</strong>。</p>
<p>即使<code>funct</code>函数没有被执行，c变量也是<strong>留在内存</strong>中的，而变量d则会<strong>消失。</strong></p>
<h5 id="1152-静态变量的初始化特性"><a class="markdownIt-Anchor" href="#1152-静态变量的初始化特性"></a> 11.5.2  静态变量的初始化特性</h5>
<p>所有静态持续变量在初始化时都会被<mark>初始化为0</mark> ，称为<mark>零初始化</mark> 。</p>
<p>在静态数据区，内存中所有的字节默认值都是 0x00，某些时候这一特点可以减少程序员的工作量。比如初始化一个稀疏矩阵，我们可以一个一个地把所有元素都置 0，然后把不是 0 的几个元素赋值。如果定义成静态的，就省去了一开始置 0 的操作。再比如要把一个字符数组当字符串来用，但又觉得每次在字符数组末尾加 <code>\0</code> 太麻烦。如果把字符串定义成静态的，就省去了这个麻烦，因为那里本来就是 <code>\0</code> 。</p>
<h4 id="116-变量储存方式总结"><a class="markdownIt-Anchor" href="#116-变量储存方式总结"></a> 11.6 变量储存方式总结</h4>
<p><img src="https://pic.imgdb.cn/item/62f2822616f2c2beb18ff55f.png" alt="image-20220803181043603" /></p>
<h4 id="117-volatile-限定符"><a class="markdownIt-Anchor" href="#117-volatile-限定符"></a> 11.7 <code>volatile</code> 限定符</h4>
<p><img src="https://pic.imgdb.cn/item/62f2822a16f2c2beb1900f32.png" alt="image-20220803231002719" /></p>
<h4 id="118-c在哪里查找函数"><a class="markdownIt-Anchor" href="#118-c在哪里查找函数"></a> 11.8 C++在哪里查找函数</h4>
<p><img src="https://pic.imgdb.cn/item/62f2822d16f2c2beb19024da.png" alt="image-20220803232557408" /></p>
<h3 id="12-c名称空间"><a class="markdownIt-Anchor" href="#12-c名称空间"></a> 12. C++名称空间</h3>
<h4 id="121-声明区域与作用域"><a class="markdownIt-Anchor" href="#121-声明区域与作用域"></a> 12.1 声明区域与作用域</h4>
<ul>
<li>
<p><strong>声明区域：</strong> 声明区域是可以在其中<mark>进行声明的区域</mark>（如：全局变量 -&gt; 声明区域在所在文件； 局部变量 -&gt; 声</p>
<p>明区域在其所在的代码块）</p>
</li>
<li>
<p><strong>作用域：</strong>  变量<strong>对程序而言可见的范围</strong>称为作用域（变量的作用域<strong>从声明点开始</strong>，到其<strong>声明区域的结尾</strong>，比声明区域小。）</p>
</li>
</ul>
<p><font face="华文彩云" color=red size=5> 特别注意：</font> 变量并非在作用域的任何位置都是可见的。(例如：在函数中定义的局部变量[ 该变量的声明区域</p>
<p>为整个函数]，将隐藏同一文件下的同名全局变量)</p>
<hr />
<h4 id="122-namespace-关键字"><a class="markdownIt-Anchor" href="#122-namespace-关键字"></a> 12.2 <code>namespace</code> 关键字</h4>
<p>通过<code>namespace</code>关键字 来定义一个新的名称空间；</p>
<p>一个名称空间中的名称<strong>不会</strong>与另一个名称空间中的名称<strong>发生冲突</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> Jack</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pail;		<span class="comment">// 变量定义</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Well</span>			<span class="comment">// 结构定义</span></span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">fetch</span><span class="params">()</span></span>;		<span class="comment">// 函数声明</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> Jill</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pail;			<span class="comment">// 变量定义</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Well</span>			<span class="comment">// 结构定义</span></span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">bucket</span><span class="params">(<span class="type">void</span>)</span>	<span class="comment">// 函数定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 特别注意：</font> 名称空间可以是<mark>全局</mark>的，也可以在<mark>另一个名称空间</mark>中； 但<strong>不能</strong>在<mark>代码块</mark>中</p>
<p>除了自定义的名称空间外，还存在一个<mark>全局名称空间</mark>，<mark>全局变量</mark>都位于全局名称空间。</p>
<h4 id="123-访问名称空间中的名称"><a class="markdownIt-Anchor" href="#123-访问名称空间中的名称"></a> 12.3 访问名称空间中的名称</h4>
<h5 id="1231-通过作用域解析运算符"><a class="markdownIt-Anchor" href="#1231-通过作用域解析运算符"></a> 12.3.1 通过作用域解析运算符  <code>::</code></h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Jack :: pail = <span class="number">12</span>;  <span class="comment">// 使用变量</span></span><br><span class="line">Jack :: Well a;		<span class="comment">// 创建结构体变量</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>其中 包含名称空间的名称（如Jack :: pail）称为<mark>限定的名称</mark></li>
<li>未被修饰的名称 （如 pail） 称为<mark>未限定的名称</mark></li>
</ul>
<hr />
<h5 id="1232-using声明和using-编译指令"><a class="markdownIt-Anchor" href="#1232-using声明和using-编译指令"></a> 12.3.2  <code>using</code>声明和<code>using</code> 编译指令</h5>
<ul>
<li>
<p><strong><code>using</code>声明 ：</strong> using声明由<mark>限定的名称</mark>和前面的关键字<mark>using</mark>组成</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Jack :: pail;			<span class="comment">// using声明</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>using 编译指令：</strong> 由<mark>名称空间名</mark>和前面关键字 <mark>using namespace</mark> 组成</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Jack;		<span class="comment">// 让名称空间内的所有名称可用</span></span><br></pre></td></tr></table></figure>
<hr />
<h6 id="12321-using-声明"><a class="markdownIt-Anchor" href="#12321-using-声明"></a> 12.3.2.1 <code>using</code> 声明</h6>
<p><strong>using 声明</strong> 会将特定的名称添加到其所属的声明区域中</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">using</span> Jack :: pail;	  <span class="comment">//  将pail放入本地名称空间</span></span><br><span class="line">    pail = <span class="number">0</span>;			  <span class="comment">//  使用变量pail					</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>main函数</strong>中的 using 声明将 Jack :: pail 中的pail添加到main（）定义的声明区域中。</li>
<li>完成声明后，可用<code>pail</code> <mark>代替</mark><code>Jack :: pail</code> 使用。</li>
<li>如果在函数外面使用<mark>using声明</mark> 会将名称添加到<mark>全局名称</mark>空间中</li>
</ul>
<hr />
<h6 id="12322-using-编译指令"><a class="markdownIt-Anchor" href="#12322-using-编译指令"></a> 12.3.2.2 <code>using</code> 编译指令</h6>
<ul>
<li><code>using</code> 编译指令会使得<strong>所有名称可用</strong>，而不需要使用<strong>作用域解析运算符</strong> 。</li>
<li>在<strong>全局声明区域</strong>使用<code>using</code> 编译指令，会使得该名称空间中的名称<strong>全局可用</strong>。</li>
<li>对应的在<strong>函数中</strong> 使用<code>using</code> 编译指令, 会使得该名称空间中的名称在<strong>该函数</strong>中可用。</li>
</ul>
<hr />
<p><font face="华文彩云" color=red size=5> 特别注意：</font> 使用 <strong><code>using</code> 编译指令</strong> 和 <strong><code>using</code> 声明</strong>  可能会增加名称冲突的可能</p>
<p>例如：</p>
<ol>
<li><strong>使用作用域解析运算符：</strong></li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">jack :: pail = <span class="number">3</span>;</span><br><span class="line">jill :: pail = <span class="number">1</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>[ 变量<code>jack :: pail</code> 和 <code>jill :: pail</code> 是<strong>不同的标识符</strong>，表示<strong>不同的内存单元</strong> 。]</p>
<ol start="2">
<li><strong>使用<code>using声明</code> ：</strong></li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> jack :: pail ;</span><br><span class="line"><span class="keyword">using</span> jill :: pail ;</span><br><span class="line">pail = <span class="number">4</span>;</span><br></pre></td></tr></table></figure>
<p>[  这样会导致名称冲突，导致编译器报错 ]</p>
<hr />
<h5 id="1233-using声明和using-编译指令的区别"><a class="markdownIt-Anchor" href="#1233-using声明和using-编译指令的区别"></a> 12.3.3  <code>using</code>声明和<code>using</code> 编译指令的区别</h5>
<ul>
<li><strong>使用<code>using声明</code></strong>  就像声明了相应的名称一样。</li>
<li><strong><code>using</code> 编译指令</strong> 就像是大量使用作用域解析符。</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/62f2823516f2c2beb1904e16.png" alt="image-20220804235425551" /></p>
<hr />
<h4 id="124-名称空间嵌套"><a class="markdownIt-Anchor" href="#124-名称空间嵌套"></a> 12.4 名称空间嵌套</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> ele</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">namespace</span> fire</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> flame;</span><br><span class="line">		..</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">float</span> water;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里<code>flame</code> 指的是 <code>ele :: fire :: flame</code> ,也可以使用<strong>using编译指令</strong>是内部空间可用：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> ele :: fire ;</span><br></pre></td></tr></table></figure>
<hr />
<h4 id="125-在名称空间内使用using声明和using-编译指令"><a class="markdownIt-Anchor" href="#125-在名称空间内使用using声明和using-编译指令"></a> 12.5 在名称空间内使用<code>using</code>声明和<code>using</code> 编译指令</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> ma</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">using</span> jill :: pail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为<code>jill :: pail</code> <strong>既位于</strong>名称空间 <code>ma</code> 中<strong>也位于</strong> 名称空间 <code>jill</code> 中， 所以</p>
<p><code>jill :: pail</code> <mark>等价</mark>于 <code>ma :: pail</code></p>
<hr />
<h4 id="126-未命名名称空间"><a class="markdownIt-Anchor" href="#126-未命名名称空间"></a> 12.6  未命名名称空间</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> ad;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/62f2823a16f2c2beb1906d96.png" alt="image-20220805000848573" /></p>
<hr />
<h4 id="127-名称空间使用原则"><a class="markdownIt-Anchor" href="#127-名称空间使用原则"></a> 12.7 名称空间使用原则</h4>
<p><img src="https://pic.imgdb.cn/item/62f2823d16f2c2beb1907fec.png" alt="image-20220805001137249" /></p>
<hr />
<h3 id="13-面向对象"><a class="markdownIt-Anchor" href="#13-面向对象"></a> 13. 面向对象</h3>
<h4 id="131-opp的特性"><a class="markdownIt-Anchor" href="#131-opp的特性"></a> 13.1 OPP的特性</h4>
<ul>
<li>抽象</li>
<li>封装和数据隐藏</li>
<li>多态</li>
<li>继承</li>
<li>代码的可重用性</li>
</ul>
<h4 id="132-类的组成部分"><a class="markdownIt-Anchor" href="#132-类的组成部分"></a> 13.2 类的组成部分</h4>
<ul>
<li>
<p><strong>类声明：</strong>  以数据成员的方式描述了数据部分，以成员函数（即方法）的方式描述了接口。</p>
</li>
<li>
<p><strong>类方法：</strong> 描述如何实现类成员的函数。</p>
</li>
</ul>
<p>[  类声明提供了<mark>类的蓝图</mark>  ，方法定义则提供<mark>细节</mark> ]</p>
<p><strong>通常：</strong> 会将<strong>类定义</strong> 放在头文件中，将<strong>类方法</strong>的代码放在源文件中。</p>
<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chass Stock				<span class="comment">// 类声明</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	std :: string company;</span><br><span class="line">    	<span class="type">long</span> shares；</span><br><span class="line">        <span class="type">double</span> share_val;</span><br><span class="line">    	<span class="type">double</span> total_val;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">set_tol</span><span class="params">()</span> </span>&#123; total_val = shares * share_val; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">acquire</span> <span class="params">(<span class="type">const</span> std :: string &amp; co, <span class="type">long</span> n , <span class="type">double</span> pr)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">buy</span><span class="params">(<span class="type">long</span> num, <span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">sell</span><span class="params">(<span class="type">long</span> num , <span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;  ;</span><br><span class="line"></span><br><span class="line">Stock a;		<span class="comment">// 声明a对象</span></span><br><span class="line">Stock b;		<span class="comment">// 声明b对象</span></span><br></pre></td></tr></table></figure>
<hr />
<h4 id="133-访问控制"><a class="markdownIt-Anchor" href="#133-访问控制"></a> 13.3 访问控制</h4>
<ul>
<li>类一般会有两个部分：<code>private</code>（私有的，数据隐藏）； <code>public</code>（公共接口）</li>
<li><code>private</code>部分，凡是在<code>private</code> 部分出现的标识（如函数，变量等），<mark>只能</mark> 通过<code>public</code> 的接口访问。</li>
<li>不必在类声明中显式的使用<code>private</code> 关键字，因为这是类对象默认的访问控制</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/62f2824216f2c2beb1909e3b.png" alt="image-20220806202226940" /></p>
<h5 id="1331-类和结构体"><a class="markdownIt-Anchor" href="#1331-类和结构体"></a> 13.3.1 类和结构体</h5>
<p><img src="https://pic.imgdb.cn/item/62f2824716f2c2beb190b956.png" alt="image-20220806210804363" /></p>
<h5 id="1332-类成员函数定义"><a class="markdownIt-Anchor" href="#1332-类成员函数定义"></a> 13.3.2  类成员函数定义</h5>
<p><strong>类成员函数</strong>的定义与<strong>正常函数</strong>类似， 不同点主要是；</p>
<ul>
<li>
<p>定义成员函数时，使用作用域解析符（::）来标识所属的类。</p>
</li>
<li>
<p>可以将另一个类成员函数命名为相同的名字（比如可以将另一个类成员函数也命名为update（））</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Stock::update</span><span class="params">(<span class="type">double</span> price)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">abc::update</span><span class="params">(<span class="type">double</span> price)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ....</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
</li>
<li>
<p>类方法可以访问类的<code>private</code>部分</p>
</li>
<li>
<p>同一个类（如 <code>Stock</code>类）的其他成员，可以<strong>不加</strong>解析符（::）<strong>,直接使用</strong><code>update（）</code>方法，因为同属一个类，因此<code>update（）</code>是<strong>可见的</strong></p>
</li>
<li>
<p>定义<mark>位于类声明中</mark>的函数会自动成为<mark>内联函数</mark> ， 通常将短小的成员函数作为内联函数。</p>
</li>
</ul>
<hr />
<h4 id="134-类对象的内存"><a class="markdownIt-Anchor" href="#134-类对象的内存"></a> 13.4  类对象的内存</h4>
<ul>
<li>
<p>每个创建的类对象都有自己的储存空间，用于储存器内部的变量和成员。</p>
</li>
<li>
<p>所有类对象共享一组类方法，即所有类对象执行统一代码块的类方法。</p>
<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/****************** 头文件 *****************/</span></span><br><span class="line"></span><br><span class="line">chass Stock				<span class="comment">// 类声明</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	std :: string company;</span><br><span class="line">    	<span class="type">long</span> shares；</span><br><span class="line">        <span class="type">double</span> share_val;</span><br><span class="line">    	<span class="type">double</span> total_val;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">set_tol</span><span class="params">()</span> </span>&#123; total_val = shares * share_val; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">acquire</span> <span class="params">(<span class="type">const</span> std :: string &amp; co, <span class="type">long</span> n , <span class="type">double</span> pr)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">buy</span><span class="params">(<span class="type">long</span> num, <span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">sell</span><span class="params">(<span class="type">long</span> num , <span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;  ;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************** mian.cpp  ************************/</span></span><br><span class="line">Stock a;		<span class="comment">// 声明a对象</span></span><br><span class="line">Stock b;		<span class="comment">// 声明b对象</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a.shares = <span class="number">1</span>;		<span class="comment">// 变量占有独立的内存块</span></span><br><span class="line">    b.shares = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    a.<span class="built_in">show</span>();			<span class="comment">// 类方法都调用的是 Stock::show() 代码块中的内容，只是用于不同数据</span></span><br><span class="line">    b.<span class="built_in">show</span>();</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<img src="https://pic.imgdb.cn/item/62f2824f16f2c2beb190e64e.png" alt="image-20220806215752623" style="zoom:150%;" />
</li>
</ul>
<hr />
<h4 id="135-数据封装"><a class="markdownIt-Anchor" href="#135-数据封装"></a> 13.5 数据封装</h4>
<p>所有的 C++ 程序都有以下两个基本要素：</p>
<ol>
<li><strong>程序语句（代码）：</strong> 这是程序中执行动作的部分，它们被称为函数。</li>
<li><strong>程序数据：</strong> 数据是程序的信息，会受到程序函数的影响。</li>
</ol>
<ul>
<li><mark>封装</mark>是面向对象编程中的把数据和操作数据的函数绑定在一起的一个概念，这样能<strong>避免受到外界的干扰和误用</strong>，从而确保了安全。数据封装引申出了另一个重要的 OOP 概念，即<strong>数据隐藏</strong>。</li>
<li><strong>数据封装</strong>是一种把数据和操作数据的函数捆绑在一起的机制，<strong>数据抽象</strong>是一种仅向用户暴露接口而把具体的实现细节隐藏起来的机制。</li>
</ul>
<p>C++ 通过创建<strong>类</strong>来支持封装和数据隐藏（public、protected、private）。我们已经知道，类包含私有成员（private）、保护成员（protected）和公有成员（public）成员。默认情况下，在类中定义的所有项目都是私有的。</p>
<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Adder</span>&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="comment">// 构造函数</span></span><br><span class="line">      <span class="built_in">Adder</span>(<span class="type">int</span> i = <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        total = i;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 对外的接口</span></span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">addNum</span><span class="params">(<span class="type">int</span> number)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">          total += number;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 对外的接口</span></span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getTotal</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> total;</span><br><span class="line">      &#125;;</span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="comment">// 对外隐藏的数据</span></span><br><span class="line">      <span class="type">int</span> total;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Adder a;</span><br><span class="line">   </span><br><span class="line">   a.<span class="built_in">addNum</span>(<span class="number">10</span>);</span><br><span class="line">   a.<span class="built_in">addNum</span>(<span class="number">20</span>);</span><br><span class="line">   a.<span class="built_in">addNum</span>(<span class="number">30</span>);</span><br><span class="line"> </span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total &quot;</span> &lt;&lt; a.<span class="built_in">getTotal</span>() &lt;&lt;endl;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="14-构造函数-和-析构函数"><a class="markdownIt-Anchor" href="#14-构造函数-和-析构函数"></a> 14. 构造函数 和 析构函数</h3>
<p>因为类的数据成员大部分情况下是被<strong>隐藏</strong>的，无法直接访问来进行<strong>初始化</strong>。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">thing</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span>* pn;</span><br><span class="line">	<span class="type">int</span> m;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">thing a = &#123;<span class="string">&quot;wod&quot;</span>,<span class="number">-23</span>&#125;;				<span class="comment">// 初始化结构体</span></span><br><span class="line">Stock hot = &#123;<span class="string">&quot;auid&quot;</span>,<span class="number">200</span>,<span class="number">50.25</span>&#125;;		<span class="comment">// 非法的，会编译报错</span></span><br></pre></td></tr></table></figure>
<p>类的<strong>构造函数</strong>是类的一种特殊的成员函数，它会在<mark>每次</mark><strong>创建类的新对象</strong>时执行。</p>
<p>构造函数的名称<strong>与类的名称是完全相同</strong>的，并且<strong>不会返回任何类型</strong>，也不会返回 void。构造函数可用于为某些成员变量设置初始值。</p>
<h4 id="141-构造函数定义"><a class="markdownIt-Anchor" href="#141-构造函数定义"></a> 14.1 构造函数定义</h4>
<p>构造函数原型在类声明的<strong>共有部分</strong> ，构造函数定义与正常函数定义类似（注意<strong>没有返回值</strong>）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*******************  头文件 ********************/</span></span><br><span class="line">chass Stock				<span class="comment">// 类声明</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	std :: string company;</span><br><span class="line">    	<span class="type">long</span> shares；</span><br><span class="line">        <span class="type">double</span> share_val;</span><br><span class="line">    	<span class="type">double</span> total_val;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">set_tol</span><span class="params">()</span> </span>&#123; total_val = shares * share_val; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">acquire</span> <span class="params">(<span class="type">const</span> std :: string &amp; co, <span class="type">long</span> n , <span class="type">double</span> pr)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">buy</span><span class="params">(<span class="type">long</span> num, <span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">sell</span><span class="params">(<span class="type">long</span> num , <span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">double</span> price)</span></span>;</span><br><span class="line">    	<span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">    	<span class="built_in">Stock</span>();		<span class="comment">// 这是构造函数声明</span></span><br><span class="line">&#125;  ;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************   源文件 *****************/</span></span><br><span class="line"></span><br><span class="line">Stock:: <span class="built_in">Stock</span>(<span class="type">const</span> string &amp; co , <span class="type">long</span> n, <span class="type">double</span> pr)</span><br><span class="line">&#123;</span><br><span class="line">    company = co ;		<span class="comment">//初始化数据成员 company</span></span><br><span class="line">    shares = n;			<span class="comment">// 初始化数据成员</span></span><br><span class="line">    share_val = pr;		<span class="comment">// 初始化数据成员</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 特别注意：</font>  构造函数的参数表示的是不是类成员，而是赋给类成员的值， 因此<mark>参数名不能与类成员相同</mark> ，</p>
<p>所以通常可以在数据成员前面使用 m_前缀。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">chass Stock				<span class="comment">// 类声明</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	std :: string m_company;</span><br><span class="line">    	<span class="type">long</span> m_shares;</span><br><span class="line">       </span><br><span class="line">   ...</span><br></pre></td></tr></table></figure>
<h4 id="142-使用构造函数"><a class="markdownIt-Anchor" href="#142-使用构造函数"></a> 14.2 使用构造函数</h4>
<ul>
<li>
<p>可以显式的调用构造函数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Stock a = <span class="built_in">Stock</span>(<span class="string">&quot;wor&quot;</span>,<span class="number">1</span> ,<span class="number">1.5</span>);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>也可以用更常见的方式来调用</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Stock <span class="title">b</span><span class="params">(<span class="string">&quot;wor&quot;</span>,<span class="number">1</span> ,<span class="number">1.5</span>)</span></span>;  <span class="comment">// 等价于 Stock b = Stock(&quot;wor&quot;,1 ,1.5);</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><font face="华文彩云" color=red size=5> 特别注意：</font> <strong>无法使用</strong>对象来调用构造函数 ， 因为在构造函数构造出对象之前 ，<strong>对象是不存在的</strong> ，因此构造</p>
<p>函数用来创建对象，而不能通过对象来调用</p>
<hr />
<h4 id="143-析构函数"><a class="markdownIt-Anchor" href="#143-析构函数"></a> 14.3 析构函数</h4>
<p>类的<strong>析构函数</strong>是类的一种特殊的成员函数，它会在每次删除所创建的对象时执行。</p>
<p>析构函数的名称与类的名称是完全相同的，只是在前面加了个波浪号（~）作为前缀，它不会返回任何值，也不能带有任何参数。析构函数有助于在<strong>跳出程序</strong>（比如关闭文件、释放内存等）前<strong>释放资源。</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/********************* 头文件 ********************/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setLength</span><span class="params">( <span class="type">double</span> len )</span></span>;</span><br><span class="line">      <span class="function"><span class="type">double</span> <span class="title">getLength</span><span class="params">( <span class="type">void</span> )</span></span>;</span><br><span class="line">      <span class="built_in">Line</span>();   <span class="comment">// 这是构造函数声明</span></span><br><span class="line">      ~<span class="built_in">Line</span>();  <span class="comment">// 这是析构函数声明</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="type">double</span> length;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/************************* 源文件 ***********************/</span></span><br><span class="line"><span class="comment">// 成员函数定义，包括构造函数</span></span><br><span class="line">Line::<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being created&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">Line::~<span class="built_in">Line</span>(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Object is being deleted&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Line::setLength</span><span class="params">( <span class="type">double</span> len )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    length = len;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Line::getLength</span><span class="params">( <span class="type">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/****************************  main.cpp **************************/</span></span><br><span class="line"> <span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Line line;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 设置长度</span></span><br><span class="line">   line.<span class="built_in">setLength</span>(<span class="number">6.0</span>); </span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Length of line : &quot;</span> &lt;&lt; line.<span class="built_in">getLength</span>() &lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>运行结果：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Object is being created</span><br><span class="line">Length of line : <span class="number">6</span></span><br><span class="line">Object is being deleted</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 总结：</font></p>
<ul>
<li>就像对象被创建时调用<strong>构造函数</strong>一样 ， 当对象被删除时，程序将调用析构函数 ；</li>
<li>每个类只能有一个析构函数</li>
<li>析构函数没有返回值，也没有参数。</li>
</ul>
<hr />
<h3 id="15-this指针"><a class="markdownIt-Anchor" href="#15-this指针"></a> 15. this指针</h3>
<h4 id="151-简介"><a class="markdownIt-Anchor" href="#151-简介"></a> 15.1 简介</h4>
<p>在 C++ 中，每一个对象都能通过 <strong>this</strong> 指针来<strong>访问自己的地址</strong>。<strong>this</strong> 指针是所有成员函数的隐含参数。因此，在成</p>
<p>员函数内部，它可以用来指向调用对象，<strong>只有成员函数才有 this 指针。</strong></p>
<h4 id="152-为什么要引入this指针"><a class="markdownIt-Anchor" href="#152-为什么要引入this指针"></a> 15.2 为什么要引入this指针</h4>
<p>当我们调用成员函数时，实际上是替某个对象调用它。</p>
<p>成员函数通过一个名为 this 的额外<strong>隐式参数</strong>来访问调用它的那个对象</p>
<p><mark>用c语言的方式表达this指针的作用：</mark></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Car</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="type">int</span> price; </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">SetPrice</span><span class="params">(<span class="keyword">struct</span> Car* this, <span class="type">int</span> p)</span>   <span class="comment">// car 指针就相当于隐式参数this</span></span><br><span class="line">&#123; </span><br><span class="line"> this-&gt;price = p; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">Car</span> <span class="title">car</span>;</span></span><br><span class="line"> SetPrice( &amp;car, <span class="number">20000</span>); <span class="comment">// 给car结构体的price变量赋值</span></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="16-对象数组初始化"><a class="markdownIt-Anchor" href="#16-对象数组初始化"></a> 16. 对象数组初始化</h3>
<h4 id="161-使用默认构造函数初始化"><a class="markdownIt-Anchor" href="#161-使用默认构造函数初始化"></a> 16.1 使用默认构造函数初始化</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Stock buff[<span class="number">4</span>];   <span class="comment">// 创建一个包含4个成员的Stock对象数组</span></span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 注意：</font>   要求没有显示定义任何构造函数的时候，才能这样使用声明对象数组</p>
<h4 id="162-使用构造函数初始化"><a class="markdownIt-Anchor" href="#162-使用构造函数初始化"></a> 16.2 使用构造函数初始化</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Stock buff[<span class="number">4</span>] = &#123;</span><br><span class="line">		<span class="built_in">Stock</span>(<span class="string">&quot;one&quot;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">		<span class="built_in">Stock</span>(<span class="string">&quot;two&quot;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">		<span class="built_in">Stock</span>(<span class="string">&quot;three&quot;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">		<span class="built_in">Stock</span>(<span class="string">&quot;four&quot;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 注意：</font> 这样必须为<mark>每个</mark>元素调用构造函数 , 除非定义了<mark>多个构造函数</mark></p>
<hr />
<h3 id="17-类作用域"><a class="markdownIt-Anchor" href="#17-类作用域"></a> 17.  类作用域</h3>
<h4 id="171-简单特性"><a class="markdownIt-Anchor" href="#171-简单特性"></a> 17.1 简单特性</h4>
<ul>
<li>c++相比C语言，在<strong>全局作用域</strong>和<strong>局部作用域</strong>外，引入了新的<strong>类作用域</strong>。</li>
<li>类中定义的名称（如<strong>数据成员名</strong>和<strong>类成员函数名</strong>等） 作用域是<mark>整个类</mark>. 只有在该类中是<mark>已知</mark>的，在类外都是<mark>不可知</mark></li>
<li>可以在<strong>不同类</strong>中使用<strong>相同的成员</strong>名</li>
<li>不能直接从<mark>外部访问类的成员</mark>，公有函数也不可以， 要调用公有函数成员，必须<mark>通过对象</mark></li>
<li>在定义成员函数时，<mark>必须使用</mark>类作用域解析符</li>
</ul>
<hr />
<h3 id="18-c中的运算符重载"><a class="markdownIt-Anchor" href="#18-c中的运算符重载"></a> 18. C++中的运算符重载</h3>
<p>可以重定义或重载大部分 C++ 内置的运算符， 之后就能使用自定义类型的运算符。</p>
<p><strong>重载的运算符是带有特殊名称的函数</strong>，函数名是由关键字 <code>operator</code> 和其后要重载的运算符符号构成的。与其他函数一样，重载运算符有一个返回类型和一个参数列表。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Box <span class="keyword">operator</span>+(<span class="type">const</span> Box&amp;);</span><br></pre></td></tr></table></figure>
<p>可以通过重载 <code>+</code> 运算符 用于把两个 Box 对象相加，返回最终的 Box 对象。大多数的重载运算符可被定义为<strong>普通的非成员函数</strong>或者被定义为<strong>类成员函数</strong>。</p>
<p>例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Box</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line"> </span><br><span class="line">      <span class="function"><span class="type">double</span> <span class="title">getVolume</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> length * breadth * height;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setLength</span><span class="params">( <span class="type">double</span> len )</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">          length = len;</span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setBreadth</span><span class="params">( <span class="type">double</span> bre )</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">          breadth = bre;</span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setHeight</span><span class="params">( <span class="type">double</span> hei )</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">          height = hei;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 重载 + 运算符，用于把两个 Box 对象相加</span></span><br><span class="line">      Box <span class="keyword">operator</span>+(<span class="type">const</span> Box&amp; b)</span><br><span class="line">      &#123;</span><br><span class="line">         Box box;</span><br><span class="line">         box.length = <span class="keyword">this</span>-&gt;length + b.length;</span><br><span class="line">         box.breadth = <span class="keyword">this</span>-&gt;breadth + b.breadth;</span><br><span class="line">         box.height = <span class="keyword">this</span>-&gt;height + b.height;</span><br><span class="line">         <span class="keyword">return</span> box;</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="type">double</span> length;      <span class="comment">// 长度</span></span><br><span class="line">      <span class="type">double</span> breadth;     <span class="comment">// 宽度</span></span><br><span class="line">      <span class="type">double</span> height;      <span class="comment">// 高度</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 程序的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Box Box1;                <span class="comment">// 声明 Box1，类型为 Box</span></span><br><span class="line">   Box Box2;                <span class="comment">// 声明 Box2，类型为 Box</span></span><br><span class="line">   Box Box3;                <span class="comment">// 声明 Box3，类型为 Box</span></span><br><span class="line">   <span class="type">double</span> volume = <span class="number">0.0</span>;     <span class="comment">// 把体积存储在该变量中</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">// Box1 详述</span></span><br><span class="line">   Box1.<span class="built_in">setLength</span>(<span class="number">6.0</span>); </span><br><span class="line">   Box1.<span class="built_in">setBreadth</span>(<span class="number">7.0</span>); </span><br><span class="line">   Box1.<span class="built_in">setHeight</span>(<span class="number">5.0</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// Box2 详述</span></span><br><span class="line">   Box2.<span class="built_in">setLength</span>(<span class="number">12.0</span>); </span><br><span class="line">   Box2.<span class="built_in">setBreadth</span>(<span class="number">13.0</span>); </span><br><span class="line">   Box2.<span class="built_in">setHeight</span>(<span class="number">10.0</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 把两个对象相加，得到 Box3</span></span><br><span class="line">   Box3 = Box1 + Box2;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// Box3 的体积</span></span><br><span class="line">   volume = Box3.<span class="built_in">getVolume</span>();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="19-嵌套结构和类"><a class="markdownIt-Anchor" href="#19-嵌套结构和类"></a> 19.  嵌套结构和类</h3>
<ul>
<li>在类中声明中声明的<strong>结构</strong>、<strong>类</strong>、<strong>枚举</strong>被称为是被嵌套在类中, 其作用域为<mark>整个类</mark>  ;</li>
<li>这个被嵌套的类的作用域就只在它的上一级类中。</li>
<li>这种声明<strong>不会创建数据对象</strong>，而只是指定了可以在类中使用的类型。</li>
<li>如果是在类的<strong>私有部分</strong> 进行声明的， 则只能在这个类中使用被声明的类型，在上一级类中<strong>可见</strong>，而对于外部是<strong>不可见</strong>的。</li>
<li>如果是在类的<strong>公共部分</strong> 进行声明的，则可以在类的外部使用<strong>作用域解析符（::）</strong> 使用被声明的类型。</li>
</ul>
<p>例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">c1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">c2</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">()</span></span>;</span><br><span class="line">    &#125; b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">c1::foo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> c1::c2::<span class="built_in">foo</span>()</span><br><span class="line">&#123;</span><br><span class="line">    a = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">c1</span> f;</span><br><span class="line">    f.<span class="built_in">foo</span>();</span><br><span class="line">    f.b.<span class="built_in">foo</span>();</span><br><span class="line">    cout &lt;&lt; f.a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; f.b.a &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>
<hr />
<h3 id="20-类继承"><a class="markdownIt-Anchor" href="#20-类继承"></a> 20. 类继承</h3>
<h4 id="201-基本概念"><a class="markdownIt-Anchor" href="#201-基本概念"></a> 20.1 基本概念</h4>
<ul>
<li>面向对象程序设计中最重要的一个概念是<mark>继承</mark>。继承允许我们依据另一个类来定义一个类，这使得创建和维护一个应用程序变得更容易。这样做，也达到了重用代码功能和提高执行效率的效果。</li>
<li>当创建一个类时，您不需要重新编写新的数据成员和成员函数，只需指定新建的类继承了一个已有的类的成员即可。这个已有的类称为 <strong><mark>基类</mark></strong> ，新建的类称为 <strong><mark>派生类</mark></strong> 。</li>
<li>继承代表了 <strong>is a</strong> 关系。例如，哺乳动物是动物，狗是哺乳动物，因此，狗是动物，等等。</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/62f2825c16f2c2beb1912dba.png" alt="image-20220808213540848" /></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 基类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="comment">// eat() 函数</span></span><br><span class="line">    <span class="comment">// sleep() 函数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//派生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> : <span class="keyword">public</span> Animal &#123;</span><br><span class="line">    <span class="comment">// bark() 函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<hr />
<h4 id="202-派生类"><a class="markdownIt-Anchor" href="#202-派生类"></a> 20.2 派生类</h4>
<p>一个类可以派生自多个类，这意味着，它可以从<strong>多个基类</strong>继承数据和函数。定义一个派生类，我们使用一个类派生</p>
<p>列表来指定基类。类派生列表以一个或多个基类命名，形式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">derived</span>-<span class="keyword">class</span>: access-specifier base-<span class="keyword">class</span></span><br></pre></td></tr></table></figure>
<ul>
<li>其中<code>derived-class</code> 是派生类的名</li>
<li>修饰符<code>access-specifier</code>  是 <strong>public、protected</strong> 或 <strong>private</strong> 其中的一个。如果未使用访问修饰符 <code>access-specifier</code>，则默认为 <strong>private</strong>。
<ul>
<li><strong>使用公用派生</strong>，基类的公有成员将成为派生类的<strong>公有成员</strong></li>
<li>而基类的私有成员也将成为派生类的一部分，但<strong>只能通过</strong>基类的公有和保护方法访问。</li>
</ul>
</li>
<li><code>base-class</code> 是之前定义过的某个类的名称（即<strong>基类</strong>）</li>
</ul>
<p><mark>举例如下：</mark></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 基类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         width = w;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setHeight</span><span class="params">(<span class="type">int</span> h)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         height = h;</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">protected</span>:</span><br><span class="line">      <span class="type">int</span> width;</span><br><span class="line">      <span class="type">int</span> height;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 派生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span>: <span class="keyword">public</span> Shape</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">    	<span class="type">int</span> m_b;</span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      </span>&#123; </span><br><span class="line">         <span class="keyword">return</span> (width * height); </span><br><span class="line">      &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Rectangle Rect;</span><br><span class="line"> </span><br><span class="line">   Rect.<span class="built_in">setWidth</span>(<span class="number">5</span>);</span><br><span class="line">   Rect.<span class="built_in">setHeight</span>(<span class="number">7</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 输出对象的面积</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total area: &quot;</span> &lt;&lt; Rect.<span class="built_in">getArea</span>() &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><mark>一般需要在继承特性中添加：</mark></p>
<ul>
<li>派生类需要自己的<strong>构造函数</strong></li>
<li>派生可以根据需要添加额外的<strong>成员数据</strong>和<strong>成员函数</strong></li>
</ul>
<hr />
<h4 id="203-继承与访问控制"><a class="markdownIt-Anchor" href="#203-继承与访问控制"></a> 20.3 继承与访问控制</h4>
<h5 id="2031-派生类对象初始化"><a class="markdownIt-Anchor" href="#2031-派生类对象初始化"></a> 20.3.1 派生类对象初始化：</h5>
<p>派生类不能直接访问基类的私有成员而必须通过基类方法访问，所以派生类构造函数<strong>必须使用基类构造函数</strong>。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Rectangle::<span class="built_in">Rectangle</span>(<span class="type">int</span> b, <span class="type">int</span> wid, <span class="type">int</span> hig):<span class="built_in">Shape</span>(wid,hig)</span><br><span class="line">&#123;</span><br><span class="line">    m_b = b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明对象</span></span><br><span class="line"><span class="function">Rectangle <span class="title">rec</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span></span>;</span><br></pre></td></tr></table></figure>
<p>如上所示：</p>
<ul>
<li><code>Shape(wid,hig)</code> 调用基类的<code>Shape()</code> 构造函数</li>
<li><code>Rectangle</code>构造函数把实参<code>“2”，“3”</code> 赋予形参 <code>“wid”,“hig”</code> ，然后这些参数作为实参传递给<code>Shape（）</code>构造函数</li>
<li>后者将创建一个嵌套的<code>Shape</code>对象 ，并将数据<code>“2”，“3”</code> 储存在该对象中。</li>
<li>然后，程序进入<code>Rectangle</code>构造函数体 ，完成对<code>Rectangle</code>对象的创建。</li>
</ul>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<ul>
<li>创建派生类对象时，程序先调用<strong>基类构造函数</strong>，再调用<strong>派生类构造函数</strong>。</li>
<li>基类构造函数负责初始化<strong>继承的数据成员</strong>;派生类构造函数主要用于初始化<strong>新的数据成员</strong>。</li>
<li>派生类构造函数总是调用一个基类构造函数。</li>
<li>可以使用<strong>初始化列表</strong>指定所使用的基类构造函数，否则将使用<strong>默认的基类构造函数</strong>。</li>
</ul>
<hr />
<h5 id="2032-访问权限"><a class="markdownIt-Anchor" href="#2032-访问权限"></a> 20.3.2 访问权限</h5>
<p>派生类可以访问基类中所有的<strong>非私有成员</strong>。因此基类成员如果不想被派生类的成员函数访问，则应在基类中声明为 <code>private</code>。</p>
<p>C++ 中 <code>class</code> 的访问权限分的很细，有 <code>public</code>、<code>protected</code> 及 <code>private</code> 三种，派生子类时又有三种派生类型，搭配起来就有 9 中不同的组合了。下面用一张表总结了这些搭配的不同。</p>
<p>其中，<strong>括号中的是在派生类中这些成员变量（函数）的角色。</strong></p>
<table>
<thead>
<tr>
<th>成员变量修饰符</th>
<th>类外的普通函数</th>
<th>public 派生类</th>
<th>private 派生类</th>
<th>protected 派生类</th>
</tr>
</thead>
<tbody>
<tr>
<td>public</td>
<td>可以访问</td>
<td>可以访问（public）</td>
<td>可以访问（private）</td>
<td>可以访问（protected）</td>
</tr>
<tr>
<td>protected</td>
<td>无法访问</td>
<td>可以访问（protected）</td>
<td>可以访问（private）</td>
<td>可以访问（protected）</td>
</tr>
<tr>
<td>private</td>
<td>无法访问</td>
<td>无法访问（private）</td>
<td>无法访问（private）</td>
<td>无法访问（private）</td>
</tr>
</tbody>
</table>
<p><font face="华文彩云" color=red size=5> 如上所示：</font> [派生类的成员可以直接访问基类的保护成员，但不能直接访问基类的私有成员]</p>
<p>一个派生类继承了所有的基类方法，但下列情况除外：</p>
<ul>
<li>基类的构造函数、析构函数和拷贝构造函数。</li>
<li>基类的重载运算符。</li>
<li>基类的友元函数。</li>
</ul>
<hr />
<h5 id="2033-继承类型"><a class="markdownIt-Anchor" href="#2033-继承类型"></a> 20.3.3 继承类型</h5>
<p>当一个类派生自基类，该基类可以被继承为 <strong>public、protected</strong> 或 <strong>private</strong> 几种类型。继承类型是通过前面讲解的访问修饰符 <code>access-specifier</code> 来指定的。</p>
<p>我们几乎不使用 <strong>protected</strong> 或 <strong>private</strong> 继承，通常使用 <strong>public</strong> 继承。当使用不同类型的继承时，遵循以下几个规则：</p>
<ul>
<li><strong>公有继承（public）：<strong>当一个类派生自</strong>公有</strong>基类时，基类的<strong>公有</strong>成员也是派生类的<strong>公有</strong>成员，基类的<strong>保护</strong>成员也是派生类的<strong>保护</strong>成员，基类的<strong>私有</strong>成员不能直接被派生类访问，但是可以通过调用基类的<strong>公有</strong>和<strong>保护</strong>成员来访问。  （即派生类对象也是一个基类对象，<strong>可以对基类</strong>对象执行的任何操作，<strong>也可以</strong>对派生类对象执行任何操作。）</li>
<li><strong>保护继承（protected）：</strong> 当一个类派生自<strong>保护</strong>基类时，基类的<strong>公有</strong>和<strong>保护</strong>成员将成为派生类的<strong>保护</strong>成员。</li>
<li><strong>私有继承（private）：<strong>当一个类派生自</strong>私有</strong>基类时，基类的<strong>公有</strong>和<strong>保护</strong>成员将成为派生类的<strong>私有</strong>成员。</li>
</ul>
<hr />
<h5 id="2034-多继承"><a class="markdownIt-Anchor" href="#2034-多继承"></a> 20.3.4 多继承</h5>
<p>多继承即一个子类可以有<strong>多个父类</strong>，它继承了<strong>多个父类</strong>的特性。</p>
<p>C++ 类可以从多个类继承成员，语法如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> &lt;派生类名&gt;:&lt;继承方式<span class="number">1</span>&gt;&lt;基类名<span class="number">1</span>&gt;,&lt;继承方式<span class="number">2</span>&gt;&lt;基类名<span class="number">2</span>&gt;,…</span><br><span class="line">&#123;</span><br><span class="line">&lt;派生类类体&gt;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>其中，访问修饰符继承方式是 <strong>public、protected</strong> 或 <strong>private</strong> 其中的一个，用来修饰每个基类，各个基类之间用逗号分隔</p>
<p><mark>如下面例子所示：</mark></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 基类 Shape</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         width = w;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setHeight</span><span class="params">(<span class="type">int</span> h)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         height = h;</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">protected</span>:</span><br><span class="line">      <span class="type">int</span> width;</span><br><span class="line">      <span class="type">int</span> height;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 基类 PaintCost</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PaintCost</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getCost</span><span class="params">(<span class="type">int</span> area)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> area * <span class="number">70</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 派生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span>: <span class="keyword">public</span> Shape, <span class="keyword">public</span> PaintCost</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      </span>&#123; </span><br><span class="line">         <span class="keyword">return</span> (width * height); </span><br><span class="line">      &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Rectangle Rect;</span><br><span class="line">   <span class="type">int</span> area;</span><br><span class="line"> </span><br><span class="line">   Rect.<span class="built_in">setWidth</span>(<span class="number">5</span>);</span><br><span class="line">   Rect.<span class="built_in">setHeight</span>(<span class="number">7</span>);</span><br><span class="line"> </span><br><span class="line">   area = Rect.<span class="built_in">getArea</span>();</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 输出对象的面积</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total area: &quot;</span> &lt;&lt; Rect.<span class="built_in">getArea</span>() &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 输出总花费</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total paint cost: $&quot;</span> &lt;&lt; Rect.<span class="built_in">getCost</span>(area) &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="21-多态"><a class="markdownIt-Anchor" href="#21-多态"></a> 21. 多态</h3>
<p><strong>多态</strong>按字面的意思就是多种形态。当类之间<strong>存在层次结构</strong>，并且类之间是通过<strong>继承关联</strong>时，就会用到多态。</p>
<p>C++ 多态意味着调用成员函数时，会根据调用函数的对象的类型来执行不同的函数。<mark>方法的行为应取决于调用</mark></p>
<p><mark>该方法的对象</mark></p>
<p><mark>构成多态的条件</mark>:</p>
<ul>
<li>必须存在<strong>继承关系</strong>；</li>
<li>继承关系中必须有<strong>同名的虚函数</strong>，并且它们是<strong>覆盖关系</strong>（函数原型相同）。</li>
<li>存在基类的指针，通过该<strong>指针调用虚函数</strong>。</li>
</ul>
<p>有两种重要机制可用于实现<strong>多态公有继承</strong>：</p>
<ul>
<li>在派生类中重新定义基类的方法</li>
<li>使用虚函数</li>
</ul>
<hr />
<h4 id="211-虚函数"><a class="markdownIt-Anchor" href="#211-虚函数"></a> 21.1 虚函数</h4>
<h5 id="2111-静态联编译和动态联编"><a class="markdownIt-Anchor" href="#2111-静态联编译和动态联编"></a> 21.1.1 静态联编译和动态联编</h5>
<p><img src="https://pic.imgdb.cn/item/62f2826a16f2c2beb1917c0d.png" alt="image-20220809214943891" /></p>
<hr />
<h5 id="2112-虚函数简介"><a class="markdownIt-Anchor" href="#2112-虚函数简介"></a> 21.1.2 虚函数简介</h5>
<p>C++多态是通过<strong>虚函数</strong>来实现的，虚函数允许子类重新定义成员函数，而子类重新定义父类的做法称为<strong>覆盖</strong>，或者称为<strong>重写</strong>。</p>
<p>最常见的用法就是声明基类的指针，利用该指针指向任意一个子类对象，调用相应的虚函数，动态绑定。由于编写代码的时候并不能确定被调用的是基类的函数还是哪个派生类的函数，所以被成为 <strong>“虚”函数</strong> 。如果没有使用虚函数的话，即没有利用C++多态性，则利用基类指针调用相应的函数的时候，将总被限制在基类函数本身，而<strong>无法调用到子类中被重写过的函数。</strong></p>
<p>例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 基类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>  </span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">public</span>:  </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fun</span><span class="params">()</span>  <span class="comment">//基类中声明为虚函数</span></span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 派生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> : <span class="keyword">public</span> A  </span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">public</span>:  </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">()</span>  <span class="comment">//隐藏：派生类的函数屏蔽了与其同名的基类函数</span></span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;3\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">()</span>  <span class="comment">//多态、覆盖</span></span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;4\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    A a;  </span><br><span class="line">    B b;  </span><br><span class="line">    A *p = &amp;a;  </span><br><span class="line">    p-&gt;<span class="built_in">foo</span>();  <span class="comment">//输出1</span></span><br><span class="line">    p-&gt;<span class="built_in">fun</span>();  <span class="comment">//输出2</span></span><br><span class="line">    p = &amp;b;  </span><br><span class="line">    p-&gt;<span class="built_in">foo</span>();  <span class="comment">//取决于指针类型，输出1</span></span><br><span class="line">    p-&gt;<span class="built_in">fun</span>();  <span class="comment">//取决于对象类型，输出4，体现了多态</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 注意：</font>  虚函数只能借助于<strong>指针或者引用</strong>来达到多态的效果。</p>
<hr />
<h5 id="2113-虚函数定义"><a class="markdownIt-Anchor" href="#2113-虚函数定义"></a> 21.1.3 虚函数定义</h5>
<ul>
<li>通常可以在基类中将派生类会<strong>重新定义的函数</strong>声明为<strong>虚函数</strong></li>
<li>函数在<strong>基类中</strong>被声明为虚函数后，它在<strong>派生类</strong>中将自动成为虚函数</li>
<li>如果在<strong>派生类中</strong>使用关键字<code>virtual</code> 来指出哪些函数是虚函数也可以。</li>
<li>如果要在派生类中重新定义基类的方法，通常<strong>应将基类函数声明为虚</strong>的，这样程序将根据<strong>对象类型</strong>而不是引用或指针的类型来选择<strong>函数版本</strong></li>
<li>将基类声明一个虚析构函数也是惯例。</li>
</ul>
<p><font face="华文彩云" color=red size=5> 注意：</font> 关键字<code>virtual</code> 只用于类<strong>声明</strong>的方法原型中，而不能用在<strong>定义</strong>中</p>
<hr />
<h5 id="2114-虚函数的注意事项"><a class="markdownIt-Anchor" href="#2114-虚函数的注意事项"></a> 21.1.4 虚函数的注意事项</h5>
<ul>
<li>
<p>使用虚函数时,在内存和执行速度方面有一定的<strong>成本</strong>,包括:</p>
<ul>
<li>
<p>每个对象都将增大,增大量为存储地址的空间;</p>
</li>
<li>
<p>对于每个类,编译器都创建一个虚函数地址表(数组);</p>
</li>
<li>
<p>对于每个函数调用,都需要执行一项额外的操作,即到表中查找地址</p>
</li>
</ul>
</li>
<li>
<p>在<mark>基类函数的声明中</mark>使用关键字<code>virtual</code>可使该方法在<strong>基类</strong>以及 <strong>所有的派生类</strong> (包括从派生类派生出来的类)中是虚的。</p>
</li>
<li>
<p>如果使用指向<strong>对象的引用或指针</strong>来调用虚方法,程序将使用为 <strong>对象类型定义的方法,</strong> 而不使用为引用或指针类型定义的方法。这称为动态联编或晚期联编。</p>
</li>
<li>
<p>如果定义的类将被<strong>用作基类</strong>,则应将那些要在派生类中重新定义的类方法<strong>声明为虚的</strong>。</p>
</li>
<li>
<p>构造函数<mark>不能</mark>是虚函数。</p>
</li>
<li>
<p>如果派生类<strong>没有</strong>重新定义函数，将使用该函数的<strong>基类版本</strong>。</p>
</li>
</ul>
<hr />
<h4 id="212-抽象基类和纯虚函数"><a class="markdownIt-Anchor" href="#212-抽象基类和纯虚函数"></a> 21.2 抽象基类和纯虚函数</h4>
<h5 id="2121-纯虚函数介绍"><a class="markdownIt-Anchor" href="#2121-纯虚函数介绍"></a> 21.2.1 纯虚函数介绍</h5>
<p>如果想要在基类中定义虚函数，以便在派生类中重新定义该函数更好地适用于对象，但是您在<strong>基类中</strong>又不能对虚函数给出<strong>有意义的实现</strong>，这个时候就会用到<mark>纯虚函数</mark>。</p>
<p>例如：</p>
<p>在很多情况下，基类本身生成对象是不合情理的。例如，动物作为一个基类可以派生出老虎、孔雀等子类，但动物本身生成对象明显不合常理。</p>
<p><font face="华文彩云" color=red size=5> 所以引入纯虚函数的概念：</font></p>
<ul>
<li>将函数定义为<strong>纯虚函数</strong>（方法：<strong>virtual ReturnType Function()= 0;</strong>）</li>
<li>则编译器要求在派生类中<mark>必须</mark>予以<strong>重写</strong>以实现多态性。同时含有纯虚拟函数的类称为<mark>抽象类</mark>，它<strong>不能生成对象</strong>。</li>
<li>声明了纯虚函数的类是一个<mark>抽象类</mark>。所以，用户<strong>不能</strong>创建类的实例，只能创建它的派生类的实例。</li>
</ul>
<hr />
<h5 id="2122-纯虚函数定义"><a class="markdownIt-Anchor" href="#2122-纯虚函数定义"></a> 21.2.2 纯虚函数定义</h5>
<p>纯虚函数是在基类中声明的虚函数，它<strong>在基类中没有定义</strong>，但要求任何派生类都要定义自己的实现方法。在基类中实现纯虚函数的方法是在函数原型后加 <strong>=0</strong>:</p>
<p></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">funtion1</span><span class="params">()</span></span>=<span class="number">0</span></span><br></pre></td></tr></table></figure>
<hr />
<h5 id="2123-抽象类"><a class="markdownIt-Anchor" href="#2123-抽象类"></a> 21.2.3 抽象类</h5>
<p>抽象类是一种特殊的类，它是为了<strong>抽象和设计</strong>的目的为建立的，它处于继承层次结构的<strong>较上层</strong>。</p>
<p><strong>（1）抽象类的定义：</strong> 称带有<mark>纯虚函数</mark>的类为抽象类。</p>
<p><strong>（2）抽象类的作用：</strong> 抽象类的主要作用是将有关的操作作为<strong>结果接口</strong>组织在一个继承层次结构中，由它来为派生类提供一个公共的根，派生类将具体实现在其基类中作为<strong>接口的操作</strong>。所以派生类实际上刻画了一组子类的操作接口的通用语义，这些语义也传给子类，子类可以具体实现这些语义，也可以再将这些语义传给自己的子类。</p>
<p><strong>（3）使用抽象类时注意：</strong></p>
<ul>
<li>抽象类只能<mark>作为基类</mark>来使用，其纯虚函数的实现由派生类给出。如果派生类中<strong>没有重新定义</strong>纯虚函数，而只是继承基类的纯虚函数，则这个派生类<strong>仍然还是一个抽象类</strong>。如果派生类中<strong>给出了基类纯虚函数的实现</strong>，则该派生类就不再是抽象类了，它是一个<strong>可以建立对象的具体的类</strong>。</li>
</ul>
<hr />
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>c++</tag>
        <tag>开发语言</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP8266墨水屏</title>
    <url>/2023/04/08/ESP8266%E5%A2%A8%E6%B0%B4%E5%B1%8F/</url>
    <content><![CDATA[<h1 id="记录一次墨水屏项目的开发过程"><a class="markdownIt-Anchor" href="#记录一次墨水屏项目的开发过程"></a> 记录一次墨水屏项目的开发过程</h1>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.14」</em>     <em>未添加新功能</em><br />
<br><br />
<strong>author：</strong>  <em>Y.Z.T.</em><br />
<br></p>
<p><strong>简介：</strong>  <em>该项目是基于ESP8266开发的一款多功能墨水屏；图一乐，随便记录一下。</em></p>
</blockquote>
<span id="more"></span>
<hr />
<h2 id="一-开发过程及规划"><a class="markdownIt-Anchor" href="#一-开发过程及规划"></a> 一、开发过程及规划</h2>
<p>​</p>
<h3 id="11项目来源"><a class="markdownIt-Anchor" href="#11项目来源"></a> 1.1	项目来源</h3>
<p><em>该项目是基于ESP8266开发的一款多功能墨水屏；</em></p>
<p><em>最初的项目开发来自笔者的几位同学，后因各种原因，笔者继承了该项目；因原项目已经拥有了相对完善的硬件方案，同时笔者的同学也</em></p>
<p><em>已经搭建并测试出一套行之有效的开发环境，故笔者自认只是在原有项目基础上进行优化和功能添加。</em></p>
<br>
<p><em><strong>「当前是v1.0版本，仅在原项目基础上进行优化，还并未添加多少新的功能」</strong></em></p>
<br>
<hr />
<h3 id="12改进需求"><a class="markdownIt-Anchor" href="#12改进需求"></a> 1.2	改进需求</h3>
<p><em>笔者的同学已经做到了实现该墨水屏的基本功能，如天气时钟显示及SD卡读写与文件阅读等；但可能是因为赶进度，笔者在接手后发</em></p>
<p><em>现，有些地方还存在可以优化的地方。大致如下：</em></p>
<br>
<ul>
<li><strong>整个UI的设计稍显单调。</strong></li>
<li><strong>整个页面切换是程线性的，不够灵活。</strong></li>
<li><strong>网络连接是在代码层面进行更改，过于繁琐。</strong></li>
</ul>
<br>
<img src="https://pic.imgdb.cn/item/6301e24a16f2c2beb15305f2.png" alt="image-20220715133600887" style="zoom: 33%;" />
<p>​																		<em><mark>（图为原项目UI）</mark></em></p>
<br>
<hr />
<br>
<h3 id="13方案设计"><a class="markdownIt-Anchor" href="#13方案设计"></a> 1.3	方案设计</h3>
<p><em>针对前面提及的可优化方向，笔者开始着手进行相关的优化；</em></p>
<p><strong><em>大致可以分成下列三个部分</em>:</strong></p>
<h4 id="131ui设计"><a class="markdownIt-Anchor" href="#131ui设计"></a> 1.3.1	UI设计</h4>
<h5 id="1311-优化方向"><a class="markdownIt-Anchor" href="#1311-优化方向"></a> 1.3.1.1    优化方向</h5>
<p><em>笔者发现原UI基本上只有文字的描述，且很多地方留有大片的空白；在感官上，笔者主观地认为稍微显得有些单调。</em></p>
<p><strong>故笔者认为在UI层面可以优化的方向大致有以下两点：</strong></p>
<br>
<ul>
<li>
<p><em>其一： 可以考虑在文字的基础上增加图像符号的描述，可能会比单纯文字表达效果好一些。</em></p>
</li>
<li>
<p><em>其二：可以尝试在整个屏幕空白的地方，填充进一些比较小的状态显示；例如：<strong>时间显示</strong>、<strong>网络显示</strong>、<strong>电量显示</strong>等。</em></p>
</li>
</ul>
<br>
<hr />
<h5 id="1312-ui方案"><a class="markdownIt-Anchor" href="#1312-ui方案"></a> 1.3.1.2   UI方案</h5>
<p><strong>在经过一段时间的UI布局尝试后，笔者最终决定将整个UI划分为大致三个板块：</strong></p>
<ul>
<li>其一：最左边的图标或logo显示，醒目且清楚的表示当前页面的功能</li>
<li>其二：是最下面的备注显示，通过小字文字的显示，对每个页面的按键操作进行简单的说明。</li>
<li>其三：右边板块作为功能的选择板块，进行功能的选择和进入。</li>
</ul>
<img src="https://pic.imgdb.cn/item/6301e25716f2c2beb1530c29.png" alt="image-20220715153810006" style="zoom:50%;" />
<p>​																				     <em><mark>（图为阅读页面UI）</mark></em></p>
<br>
<hr />
<h4 id="132菜单设计"><a class="markdownIt-Anchor" href="#132菜单设计"></a> 1.3.2	菜单设计</h4>
<br>
<p><em>因为原项目是通过线性的方式进行界面的切换，笔者认为不够灵活；故考虑采用<strong>多级菜单</strong>的方式，进行功能的切换。</em></p>
<h5 id="1321-设计方向"><a class="markdownIt-Anchor" href="#1321-设计方向"></a> 1.3.2.1  设计方向</h5>
<p>笔者认为，多级菜单本质就是多线程，多状态；</p>
<br>
<p>故设计方向可以分成几个：</p>
<ol>
<li><em>采用操作系统的多线程管理。</em></li>
<li><em>采用有限状态机（FSM）进行多状态的切换。</em></li>
<li>其他的方式，如遍历的方式等。</li>
</ol>
<br>
<p>(因本项目采用的主控是ESP8266，本身硬件外设条件是比较匮乏的；而且在这种相对较小型的项目中使用<mark>操作系统</mark>，实在是没必要，徒增项目的复杂度，故最终还是采用 <strong><mark>有限状态机</mark></strong> 的方式来对项目进行管理)</p>
<br>
<hr />
<h5 id="1322-最终方案"><a class="markdownIt-Anchor" href="#1322-最终方案"></a> 1.3.2.2    最终方案</h5>
<br>
<p><em>用状态机来设计多级菜单，也有着多种方式；比如常见的直接定义好菜单和子菜单的索引</em></p>
<p><strong>例如：</strong></p>
<p><img src="https://pic.imgdb.cn/item/6301e27216f2c2beb1531ce6.jpg" alt="img" /></p>
<p>为了方便后续维护，功能添加等，笔者最终选择了 <mark>「基于事件的表驱动菜单框架的设计方法」</mark></p>
<p><em>「具体的代码实现在这里不详叙，详见下面的嵌入式设计部分」</em></p>
<br>
<hr />
<h4 id="133网络设计"><a class="markdownIt-Anchor" href="#133网络设计"></a> 1.3.3	网络设计</h4>
<p>原项目是通过在代码层面，定义好网络的<strong>ssid</strong>和<strong>password</strong>，并使得在开机的时候自动连接。</p>
<p>笔者认为，这样做适用性和泛用性太差，且修改繁琐，故弃用。</p>
<br>
<h5 id="1331方案设计"><a class="markdownIt-Anchor" href="#1331方案设计"></a> 1.3.3.1	方案设计</h5>
<p>这部分的设计，笔者本想直接套用市面上主流的方案，（即扫描附近网络，选择网络，输入密码以连接）。但最终发现，在本项目只有两</p>
<p>个有效功能按键的情况下，进行按键密码输入实在过于麻烦和繁琐。</p>
<br>
<p>因为笔者同时参加过RM的比赛，其中裁判系统的 <strong><mark>主控模块</mark></strong> 也是需要连接网络来与服务器进行通信；同样功能按键不足，主控模块选择以默认密码来连接网络，（即使用一个专用网络，将密码设置为“12345678”来连接）；</p>
<br>
<p>故笔者借鉴这一设计，<strong>最终方案</strong>为：</p>
<p><em>（通过扫描附近网络，选择网络以进行连接，通过建立一个<mark>密码库</mark>储存常用密码，只要密码是其中一个即可成功连接）</em></p>
<p><img src="https://pic.imgdb.cn/item/6301e28f16f2c2beb1532b2b.png" alt="image-20220715144919558" /></p>
<p>​																			     <em><mark>（图为DJI的裁判系统主控模块）</mark></em></p>
<br>
<hr />
<h3 id="14开发规划"><a class="markdownIt-Anchor" href="#14开发规划"></a> 1.4	开发规划</h3>
<p><em>由于是第一次接触ESP8266的开发，为减少试错成本，降低开发中无所谓的时间浪费，故做出下列大致的开发流程规划。</em></p>
<h4 id="141-积累知识查阅资料"><a class="markdownIt-Anchor" href="#141-积累知识查阅资料"></a> 1.4.1 	积累知识，查阅资料。</h4>
<p>由于笔者之前并未接触过ESP8266的开发，且关于Arduino平台的开发也只局限在简单的地方，并未进行任何的相关项目开发。</p>
<p>因为在Arduino平台开发有一个很大的好处就是，它有很多官方的开源库可以进行调用，基本上为你做好了了<mark>硬件层</mark>、<mark>驱动层</mark>的相关代码</p>
<p>封装，我们只需要调用对应的<mark>API接口</mark>; 我们只专注于<mark>应用层</mark>的代码开发，能大大提高开发的速度。</p>
<br>
<p>故笔者首先就去查阅了相关封装库的对应函数接口说明，如SD卡的<mark>驱动库</mark>、<mark>WiFi支持库</mark>等；并做好了相关笔记，方便后续开发。</p>
<img src="https://pic.imgdb.cn/item/6301e29416f2c2beb1532e19.png" alt="image-20220715150711055" style="zoom:50%;" />
<p>​																			     <em><mark>（图为笔者的部分笔记内容）</mark></em></p>
<br>
<hr />
<h4 id="142技术验证"><a class="markdownIt-Anchor" href="#142技术验证"></a> 1.4.2	技术验证</h4>
<p>在笔者的一位同学帮忙焊好PCB板子后，笔者进行各部分外设的调试测试至<mark>稳定可靠且互相解耦</mark>，这样可以确保硬件和软件解耦，避免</p>
<p>PCB和软件一起搞最后bug在哪都不知道。</p>
<br>
<h4 id="143代码框架设计"><a class="markdownIt-Anchor" href="#143代码框架设计"></a> 1.4.3	代码框架设计</h4>
<p>在完成对硬件的测试之后，就是着手对代码框架的设计，对于一个好的嵌入式项目；一定是要有一个好的<mark>代码框架</mark>，这样会有利于后续的代码维护，不然代码量一大，很容易就演变为”屎山“。</p>
<br>
<p>这里笔者针对新增加的功能，进行<mark>模块化设计</mark>和<mark>分层设计</mark>，封装成不同的文件。</p>
<p><strong>例如：菜单设计部分主要大致分成2个部分：</strong></p>
<h5 id="menuch"><a class="markdownIt-Anchor" href="#menuch"></a> menu.c/h</h5>
<img src="https://pic.imgdb.cn/item/6301e29816f2c2beb1533041.png" alt="image-20220715155127589" style="zoom: 67%;" />
<p><em>（这部分主要是为菜单框架定义了<mark>主要的结构体</mark>，<mark>枚举类型</mark>，和<mark>相关的进程函数</mark>等）</em></p>
<br>
<h5 id="menu_uich"><a class="markdownIt-Anchor" href="#menu_uich"></a> menu_ui.c/h</h5>
<img src="https://pic.imgdb.cn/item/6301e29e16f2c2beb1533306.png" alt="image-20220715155254661" style="zoom: 67%;" />
<p><em>（这部分主要提供具体的UI绘制，针对<mark>本项目</mark>进行针对特点功能的实现）</em></p>
<br>
<h4 id="144完善代码功能"><a class="markdownIt-Anchor" href="#144完善代码功能"></a> 1.4.4	完善代码功能</h4>
<p>在完成对代码框架的构建后，就是进行具体<mark>代码的填充</mark>和<mark>测试完善</mark>。</p>
<p><img src="https://pic.imgdb.cn/item/6301e2a416f2c2beb153367d.png" alt="image-20220715160121682" /></p>
<br>
<hr />
<h4 id="145-实际测试和优化"><a class="markdownIt-Anchor" href="#145-实际测试和优化"></a> 1.4.5   实际测试和优化</h4>
<p>在完成全部的代码设计后，就是多做测试，测试系统的稳定性。对笔者来说，平时打比赛的时候，一般都是只有30%的时间用于代码，其余时间都是用于上车实际</p>
<p>测试，并不断修复发现的问题和添加需要的其他功能</p>
<h2 id="二-嵌入式代码设计"><a class="markdownIt-Anchor" href="#二-嵌入式代码设计"></a> 二、嵌入式代码设计</h2>
<h3 id="21主控选型"><a class="markdownIt-Anchor" href="#21主控选型"></a> 2.1	主控选型</h3>
<br>
<p><strong>本项目由于需要连接网络，且有考虑进行物联网和网页连接开发等功能。</strong></p>
<ul>
<li>
<p><em>首先考虑支持WIFI功能，可选的大概有STM32系列外带WIFI模块、ESP32系列、ESP8266系列。</em></p>
</li>
<li>
<p><em>其次考虑开发难度和开发周期，选择对这方面支持更好的ESP系列。</em></p>
</li>
<li>
<p><em>最后选择了更便宜的ESP8266作为该项目的主控。</em></p>
</li>
</ul>
<p><em>(esp8266是成本极低且具有完整<a href="https://zh.m.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%A0%88">TCP/IP协议栈</a>的Wi-Fi控制芯片，能很好的适配项目的开发需求)。</em></p>
<br>
<hr />
<h3 id="22技术验证部分"><a class="markdownIt-Anchor" href="#22技术验证部分"></a> 2.2	技术验证部分</h3>
<p>这部分主要对应*「1.4.2」*部分内容，测试了<mark>工程开发环境</mark>；和所有要用到的<mark>外设</mark>，例如：墨水屏、按键、SD卡等。</p>
<p><img src="https://pic.imgdb.cn/item/6301e2a916f2c2beb1533940.png" alt="image-20220715162646473" /></p>
<p>​																		  <em><mark>（图为笔者的开发环境）</mark></em></p>
<br>
<h4 id="开发环境"><a class="markdownIt-Anchor" href="#开发环境"></a> <strong>开发环境</strong></h4>
<p><strong>主要选用：</strong><mark>VScode（代码编辑）</mark> + <mark>PlatformIO（用于跨平台的开发环境和统一的编译下载）</mark> + <mark>git（进行代码版本管理）</mark></p>
<br>
<hr />
<h3 id="23实际工程代码"><a class="markdownIt-Anchor" href="#23实际工程代码"></a> 2.3	实际工程代码</h3>
<br>
<p>实际工程代码这里，主要介绍笔者在项目中用到的 <strong>「基于事件的表驱动菜单框架的设计方法」</strong>，其余部分均为针对该项目的实际应用层代码和具体UI绘制，感觉不具备适用性，所以不多赘述。</p>
<br>
<h4 id="231设计目标"><a class="markdownIt-Anchor" href="#231设计目标"></a> 2.3.1	设计目标</h4>
<p>在初设计代码框架的时候，要明白自己想要达成什么样的效果；</p>
<br>
<p><strong>例如笔者的目标如下图所示：</strong></p>
<p><img src="https://pic.imgdb.cn/item/6301e2cf16f2c2beb1534a98.jpg" alt="img" /></p>
<p>​																					   			  <em><mark>（图为菜单框架即状态转换图）</mark></em></p>
<p><em>（如上图所示：笔者的需求是，能灵活实现各级菜单的跳转）</em></p>
<br>
<hr />
<h4 id="232-整体软件设计框架"><a class="markdownIt-Anchor" href="#232-整体软件设计框架"></a> 2.3.2   整体软件设计框架</h4>
<img src="https://pic.imgdb.cn/item/6301e2ae16f2c2beb1533bad.png" alt="软件框架设计" style="zoom: 80%;" />
<br>
<hr />
<h4 id="233代码部分"><a class="markdownIt-Anchor" href="#233代码部分"></a> 2.3.3	代码部分</h4>
<h5 id="menuc"><a class="markdownIt-Anchor" href="#menuc"></a> menu.c</h5>
<p><strong>核心代码：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;menu.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;menu_ui.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义菜单索引变量</span></span><br><span class="line">Key_Index sub_index;</span><br><span class="line"><span class="type">uint8_t</span>  page_current_sta = <span class="number">1</span>;		<span class="comment">//当前页码</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> flie_current_num = <span class="number">0</span>;		<span class="comment">// 当前书籍编号</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> key_value_e <span class="title function_">Key5Value_transition_function</span><span class="params">(button_status_e button5, button_status_e button0)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu_Select_Item</span><span class="params">(menu_i32 current_index, button_status_e Key5Value, button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">uint8_t</span> ui_loging_flag = <span class="number">0</span>;				<span class="comment">//将ui加载标志位置0，表示允许加载ui</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单操作表定义</span></span><br><span class="line"><span class="type">static</span> OP_MENU_PAGE g_opStruct[] =</span><br><span class="line">	&#123;</span><br><span class="line">		&#123;MAIN_PAGE, main_page_process&#125;,</span><br><span class="line">		&#123;CLOCK_PAGE, clock_page_process&#125;,</span><br><span class="line">		&#123;WEATHER_PAGE, weather_page_process&#125;,</span><br><span class="line">		&#123;CONFIGURATION_PAGE, configuration_page_process&#125;,</span><br><span class="line">		&#123;READ_PAGE, read_page_process&#125;,</span><br><span class="line">		&#123;GAME_PAGE, game_page_process&#125;,</span><br><span class="line">		&#123;SETTING_PAGE, setting_page_process&#125;,</span><br><span class="line">		&#123;SELECT_PAGE, select_page_process&#125;,</span><br><span class="line">		&#123;LANGUAGE_PAGE, language_page_process&#125;,</span><br><span class="line">		&#123;WORD_PAGE, word_page_process&#125;,</span><br><span class="line">		&#123;BOOK_PAGE, book_page_process&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//跳转到表所对应的页面</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">JUMP_Table</span><span class="params">(menu_i32 op, button_status_e Key5Value, button_status_e Key0Value)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (op &gt;= <span class="keyword">sizeof</span>(g_opStruct) / <span class="keyword">sizeof</span>(g_opStruct[<span class="number">0</span>]) || op &lt; <span class="number">0</span>) <span class="comment">// 判断该页面是否在表内（1~ 7 ）</span></span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;unknow operate!&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	g_opStruct[op].opfun(Key5Value, Key0Value); <span class="comment">// 执行操作</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单选择项</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu_Select_Item</span><span class="params">(menu_i32 current_index, button_status_e Key5Value, button_status_e Key0Value)</span></span><br><span class="line">&#123;</span><br><span class="line">	JUMP_Table(current_index, Key5Value, Key0Value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief</span></span><br><span class="line"><span class="comment"> * @param[in]   Key5Value ： 左键key5键值（左） ； Key0Value（右）</span></span><br><span class="line"><span class="comment"> * @retval      在loop函数调用</span></span><br><span class="line"><span class="comment"> * @attention</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu_Select_main</span><span class="params">(button_status_e Key5Value, button_status_e Key0Value)</span></span><br><span class="line">&#123;</span><br><span class="line">	Enter_Page(sub_index.Current_Page, Key5Value, Key0Value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       左键值转换，从具体的按键如（单击，双击转换成每个页面的对应功能）</span></span><br><span class="line"><span class="comment"> * @param[in]   button5 (左)</span></span><br><span class="line"><span class="comment"> * @retval</span></span><br><span class="line"><span class="comment"> * @attention</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">static</span> key_value_e <span class="title function_">Key5Value_transition_function</span><span class="params">(button_status_e button5, button_status_e button0)</span></span><br><span class="line">&#123;</span><br><span class="line">	button_status_e button_CS = button_none;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>		(button5 != button_none &amp;&amp; button0 == button_none) 		button_CS = button5;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (button5 == button_none &amp;&amp; button0 != button_none)		button_CS = button0;</span><br><span class="line">	<span class="keyword">else</span>															button_CS = button_none;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> (button_CS)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**************** 左按键对应键值 *******************/</span></span><br><span class="line">	<span class="comment">// key5 短按一下向下</span></span><br><span class="line">	<span class="keyword">case</span> button_click:</span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;KEY_dowm&quot;</span>);		</span><br><span class="line">		<span class="keyword">return</span> KEY_dowm;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// key5 短按2下确定</span></span><br><span class="line">	<span class="keyword">case</span> button_doubleclick:</span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;KEY_enter&quot;</span>);		</span><br><span class="line">		<span class="keyword">return</span> KEY_enter;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// key5 长按进入设置模式</span></span><br><span class="line">	<span class="keyword">case</span> button_longPressStop:</span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;KEY_setting&quot;</span>);		</span><br><span class="line">		<span class="keyword">return</span> KEY_setting;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**************** 右按键对应键值 *******************/</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// key0 长按返回主页面</span></span><br><span class="line">	<span class="keyword">case</span> button_longPressStart2:</span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;KEY_home&quot;</span>);		</span><br><span class="line">		<span class="keyword">return</span> KEY_home;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// key0 短按向上</span></span><br><span class="line">	<span class="keyword">case</span> button_click2:</span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;KEY_up&quot;</span>);		</span><br><span class="line">		<span class="keyword">return</span> KEY_up;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// key0 短按2下返回</span></span><br><span class="line">	<span class="keyword">case</span> button_doubleclick2:</span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;KEY_esc&quot;</span>);		</span><br><span class="line">		<span class="keyword">return</span> KEY_esc;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> KEY_none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">return_UI_loging_flag</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> ui_loging_flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************************************************************************************************************/</span></span><br><span class="line"><span class="comment">/*********************************************************** 进程处理 **********************************************************/</span></span><br><span class="line"><span class="comment">/************************************************************************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       主页面处理</span></span><br><span class="line"><span class="comment"> * @param[in]   KeyValue ： 键值</span></span><br><span class="line"><span class="comment"> * @retval      none</span></span><br><span class="line"><span class="comment"> * @attention</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main_page_process</span><span class="params">(button_status_e Key5Value, button_status_e Key0Value)</span></span><br><span class="line">&#123;</span><br><span class="line">	RTC_get_data_count++;    <span class="comment">// 计数增加，超过一定值重新更新数据</span></span><br><span class="line">	main_page_ui_process(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">switch</span> (Key5Value)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="comment">// 单击进入菜单选择</span></span><br><span class="line">	<span class="keyword">case</span> button_click:</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// 进入选择界面</span></span><br><span class="line">		ui_loging_flag = <span class="number">0</span>;     <span class="comment">// 当按键按下时，将ui加载标志位置0，表示允许加载ui</span></span><br><span class="line">		Enter_Page(SELECT_PAGE, Key5Value, Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 长按进入设置模式</span></span><br><span class="line">	<span class="keyword">case</span> button_longPressStart:</span><br><span class="line">	&#123;</span><br><span class="line">		ui_loging_flag = <span class="number">0</span>;     <span class="comment">// 当按键按下时，将ui加载标志位置0，表示允许加载ui</span></span><br><span class="line">		Enter_Page(SETTING_PAGE, Key5Value, Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       菜单页面处理</span></span><br><span class="line"><span class="comment"> * @param[in]   KeyValue ： 键值</span></span><br><span class="line"><span class="comment"> * @retval      none</span></span><br><span class="line"><span class="comment"> * @attention</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">select_page_process</span><span class="params">(button_status_e Key5Value, button_status_e Key0Value)</span></span><br><span class="line">&#123;</span><br><span class="line">	select_page_ui_process();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> (Key5Value_transition_function(Key5Value, Key0Value))</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> KEY_dowm:</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// 临界条件判断</span></span><br><span class="line">		(sub_index.select_current_index &lt; <span class="number">5</span>) ? (sub_index.select_current_index++) : (sub_index.select_current_index = <span class="number">1</span>);</span><br><span class="line">		display_pninter(sub_index.select_current_index);			<span class="comment">// 指针显示</span></span><br><span class="line">		Serial.println(<span class="string">&quot;down to choose&quot;</span>);</span><br><span class="line">		Serial.println(sub_index.select_current_index);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> KEY_up:</span><br><span class="line">	&#123;</span><br><span class="line">        <span class="comment">// 临界条件判断</span></span><br><span class="line">		(sub_index.select_current_index &gt; <span class="number">1</span>) ? (sub_index.select_current_index--) : (sub_index.select_current_index = <span class="number">5</span>)  ;</span><br><span class="line">		display_pninter(sub_index.select_current_index);			<span class="comment">// 指针显示</span></span><br><span class="line">		Serial.println(<span class="string">&quot;up to choose&quot;</span>);</span><br><span class="line">		Serial.println(sub_index.select_current_index);</span><br><span class="line">		<span class="comment">//main_page_ui_process(sub_index.main_current_index);    // 具体的UI绘制</span></span><br><span class="line">		<span class="keyword">break</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">case</span> KEY_enter:</span><br><span class="line">	&#123;</span><br><span class="line">		Serial.println(<span class="string">&quot;Enter the choice&quot;</span>);</span><br><span class="line">		Serial.println((sub_index.select_current_index));</span><br><span class="line">		ui_loging_flag = <span class="number">0</span>;     <span class="comment">// 当按键按下时，将ui加载标志位置0，表示允许加载ui</span></span><br><span class="line">		Enter_Page(sub_index.select_current_index, button_none, button_none);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> KEY_home:</span><br><span class="line">	&#123;</span><br><span class="line">		ui_loging_flag = <span class="number">0</span>;</span><br><span class="line">		Enter_Page(MAIN_PAGE,button_none,button_none);</span><br><span class="line">	<span class="comment">//	Enter_Page(sub_index.setting_current_index, Key5Value, Key0Value);</span></span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> KEY_esc:</span><br><span class="line">	&#123;	<span class="comment">//返回上一页</span></span><br><span class="line">		ui_loging_flag = <span class="number">0</span>;     <span class="comment">// 当按键按下时，将ui加载标志位置0，表示允许加载ui</span></span><br><span class="line">		Enter_Page(MAIN_PAGE,button_none,button_none);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ......其他进程代码</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="menuh"><a class="markdownIt-Anchor" href="#menuh"></a> menu.h</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  ****************************** Y.Z.T.****************************************</span></span><br><span class="line"><span class="comment">  * @file       menu.c/h</span></span><br><span class="line"><span class="comment">  * @brief      提供键值适配等UI菜单框架数据</span></span><br><span class="line"><span class="comment">  * @note          </span></span><br><span class="line"><span class="comment">  * @history    2022.7.8</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  @verbatim     v1.0</span></span><br><span class="line"><span class="comment">  ==============================================================================</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  ==============================================================================</span></span><br><span class="line"><span class="comment">  @endverbatim</span></span><br><span class="line"><span class="comment">  ****************************** Y.Z.T. *****************************************</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MENU_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MENU_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bsp_button.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint8_t</span> ui_loging_flag;</span><br><span class="line"><span class="comment">// 对应数据类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span>   menu_u32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">short</span> menu_u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span>  menu_u8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> menu_i32 ;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">short</span> menu_s16 ;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> menu_s8 ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 键值定义枚举</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    KEY_none  = <span class="number">0</span>,</span><br><span class="line">	  KEY_enter,          <span class="comment">// 确定</span></span><br><span class="line">    KEY_esc,            <span class="comment">// 返回</span></span><br><span class="line">    KEY_up,             <span class="comment">// 向上</span></span><br><span class="line">    KEY_dowm,           <span class="comment">// 向下</span></span><br><span class="line">    KEY_home,           <span class="comment">// home键</span></span><br><span class="line">    KEY_setting,        <span class="comment">// 设置键</span></span><br><span class="line">    KEY_game_lift,      <span class="comment">// 左转</span></span><br><span class="line">    KEY_game_right,     <span class="comment">// 右转</span></span><br><span class="line"></span><br><span class="line">&#125;key_value_e;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 各界面索引，子菜单</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Menu_Key_Index</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	menu_u8 main_current_index ;</span><br><span class="line">	menu_u8 setting_current_index ; </span><br><span class="line">	menu_u8 select_current_index ; </span><br><span class="line">  menu_u8 language_current_index;</span><br><span class="line">  menu_u8 configuration_current_index;</span><br><span class="line">  menu_u8 read_current_index;</span><br><span class="line">  </span><br><span class="line">	menu_u8 Current_Page ;      <span class="comment">// 当前页面</span></span><br><span class="line">&#125;Key_Index;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> Key_Index sub_index ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*menu_op_func)</span><span class="params">(button_status_e , button_status_e)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">OP_STRUCT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> op_menu ; 				<span class="comment">//操作菜单</span></span><br><span class="line">	menu_op_func opfun ;	<span class="comment">//操作方法</span></span><br><span class="line">&#125;OP_MENU_PAGE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*当前菜单*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	MAIN_PAGE = <span class="number">0</span>,          <span class="comment">// 主页面						</span></span><br><span class="line">	CLOCK_PAGE,             <span class="comment">// 时钟状态 </span></span><br><span class="line">	WEATHER_PAGE,           <span class="comment">// 天气状态</span></span><br><span class="line">	CONFIGURATION_PAGE,     <span class="comment">// 配置状态</span></span><br><span class="line">	READ_PAGE,              <span class="comment">// 阅读状态</span></span><br><span class="line">	GAME_PAGE,              <span class="comment">// 游戏状态 （以上是select下的子表单）</span></span><br><span class="line">  SETTING_PAGE,           <span class="comment">// 设置模式（main下的子表单）</span></span><br><span class="line">	SELECT_PAGE,						<span class="comment">// 菜单    （main下的子表单）</span></span><br><span class="line">  LANGUAGE_PAGE,          <span class="comment">// 语言设置（setting下的子表单）</span></span><br><span class="line">  WORD_PAGE,              <span class="comment">// 字号设置（setting下的子表单）</span></span><br><span class="line">  BOOK_PAGE,              <span class="comment">// 书籍页面（read下的子表单）</span></span><br><span class="line">	</span><br><span class="line">&#125;OP_PAGE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu_Select_Item</span><span class="params">(menu_i32 current_index, button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* 进程处理 *********************/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">select_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">clock_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">weather_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">configuration_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">read_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">game_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">setting_page_process</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu_Select_main</span><span class="params">(button_status_e Key5Value , button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">language_page_process</span><span class="params">(button_status_e Key5Value, button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">word_page_process</span><span class="params">(button_status_e Key5Value, button_status_e Key0Value)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">book_page_process</span><span class="params">(button_status_e Key5Value, button_status_e Key0Value)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">return_UI_loging_flag</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">return_flie_current_num</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="menu_uic"><a class="markdownIt-Anchor" href="#menu_uic"></a> menu_ui.c</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  ****************************** Y.Z.T.****************************************</span></span><br><span class="line"><span class="comment">  * @file       menu_ui.c/h</span></span><br><span class="line"><span class="comment">  * @brief      提供菜单框架中UI的处理，储存UI绘制的进程函数</span></span><br><span class="line"><span class="comment">  * @note</span></span><br><span class="line"><span class="comment">  * @history    2022.7.8</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  @verbatim     v1.0</span></span><br><span class="line"><span class="comment">  ==============================================================================</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  ==============================================================================</span></span><br><span class="line"><span class="comment">  @endverbatim</span></span><br><span class="line"><span class="comment">  ****************************** Y.Z.T. *****************************************</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;menu_ui.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GxEPD2_BW.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Display_setup.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//主菜单初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu_Main_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	Serial.println(<span class="string">&quot;home status&quot;</span>);</span><br><span class="line"></span><br><span class="line">	sub_index.main_current_index = <span class="number">0</span>;</span><br><span class="line">	sub_index.setting_current_index = <span class="number">8</span>;</span><br><span class="line">	sub_index.select_current_index = <span class="number">1</span>;</span><br><span class="line">	sub_index.language_current_index = <span class="number">2</span>;</span><br><span class="line">	sub_index.configuration_current_index = <span class="number">20</span>;</span><br><span class="line">	sub_index.read_current_index = <span class="number">30</span>;				<span class="comment">// 不想跟指针索引重合</span></span><br><span class="line"></span><br><span class="line">	sub_index.Current_Page = MAIN_PAGE;</span><br><span class="line"></span><br><span class="line">  	display.fillScreen(baise);  <span class="comment">// 填充屏幕</span></span><br><span class="line">	display.drawInvertedBitmap(<span class="number">50</span>, <span class="number">3</span>, Bitmap_m, <span class="number">45</span>, <span class="number">45</span>, heise);</span><br><span class="line">   BW_refresh();          <span class="comment">//黑白刷新一次</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//.....刷新回主页面的UI和状态(等待添加初始化菜单)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进入相应的页面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Enter_Page</span><span class="params">(menu_i32 index, button_status_e Key5Value , button_status_e Key0Value)</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	sub_index.Current_Page = index;</span><br><span class="line">	<span class="keyword">switch</span> (sub_index.Current_Page)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//进入主页面</span></span><br><span class="line">	<span class="keyword">case</span> MAIN_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(MAIN_PAGE, Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">		<span class="comment">// 进入时钟页面</span></span><br><span class="line">	<span class="keyword">case</span> CLOCK_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(CLOCK_PAGE,  Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">		<span class="comment">// 	进入天气界面</span></span><br><span class="line">	<span class="keyword">case</span> WEATHER_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(WEATHER_PAGE,  Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//进入配置页面</span></span><br><span class="line">	<span class="keyword">case</span> CONFIGURATION_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(CONFIGURATION_PAGE,  Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//进入阅读页面</span></span><br><span class="line">	<span class="keyword">case</span> READ_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(READ_PAGE,  Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//进入游戏页面</span></span><br><span class="line">	<span class="keyword">case</span> GAME_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(GAME_PAGE,  Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//进入设置页面</span></span><br><span class="line">	<span class="keyword">case</span> SETTING_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(SETTING_PAGE,  Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//进入设置页面</span></span><br><span class="line">	<span class="keyword">case</span> SELECT_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(SELECT_PAGE,  Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 进入菜单页面</span></span><br><span class="line">	<span class="keyword">case</span> LANGUAGE_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(LANGUAGE_PAGE,  Key5Value, Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 进入菜单页面</span></span><br><span class="line">	<span class="keyword">case</span> WORD_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(WORD_PAGE,  Key5Value, Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> BOOK_PAGE:</span><br><span class="line">	&#123;</span><br><span class="line">		Menu_Select_Item(BOOK_PAGE,  Key5Value, Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 否则返回主页面</span></span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">	&#123;	Menu_Select_Item(MAIN_PAGE, Key5Value,Key0Value);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************************/</span></span><br><span class="line"><span class="comment">/**************************** UI 业务代码 ****************************/</span></span><br><span class="line"><span class="comment">/********************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主页面UI处理</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main_page_ui_process</span><span class="params">(menu_u8 index)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(ui_loging_flag == <span class="number">0</span>)		<span class="comment">// 允许ui加载</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//BW_refresh();          //黑白刷新一次</span></span><br><span class="line">		GetData();		</span><br><span class="line">		BW_refresh();          <span class="comment">//黑白刷新一次</span></span><br><span class="line">		</span><br><span class="line">		display_main_home(<span class="string">&quot;单击以进入菜单...&quot;</span>,<span class="string">&quot;Click to enter the menu...&quot;</span>);</span><br><span class="line"></span><br><span class="line">		ui_loging_flag = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(RTC_get_data_count &gt; <span class="number">0xFFFFF</span>)		<span class="comment">// 更新数据</span></span><br><span class="line">	&#123;</span><br><span class="line">		RTC_get_data_count = <span class="number">0</span>;</span><br><span class="line">		RTC_re_count++;</span><br><span class="line">		Get_clock_data();</span><br><span class="line">		display_main_home_dynamic_UI();    <span class="comment">// 动态UI更新时间显示</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//天气页面UI处理</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">weather_page_ui_process</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(ui_loging_flag == <span class="number">0</span>)			<span class="comment">// 放里面只获取一次 ，不会动态更新</span></span><br><span class="line">	&#123;</span><br><span class="line">		GetData();</span><br><span class="line">		<span class="comment">//BW_refresh();          //黑白刷新一次</span></span><br><span class="line">		BW_refresh();</span><br><span class="line">		get_time_weather();  <span class="comment">//如果wifi_flag 为1，则可以刷新时间和天气</span></span><br><span class="line"></span><br><span class="line">		ui_loging_flag = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ....................其他业务代码</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="menu_uih"><a class="markdownIt-Anchor" href="#menu_uih"></a> menu_ui.h</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  ****************************** Y.Z.T.****************************************</span></span><br><span class="line"><span class="comment">  * @file       menu_ui.c/h</span></span><br><span class="line"><span class="comment">  * @brief      提供菜单框架中UI的处理</span></span><br><span class="line"><span class="comment">  * @note</span></span><br><span class="line"><span class="comment">  * @history    2022.7.8</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  @verbatim     v1.0</span></span><br><span class="line"><span class="comment">  ==============================================================================</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  ==============================================================================</span></span><br><span class="line"><span class="comment">  @endverbatim</span></span><br><span class="line"><span class="comment">  ****************************** Y.Z.T. *****************************************</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MENU_UI_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MENU_UI_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;menu.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu_Main_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Enter_Page</span><span class="params">(menu_i32 index, button_status_e Key5Value, button_status_e Key0Value)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main_page_ui_process</span><span class="params">(menu_u8 index)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">weather_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">clock_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">select_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">setting_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">language_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">word_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">configuration_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">read_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">book_page_ui_process</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="三-硬件pcb设计"><a class="markdownIt-Anchor" href="#三-硬件pcb设计"></a> 三、硬件PCB设计</h2>
<p><em>硬件设计部分由笔者的同学之前就完成了，笔者并未特别了解，故不多赘述。仅指出存在的问题。</em></p>
<p><strong>（在此，感谢笔者的同学之前的工作）</strong></p>
<h3 id="31原理图"><a class="markdownIt-Anchor" href="#31原理图"></a> 3.1原理图</h3>
<br>
<p><img src="https://pic.imgdb.cn/item/6301e2b316f2c2beb1533e22.png" alt="image-20220715172715788" /></p>
<hr />
<h3 id="32存在的问题"><a class="markdownIt-Anchor" href="#32存在的问题"></a> 3.2	存在的问题</h3>
<h4 id="321-下载电路"><a class="markdownIt-Anchor" href="#321-下载电路"></a> 3.2.1   下载电路</h4>
<p>该项目的pcb并未设计自动下载电路，只是在IO0上放置一个开关，用于模拟时序。导致在下载的时候，会稍微麻烦和浪费时间一些。</p>
<p><img src="https://pic.imgdb.cn/item/6301e2da16f2c2beb1534f8e.jpg" alt="preview" /></p>
<p>​																			   			  <em><mark>（图为下载电路图）</mark></em></p>
<br>
<hr />
<h4 id="322引脚共用"><a class="markdownIt-Anchor" href="#322引脚共用"></a> 3.2.2	引脚共用</h4>
<br>
<p>因为ESP8266引脚较少，导致以下两个问题：</p>
<ul>
<li>
<p><strong>屏幕刷新的DC引脚</strong>与<strong>按键0共用</strong>；（屏幕刷新时，按右键容易导致死机）</p>
</li>
<li>
<p><strong>SD卡的SC引脚</strong>与<strong>按键5</strong>共用（调用按键后必须卸载SD卡再挂载SD卡）</p>
</li>
</ul>
<br>
<h2 id="四-总结与展望"><a class="markdownIt-Anchor" href="#四-总结与展望"></a> 四、总结与展望</h2>
<h3 id="41开发总结"><a class="markdownIt-Anchor" href="#41开发总结"></a> 4.1	开发总结</h3>
<p>在这次项目中，笔者主要收获就是将之前在开发STM32时初构的菜单框架成功用到了项目实践中；</p>
<p>接触了ESP8266的开发过程，不禁感慨，有完备的驱动库对开发来说确实是方便，不用手撸驱动，只用专注于应用层的代码，大大提高了开发效率。</p>
<p>总体来说，该项目是一个<mark>轻量级的项目</mark>, 而且笔者负责的部分实在不算多。</p>
<p>但前后也花了将近5天的时间，实在是过于墨迹了，以至于笔者到后面开发过程中，变得有些浮躁，也因此浪费了更多时间。</p>
<p>（  实在是不应该 <em>(:з」∠)</em>_   ）</p>
<br>
<hr />
<h3 id="42-展望"><a class="markdownIt-Anchor" href="#42-展望"></a> 4.2  	展望</h3>
<p>其实在【v1.0】版本开发结束后，笔者有很多功能还没有实现（比如连接网页，开发一个适合在墨水屏上的小游戏等等）。</p>
<p>因为接下来笔者还要进行备赛，故该项目先搁置，希望能在【v2.0】版本完善当前bug，添加更多功能。</p>
<h3 id="43致谢"><a class="markdownIt-Anchor" href="#43致谢"></a> 4.3	致谢</h3>
<p>在这里再次感谢笔者的同学，感谢他们之前的工作，为笔者搭建了好的开发平台，开发工作才能顺利完成 。</p>
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Ui</tag>
        <tag>单片机</tag>
        <tag>mcu</tag>
        <tag>物联网</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式C语言学习记录(二)——GNU拓展语法与C语言补充</title>
    <url>/2023/04/08/%E5%B5%8C%E5%85%A5%E5%BC%8FC%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95(%E4%BA%8C)%E2%80%94%E2%80%94GNU%E6%8B%93%E5%B1%95%E8%AF%AD%E6%B3%95%E4%B8%8EC%E8%AF%AD%E8%A8%80%E8%A1%A5%E5%85%85/</url>
    <content><![CDATA[<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.9.11」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em><br />
<br></p>
<p><strong>摘要：</strong> 记录汇总自己在嵌入式开发过程中 学习的一些零散知识</p>
<p><strong>简介:</strong>  简单汇总,方便自己查看</p>
</blockquote>
<br>
<span id="more"></span>
<p>(👇 第一部分)<br />
<a href="https://ye2020.github.io/2023/04/08/%E5%B5%8C%E5%85%A5%E5%BC%8FC%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95(%E4%B8%80)%E2%80%94%E2%80%94ARM%E6%8C%87%E4%BB%A4%E9%9B%86%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F/#more">嵌入式C语言学习记录(一) —— ARM指令集与作用域</a><br />
(👇 pdf  版)<br />
<a href="https://download.csdn.net/download/weixin_51330198/86701430?spm=1001.2014.3001.5501">pdf文件</a></p>
<br>
<hr />
<br>
<hr />
<br>
<h2 id="4️⃣-gnu-拓展语法"><a class="markdownIt-Anchor" href="#4️⃣-gnu-拓展语法"></a> 4️⃣ GNU 拓展语法</h2>
<blockquote>
<ul>
<li>ANSIC(C89)、(C99)、(C11)表示的是C语言标准</li>
<li><strong>GNU拓展语法</strong>是GUN编译器对C语言标准的拓展</li>
</ul>
</blockquote>
<br>
<h3 id="41-指定初始化"><a class="markdownIt-Anchor" href="#41-指定初始化"></a> 4.1 指定初始化</h3>
<p><code>GNU C</code> 支持指定初始化<strong>数组元素</strong>和 <strong>结构体成员</strong></p>
<p><font face="华文彩云" color=red size=5>初始化数组元素示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> b[<span class="number">100</span>] = &#123;[<span class="number">10</span>] = <span class="number">1</span>,[<span class="number">30</span>] = <span class="number">2</span>&#125;;				<span class="comment">// 给指定几个元素初始化</span></span><br><span class="line"><span class="type">int</span> b[<span class="number">100</span>] = &#123;[<span class="number">10</span> ... <span class="number">30</span>] = <span class="number">1</span>,[<span class="number">40</span> ... <span class="number">60</span>] = <span class="number">2</span>&#125;; <span class="comment">// 给某个索引范围的数组元素初始化</span></span><br></pre></td></tr></table></figure>
<br>
<blockquote>
<p><code>GNU C</code> 支持使用 <code>…</code> 表示范围拓展 , 不仅可以使用在<strong>数组初始化</strong>中 , 也可以使用在<code>switch-case</code> 中</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">switch</span>(i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="comment">/* do something */</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> ... <span class="number">4</span>:</span><br><span class="line">            <span class="comment">/* do something */</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        	</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>初始化结构体成员示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;<span class="type">test_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">test_t</span> test1 = &#123;<span class="string">&quot;name1&quot;</span>,<span class="number">10</span>&#125;;		<span class="comment">// C语言标准初始化方式(即固定顺序直接初始化)</span></span><br><span class="line">	</span><br><span class="line">    <span class="type">test_t</span> test2 = 						<span class="comment">// GNU C初始化方式(直接通过结构域名.name和.age,给结构体变量的某一个指定成员直接赋值)</span></span><br><span class="line">    &#123;</span><br><span class="line">        .name = <span class="string">&quot;name2&quot;</span>,</span><br><span class="line">        .age  =<span class="number">20</span>;</span><br><span class="line">    &#125;;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h3 id="42-语句表达式"><a class="markdownIt-Anchor" href="#42-语句表达式"></a> 4.2  语句表达式</h3>
<ul>
<li>
<p><strong>表达式:</strong>   <em>表达式就是由一系列操作符和操作数构成的式子。</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i = i++ + <span class="number">3</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>语句 :</strong>  在表达式后加一个 <code>;</code>  就构成了一条基本语句 ,  <code>;</code> 表示一条语句的结束</p>
</li>
<li>
<p><strong>语句表达式 :</strong></p>
<ul>
<li>GNU C对C语言标准作了扩展,允许在一个表达式里内嵌语句;</li>
<li>允许在表达式内部使用局部变量、for循环和goto跳转语句;</li>
</ul>
<br>
<p><strong>语句表达式格式:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(&#123;表达式<span class="number">1</span> ; 表示<span class="number">2</span> ; 表达式<span class="number">3</span> ;&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>语句表达式 <strong>最外面使用小括号<code>( )</code></strong> 括起来,里面一对 <strong>大括号<code>&#123; &#125;</code></strong> 包起来的是代码块,</li>
<li>代码块里允许内嵌各种语句。语句的格式可以是一般表达式,也可以是循环、跳转语句。</li>
<li>语句表达式的值为内嵌语句中<strong>最后一个表达式的值</strong>。</li>
</ul>
</blockquote>
</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<p>使用语句表达式求值</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    sum = </span><br><span class="line">   (&#123;</span><br><span class="line">       <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">           s = s + i;</span><br><span class="line">       	   s;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>在上面的程序中,通过语句表达式实现了从1到10的累加求和</li>
<li>因为语句表达式的值等于最后一个表达式的值,所以在for循环的后面,我们要添加一个<code>s</code>;</li>
<li><code>s</code>语句表示整个语句表达式的值 , 如果不加这一句,结果是<code>sum=0</code>。</li>
<li>如果将这一行语句改为<code>100</code>,最后<code>sum</code>的值就变成了100,这是因为语句表达式的值总等于<strong>最后一个表达式的值</strong>.</li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="421-使用实例"><a class="markdownIt-Anchor" href="#421-使用实例"></a> 4.2.1 使用实例</h4>
<blockquote>
<ul>
<li>语句表达式的主要用途在于定义功能复杂的宏。</li>
<li>使用语句表达式来定义宏,不仅可以实现复杂的功能,还能避免宏定义带来的歧义和漏洞。</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<p>定义一个宏 , 求两个数的最大值</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ANSIC */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX(x,y) ((x) &gt; (y) ? (x) : (y))	<span class="comment">// 经典宏陷阱 , 在 MAX(i++ , j++); 时会出现累加两次问题</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* GNU C */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX(x, y) (&#123;		\				<span class="comment">// 在语句表达式中定义两个临时变量,分别来暂时存储i和j的值,然后使用临时变量进行比较</span></span></span><br><span class="line">		<span class="type">int</span> _x = x;			\				<span class="comment">// 这样就避免了两次自增、自减问题。</span></span><br><span class="line">		<span class="type">int</span> _y = y;			\</span><br><span class="line">		_x &gt; _y ? _x : _y;	\</span><br><span class="line">&#125;)</span><br><span class="line">    </span><br><span class="line"><span class="comment">/* GNU C 优化*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>   max(x,y) (&#123;		\</span></span><br><span class="line"><span class="meta">    	typeof(x) _x = (x); \				<span class="comment">// typeof 关键字是GNUC 拓展的,用于获取一个变量或表达式的类型</span></span></span><br><span class="line">    	typeof(x) _y = (y); \				<span class="comment">// 使用typeof关键字来自动获取宏的 两个参数类型</span></span><br><span class="line">    	(<span class="type">void</span>)(&amp;_x == &amp;_y);	\</span><br><span class="line">    	_x &gt; _y ? _x : _y;	\</span><br><span class="line">&#125;)   </span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5>备注：</font>  <strong>为什么存在 <code>(void) (&amp;_x == &amp;_y);</code>  这个看似很多余的语句</strong></p>
<blockquote>
<p>它的作用有两个 :</p>
<ul>
<li>一是用来给用户提示一个警告,对于不同类型的指针比较,编译器会发出一个警告,提示两种数据的类型不同。</li>
<li>二是两个数进行比较运算 , 运算的结果却没有用到,有些编译器可能会给出一个<code>warning</code>,加一个<code>(void)</code>后,就可以消除这个警告。</li>
</ul>
</blockquote>
<br>
<hr />
<h3 id="43-typeof关键字"><a class="markdownIt-Anchor" href="#43-typeof关键字"></a> 4.3   <code>typeof</code>关键字</h3>
<blockquote>
<ul>
<li><code>typeof</code>是<code>GNU C</code>扩展的一个关键字 , 用来获取一个变量或表达式的类型。</li>
<li>使用<code>typeof</code>可以获取一个变量或表达式的类型。<code>typeof</code>的参数有两种形式 : <strong>表达式</strong>或<strong>类型</strong>。</li>
</ul>
</blockquote>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i;</span><br><span class="line">typeof(i) j = <span class="number">20</span>;		<span class="comment">// typeof(i) 就等于int, typeof(i)j=20 就相当于int j=20,</span></span><br><span class="line">typeof(<span class="type">int</span> *) a;		<span class="comment">//  typeof(int*)a;相当于int*a</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">()</span>;				<span class="comment">// f()函数的返回值类型是int,</span></span><br><span class="line">typeof(f()) k;			<span class="comment">// typeof(f())k ; 就相当于int k;</span></span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>其他用法：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">typeof (<span class="type">int</span> *) y;				<span class="comment">//把y定义为指向int类型的指针,相当于int *y;</span></span><br><span class="line">typeof (<span class="type">int</span>) *y;				<span class="comment">//定义一个执行int类型的指针变量y</span></span><br><span class="line">typeof (*x) y;					<span class="comment">//定义一个指针x所指向类型的指针变量y</span></span><br><span class="line">typeof (<span class="type">int</span>) y[<span class="number">4</span>];				<span class="comment">//相当于定义一个int y[4]</span></span><br><span class="line">typeof (*x) y[<span class="number">4</span>];				<span class="comment">//把y定义为指针x指向的数据类型的数组</span></span><br><span class="line">typeof (typeof (<span class="type">char</span> *)[<span class="number">4</span>]) y;	<span class="comment">//相当于定义字符指针数组 char *y[4];</span></span><br><span class="line">typeof (<span class="type">int</span> x[<span class="number">4</span>]) y; 			<span class="comment">//相当于定义 int y[4]</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h3 id="44-container_of宏"><a class="markdownIt-Anchor" href="#44-container_of宏"></a> 4.4  container_of宏</h3>
<blockquote>
<p><strong>作用 :</strong>  根据结构体某一成员的地址,获取这个<mark>结构体的首地址</mark>。</p>
<p><strong>实现原理 :</strong></p>
<ul>
<li>结构体中各个成员的地址在数值上等于结构体各成员相对于<strong>结构体首地址的偏移</strong>。</li>
<li>直接用结构体成员的地址 , 减去该成员在结构体内的偏移,就可以得到该结构体的首地址了。</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>宏定义原型：</font></p>
<p><img src="https://pic.imgdb.cn/item/632ea18f16f2c2beb1c15734.png" alt="image-20220912130718233" /></p>
<br>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> offsetof(TYPE, MEMBER) ((size_t) &amp;((TYPE *)0)-&gt;MEMBER) </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> container_of(ptr, type, member) 	(&#123; 					\											\</span></span><br><span class="line"><span class="meta">		const typeof( ((type *)0)-&gt;member ) *_mptr = (ptr);		\</span></span><br><span class="line"><span class="meta">		(type *)((char *)_mptr - offsetof(type, member) );	&#125;)</span></span><br></pre></td></tr></table></figure>
<p>可以看到这个宏有<strong>三个参数:</strong></p>
<ul>
<li><code>type</code>为结构体类型;</li>
<li><code>member</code>为结构体内的成员;</li>
<li><code>ptr</code>为结构体内成员<code>member</code>的地址。</li>
</ul>
<br>
<hr />
<br>
<h4 id="441-结构体的储存空间"><a class="markdownIt-Anchor" href="#441-结构体的储存空间"></a> 4.4.1 结构体的储存空间</h4>
<p><span id="two" name="two"></span></p>
<p><strong>编译器</strong>在给一个<strong>结构体变量</strong>分配储存空间时,有以下特点:</p>
<ul>
<li>根据每个成员的<strong>数据类型</strong>和<strong>字节对齐方式</strong>,编译器会按照结构体中各个成员的顺序,在内存中分配<strong>一片连续的空间</strong>来存储它们</li>
<li>结构体中的<strong>每个成员变量</strong>,从结构体首地址开始依次存放,每个成员变量相对于结构体首地址,都有一个<strong>固定偏移</strong>。</li>
<li>在<strong>同一个编译环境</strong>下 , 各个成员相对于结构体首地址的<strong>偏移是固定不变</strong>的 . (当然 使用<code>#pragma pack(x)</code> 或 <code>typedef __packed struct</code> 改变字节对齐方式 ,同时也会改变地址编译 )</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> <span class="title">list</span>;</span><span class="comment">//暂且将链表放在结构体的第一位</span></span><br><span class="line">    <span class="type">int</span> ID;</span><br><span class="line">    <span class="type">int</span> math;   </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>struct student</code> 的<mark>地址偏移</mark></p>
<img src="https://pic.imgdb.cn/item/632ea19516f2c2beb1c16403.png" alt="image-20220912134256201" style="zoom: 80%;" />
<br>
<p><font face="华文彩云" color=red size=5>示例2：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> 				//  <span class="title">A</span> 对齐为 4 ，大小为 16</span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">    <span class="type">int</span> a;				<span class="comment">// a 偏移为 0 </span></span><br><span class="line">    <span class="type">char</span> b;				<span class="comment">// b 偏移为 4</span></span><br><span class="line">    <span class="type">int</span> c; 				<span class="comment">// c 偏移为 8（大于 4 + 1 的 4 的最小整数倍）</span></span><br><span class="line"> 	<span class="type">char</span> d; 			<span class="comment">//  d 偏移为 12</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">    <span class="type">char</span> a1; 			<span class="comment">// a1偏移为 0</span></span><br><span class="line">    <span class="type">int</span> a2; 			<span class="comment">// a2移为 4</span></span><br><span class="line">    <span class="type">char</span> a3; 			<span class="comment">// a3移为 8</span></span><br><span class="line">    <span class="type">short</span> a4; 			<span class="comment">// a4移为 10</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>struct B</code>  的<mark>地址偏移</mark></p>
<img src="https://pic.imgdb.cn/item/64311ac50d2dde577739895b.webp" alt="在这里插入图片描述" style="zoom:80%;" />
<br>
<blockquote>
<p><strong>可以看到 ：</strong></p>
<ul>
<li>结构体中成员变量在内存中存储的其实是<strong>偏移地址</strong></li>
<li>也就是说<strong>结构体A的地址+成员变量的偏移地址 = 结构体成员变量的起始地址</strong></li>
<li>因此，可以根据结构体变量的起始地址和成员变量的偏移地址来反推出结构体A的地址。</li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="442-container_of宏实现"><a class="markdownIt-Anchor" href="#442-container_of宏实现"></a> 4.4.2  <code>container_of</code>宏实现</h4>
<h5 id="4421-type-0-member-解析"><a class="markdownIt-Anchor" href="#4421-type-0-member-解析"></a> 4.4.2.1 <code>(((type *)0)-&gt;member)</code> 解析</h5>
<p><font face="华文彩云" color=red size=5>测试代码：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">int</span> math;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&amp;age=%p\n&quot;</span>, &amp;((<span class="keyword">struct</span> student*)<span class="number">0</span>)-&gt;age);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&amp;num = %p\n&quot;</span>, &amp;((<span class="keyword">struct</span> student*)<span class="number">0</span>)-&gt;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&amp;math= %p\n&quot;</span>, &amp;((<span class="keyword">struct</span> student*)<span class="number">0</span>)-&gt;math);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>运行结果：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&amp;age = <span class="number">00000000</span></span><br><span class="line">&amp;math= <span class="number">00000004</span> </span><br><span class="line">&amp;num = <span class="number">00000008</span></span><br></pre></td></tr></table></figure>
<p><strong>如上所示:</strong></p>
<blockquote>
<ul>
<li><code>((TYPE *)0)</code>将0转换为type类型的结构体指针 (即转换为一个指向结构体类型为<code>student</code>的常量指针)</li>
<li>因为常量指针的值为0,即可以看作结构体<strong>首地址为0</strong></li>
<li>所以结构体中每个<strong>成员变量的地址</strong>即该成员相对于结构体<strong>首地址的偏移</strong>。</li>
<li><code>(((type *)0)-&gt;member)</code> 引用结构体中<code>MEMBER</code>成员。</li>
</ul>
</blockquote>
<br>
<hr />
<h5 id="4422-const-typeof-type-0-member-_mptr-ptr"><a class="markdownIt-Anchor" href="#4422-const-typeof-type-0-member-_mptr-ptr"></a> 4.4.2.2 const typeof( ((type *)0)-&gt;member ) *_mptr = (ptr);</h5>
<p><strong>这句代码意思是:</strong></p>
<ul>
<li>
<p>用<code>typeof()</code>获取结构体里<code>member</code>成员属性的类型，</p>
</li>
<li>
<p><code>typeof( ((type *)0)-&gt;member )</code> 表达式使用<code>typeof</code>关键字 ,来获取结构体成员 <code>MEMBER</code>的数据类型</p>
</li>
<li>
<p>然后定义一个该类型的<strong>临时指针变量<code>__mptr</code></strong>， 用来储存宏中参数<code>ptr</code>的值</p>
</li>
<li>
<p>并将<code>ptr</code>所指向的<code>member</code>的<strong>地址</strong>赋给<code>__mptr</code>；</p>
</li>
<li>
<p>因为结构体成员的数据类型可以是任何数据类型 , 为了让这个宏兼容各种数据类型 , 所以定义了一个临时指针变量<code>__mptr</code></p>
</li>
</ul>
<br>
<hr />
<h5 id="4423-offsetoftype-member"><a class="markdownIt-Anchor" href="#4423-offsetoftype-member"></a> 4.4.2.3 <code>offsetof(TYPE, MEMBER)</code></h5>
<blockquote>
<p><strong>作用 :</strong>  这个宏的作用就是求出 <code>MEMBER</code>相对于0地址的一个偏移值。</p>
<p><strong>原理 :</strong>　将0强制转换为一个指向<code>TYPE</code>类型的结构体常量指针 , 然后通过这个常量指针访问成员,获取成员<code>MEMBER</code>的地址, 其大小在数值上等于<code>MEMBER</code>成员在结构体<code>TYPE</code>中的偏移</p>
</blockquote>
<br>
<p>可以看到这个宏有<strong>两个参数:</strong></p>
<ul>
<li><code>TYPE</code>为结构体类型;</li>
<li><code>MEMBER</code>为结构体<code>TYPE</code>内的成员;</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font></p>
<p><code>size_t</code>是标准C库中定义的，在32位架构中被普遍定义为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="type">size_t</span>;</span><br></pre></td></tr></table></figure>
<p>而在64位架构中被定义为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">size_t</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>为了使程序有很好的移植性，因此内核使用<code>size_t</code>和，而不是<code>int</code>，<code>unsigned</code>。</p>
</blockquote>
<br>
<hr />
<h5 id="4424-type-char-_mptr-offsetoftype-member"><a class="markdownIt-Anchor" href="#4424-type-char-_mptr-offsetoftype-member"></a> 4.4…2.4  <code>(type *)((char *)_mptr - offsetof(type, member) );</code></h5>
<br>
<p><strong>这句代码的意思是:</strong></p>
<ul>
<li>取结构体某个成员<code>member</code>的地址,减去这个成员在结构体type中的偏移,得到结构体<code>type</code>的首地址。</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font></p>
<ul>
<li>把 <code>__mptr</code> 转换成 <code>char *</code> 类型， 因为 <strong><code>offsetof</code>宏</strong> 得到的偏移量是以字节为单位。</li>
<li>在语句表达式的最后  因为返回的是结构体的首地址 , 所以整个地址还必须强制转换一下,转换为<code>TYPE *</code></li>
<li>即返回一个指向 <strong><code>TYPE</code>结构体类型</strong>的<strong>指针</strong>,所以最后一个表达式中会出现一个强制类型转换<code>(TYPE *)</code></li>
</ul>
<br>
<hr />
<h4 id="445-使用实例"><a class="markdownIt-Anchor" href="#445-使用实例"></a> 4.4.5 使用实例</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">30</span>];</span><br><span class="line">    <span class="type">int</span> math;</span><br><span class="line">&#125;Student;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">        Student stu;						<span class="comment">// 定义结构体类型变量</span></span><br><span class="line">        Student *sptr = <span class="literal">NULL</span>;</span><br><span class="line">        stu.id = <span class="number">123456</span>;</span><br><span class="line">        <span class="built_in">strcpy</span>(stu.name,<span class="string">&quot;name1&quot;</span>);</span><br><span class="line">        stu.math = <span class="number">90</span>;</span><br><span class="line">    </span><br><span class="line">        sptr = container_of(&amp;stu.id,Student,id);</span><br><span class="line">   	<span class="comment">/*  宏展开为 */</span></span><br><span class="line">    <span class="comment">//  sptr = (&#123; const unsigned char  *__mptr = (&amp;stu.id); </span></span><br><span class="line">    <span class="comment">//            (Student *)( (char *)__mptr - ((size_t) &amp;((Student *)0)-&gt;id) );&#125;);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;sptr=%p\n&quot;</span>,sptr);</span><br><span class="line">    </span><br><span class="line">        sptr = container_of(&amp;stu.name,Student,name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;sptr=%p\n&quot;</span>,sptr);</span><br><span class="line">        sptr = container_of(&amp;stu.math,Student,id);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;sptr=%p\n&quot;</span>,sptr);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h3 id="46-零长度数组"><a class="markdownIt-Anchor" href="#46-零长度数组"></a> 4.6  零长度数组</h3>
<p>零长度数组定义:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">0</span>];</span><br></pre></td></tr></table></figure>
<p>它的特点是 <strong>不占用内存存储空间</strong></p>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">buffer</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">0</span>];		</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li><code>int a[0]</code> 仅仅意味着程序中通过<code>buffer</code>结构体实例的<code>a[index]</code>成员可以访问<code>len</code>之后的第<code>index</code>个地址</li>
<li>它并 没有为<code>a[]</code>数组分配内存，因此<code>sizeof（struct buffer）=sizeof（int）</code>。</li>
</ul>
</blockquote>
<br>
<p><mark>用途:</mark>  <strong>零长度数组</strong>一般很少单独使用，它常常作为结构体的一个成员，构成一个<strong>变长结构体</strong>。</p>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">buffer</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> len;	<span class="comment">// len 标志着下面数据的长度</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">0</span>];	<span class="comment">// 数组名data是一个指针常量，标识着成员变量len后面的那个地址，但其本身并不占空间。</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">buffer</span> *<span class="title">buf</span>;</span></span><br><span class="line">    <span class="type">int</span> this_length = <span class="number">20</span>;</span><br><span class="line">        </span><br><span class="line">    buf = (<span class="keyword">struct</span> buffer *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> buffer)+ this_length);</span><br><span class="line">    buf-&gt;len = this_length;</span><br><span class="line">	<span class="built_in">memset</span>(buf-&gt;a, <span class="string">&#x27;a&#x27;</span>, this_length);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">puts</span>(buf-&gt;a);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(buf);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>sizeof(buffer) + 20，即24个字节大小。其中4个字节用来存储结构体指针 buf 指向的结构体类型变量，另外20个字节空间，才是我们真正使用的内存空间。</li>
<li>使用零长度数组 ,使得这个<strong>结构体的长度</strong>可以随着程序动态的变化</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font>   <strong>零长度数组</strong>要放在结构体的最后</p>
<br>
<hr />
<h3 id="47-__attribute__-关键字"><a class="markdownIt-Anchor" href="#47-__attribute__-关键字"></a> 4.7  <code>__attribute__</code>  关键字</h3>
<br>
<blockquote>
<p><mark>说明 :</mark></p>
<ul>
<li><code>__attribute__</code>是<code>GNU C</code> 新增的一个关键字 ,  可以用来设置<strong>函数属性</strong>、<strong>变量属性</strong>和<strong>类型属性</strong>。</li>
<li>函数属性可以把一些特性添加到函数声明中，从而可以使编译器在错误检查方面的功能更强大。</li>
</ul>
<p><mark>语法格式 :</mark>  <code>__atttribute__((ATTRIBUTE))</code></p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font></p>
<ul>
<li>
<p><code>__attribute__</code>前后都有<strong>两个</strong>下划线</p>
</li>
<li>
<p><code>__attribute__</code>后面是<strong>两对小括号</strong> , 不能只写一对</p>
</li>
<li>
<p>括号里面的 <code>ATTRIBUTE</code>表示要声明的属性</p>
<ul>
<li>
<p>可以同时添加多个属性说明</p>
</li>
<li>
<p>可以选择若干个单独的<code>__attribute__</code>，或者把它们写在一起</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 写在一起 */</span></span><br><span class="line"><span class="type">char</span> c2 __attribute__((packed,aligned(<span class="number">4</span>)));			<span class="comment">// 各个属性之间用逗号隔开</span></span><br><span class="line">__attribute__((packed,aligned(<span class="number">4</span>))) <span class="type">char</span> c2 = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 单独 */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">die</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *format, ...)</span></span><br><span class="line">     __<span class="title function_">attribute__</span><span class="params">((<span class="keyword">noreturn</span>))</span></span><br><span class="line">     __<span class="title function_">attribute__</span><span class="params">((format(<span class="built_in">printf</span>, <span class="number">1</span>, <span class="number">2</span>)))</span>;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>如上所示 , 属性声明要<strong>紧挨着变量</strong> ,以上<code>C2</code>变量两种定义方式都是可行的</p>
</li>
</ul>
<br>
<hr />
<h4 id="471-变量属性说明"><a class="markdownIt-Anchor" href="#471-变量属性说明"></a> 4.7.1 变量属性说明’</h4>
<blockquote>
<p>举例说明其中几种属性</p>
</blockquote>
<br> 
<blockquote>
<p><mark>变量属性:</mark></p>
<ul>
<li>cleanup</li>
<li>aligned</li>
<li>packed</li>
<li>common</li>
<li>nocommon</li>
<li>deprecated</li>
<li>mode</li>
<li>section</li>
<li>shared</li>
<li>tls_model</li>
<li>transparent_union</li>
<li>unused</li>
<li>vector_size</li>
<li>weak</li>
<li>dllimport</li>
<li>dlexport</li>
</ul>
</blockquote>
<p><br> (官方文档 👇)</p>
<p><a href="https://gcc.gnu.org/onlinedocs/gcc-4.0.0/gcc/Variable-Attributes.html#Variable-Attributes">(变量属性说明 - 官方文档)</a></p>
<hr />
<h5 id="4711-属性-section"><a class="markdownIt-Anchor" href="#4711-属性-section"></a> 4.7.1.1 属性: <code>section</code></h5>
<blockquote>
<p><strong>作用:</strong>  在程序编译时 , 将一个<strong>函数</strong>或变量放到 目标文件( .o文件) 的指定段中 , 即放到指定的<code>section</code>中</p>
<p><strong>格式：</strong></p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>说明：</font></p>
<p>一段源程序代码在编译生成可执行文件的过程中,<strong>函数</strong>和<strong>变量</strong>是放在不同段中的 , 如图所示:</p>
<p><img src="https://pic.imgdb.cn/item/632ea19c16f2c2beb1c16d0d.png" alt="image-20220913221409508" /></p>
<ul>
<li>一个可执行文件主要由<strong>代码段</strong>、<strong>数据段</strong>、<strong>BSS段</strong>构成。</li>
<li><strong>代码段</strong>主要存放编译生成的可执行指令代码;</li>
<li><strong>数据段</strong>和<strong>BSS段</strong>用来存放全局变量、未初始化的全局变量</li>
<li>代码段、数据段和BSS段构成了一个可执行文件的主要部分。</li>
<li>此外还有其他的段 ,如<strong>只读数据段</strong>、<strong>符号表</strong> 、还包含其他一些<code>section</code></li>
</ul>
<p><br><font face="华文彩云" color=red size=5>说明：</font></p>
<p><img src="https://pic.imgdb.cn/item/632ea1a916f2c2beb1c1806c.png" alt="image-20220913222112669" /></p>
<p>​													<mark>从C程序到可执行文件</mark></p>
<br>
<hr />
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> global_val = <span class="number">8</span>;</span><br><span class="line"><span class="type">int</span> uninit_val __attribute__((section(<span class="string">&quot;.data&quot;</span>)));</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>通过 <code>__atttribute__</code> 的 <code>section</code> 属性，显式指定一个函数或变量，在编译时放到指定的 <code>section</code> 里面</li>
<li>未初始化的全局变量是放在 <code>.bss section</code> 中的，即放在 <strong>BSS 段</strong>中</li>
<li>现在通过 <code>section</code> 属性，把这个未初始化的全局变量放到<strong>数据段</strong> <code>.data</code> 中。</li>
</ul>
<br>
<hr />
<p><span id="six" name="six"></span></p>
<h5 id="4712-属性-aligned"><a class="markdownIt-Anchor" href="#4712-属性-aligned"></a> 4.7.1.2 属性: <code>aligned</code></h5>
<blockquote>
<p><strong>作用 :</strong>　指定一个变量或类型的对齐方式（使被设置的对象<strong>占用更多的空间</strong>）</p>
<p><strong>注意 :</strong>  对齐的字节数必须是<strong>2的幂次方</strong></p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font>  定义一个变量在内存中以<strong>指定字节数</strong>对齐</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x __attribute__ ((aligned (<span class="number">16</span>))) = <span class="number">0</span>;    <span class="comment">// 以16字节地址对齐</span></span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文行楷" color=red size=5>结构体对齐：</font></p>
<p>由前文 <a href="#two">结构体储存方式</a> 可知道 :</p>
<ul>
<li>结构体作为一种复合数据类型，编译器在给一个结构体变量分配存储空间时，会进行地址对齐;</li>
<li>结构体整体对齐要按结构体所有成员中最大成员字节数的整数倍进行对齐.</li>
<li>结构体成员按不同的顺序排放,可能会导致结构体整体长度不一致</li>
</ul>
<p><br><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span>		<span class="comment">// 结构体size为12 ((1 + (3)) + 4 + 2 = 10 ,补齐后为12)</span></span><br><span class="line">     <span class="type">char</span> a;		<span class="comment">// 偏移为0; 占用1字节; 填充3字节</span></span><br><span class="line">     <span class="type">int</span> b ;		<span class="comment">// 偏移为4; 占用4字节; 填充0字节</span></span><br><span class="line">     <span class="type">short</span> c ;		<span class="comment">// 偏移为8; 占用2字节; 填充2字节</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span>		<span class="comment">// 结构体size为8 ((1+(1)) + 2 + 4 = 8 )</span></span><br><span class="line">     <span class="type">char</span> a;		<span class="comment">// 偏移为0; 占用1字节; 填充1字节</span></span><br><span class="line">     <span class="type">short</span> b ;		<span class="comment">// 偏移为2; 占用2字节; 填充0字节</span></span><br><span class="line">     <span class="type">int</span> c ;		<span class="comment">// 偏移为4; 占用4字节; 填充4字节</span></span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure>
<br>
<blockquote>
<p>用<code>__attribute__(aligned())</code>属性</p>
<p>不仅可以显性指定结构体<strong>某个成员的地址对齐</strong> ; 也可以显式指定<strong>整个结构体</strong>的对齐方式</p>
</blockquote>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 让 short 型的变量 b 按4字节对齐 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span>								<span class="comment">// 结构体size为12 ((1 + (3)) + 4 + 4 = 12)</span></span><br><span class="line">     <span class="type">char</span> a;								<span class="comment">// 偏移为0; 占用1字节; 填充3字节</span></span><br><span class="line">     <span class="type">short</span> b __attribute__((aligned(<span class="number">4</span>)));	<span class="comment">// 偏移为4; 占用4字节; 填充0字节</span></span><br><span class="line">     <span class="type">int</span> c ;								<span class="comment">// 偏移为8; 占用4字节; 填充0字节</span></span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 显式指定结构体整体以16字节对齐 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span>			<span class="comment">// 结构体size为16 ((1+(1)) + 2 + 4 = 8 ; 末尾填充8个字节后长度为16)</span></span><br><span class="line">     <span class="type">char</span> a;								<span class="comment">// 偏移为0; 占用1字节; 填充1字节</span></span><br><span class="line">     <span class="type">short</span> b;								<span class="comment">// 偏移为2; 占用2字节; 填充0字节</span></span><br><span class="line">     <span class="type">int</span> c ;								<span class="comment">// 偏移为4; 占用4字节; 填充4字节</span></span><br><span class="line"> &#125;__attribute__((aligned(<span class="number">16</span>)));</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>特别注意：</font></p>
<ul>
<li>
<p>修改字节对齐方式 ,最大不能超过编译器允许的最大值;</p>
</li>
<li>
<p>如果连接器最大只支持16字节对齐，那么此时定义32字节对齐也是按16字节对齐</p>
</li>
</ul>
<br>
<hr />
<p><span id="five" name="five"></span></p>
<h5 id="4713-属性packed"><a class="markdownIt-Anchor" href="#4713-属性packed"></a> 4.7.1.3 <strong>属性：<code>packed</code></strong></h5>
<blockquote>
<p><strong>作用 :</strong>　指定一个变量或类型尽量使用<strong>最小的地址对齐方式</strong>来分配地址（一般用来设置<strong>减少地址对齐</strong>）</p>
<p><strong>注意 :</strong>  对齐的字节数必须是<strong>2的幂次方</strong></p>
<p><strong>用途 :</strong> 如用于封装结构体 , 为防止因内存空洞 导致与实际连续的寄存器地址不符合 ,则可以使用该属性.</p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span>							<span class="comment">// 结构体size为7 ((1+ 2 + 4 = 7)</span></span><br><span class="line">     <span class="type">char</span> a;							<span class="comment">// 偏移为0; 占用1字节; 填充0字节</span></span><br><span class="line">     <span class="type">short</span> b __attribute__((packed));	<span class="comment">// 偏移为1; 占用2字节; 填充0字节</span></span><br><span class="line">     <span class="type">int</span> c __attribute__((packed));		<span class="comment">// 偏移为3; 占用4字节; 填充0字节</span></span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>实际应用：</font></p>
<blockquote>
<ul>
<li>在实际应用中 , 经常可以看到<code>aligned</code> 和 <code>packed</code> <strong>一起使用</strong>，即对一个变量或类型<strong>同时使用</strong> <code>aligned</code> 和 <code>packed</code> 属性声明。</li>
<li>这样做的好处是，既<strong>避免了</strong>结构体内因地址对齐产生的<strong>内存空洞</strong>，又<strong>指定了</strong>整个结构体的<strong>对齐方式</strong>。</li>
</ul>
</blockquote>
<br>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span>							<span class="comment">// 结构体size为8 ((1+ 2 + 4 = 7 ; 末尾填充1个字节后 ,长度变为8)</span></span><br><span class="line">    <span class="type">char</span> a;							<span class="comment">// 偏移为0; 占用1字节; 填充0字节</span></span><br><span class="line">    <span class="type">short</span> b ;							<span class="comment">// 偏移为1; 占用2字节; 填充0字节</span></span><br><span class="line">    <span class="type">int</span> c ;							<span class="comment">// 偏移为3; 占用4字节; 填充1字节</span></span><br><span class="line">&#125;__attribute__((packed,aligned(<span class="number">8</span>)));</span><br></pre></td></tr></table></figure>
<p><strong>如上所示 :</strong></p>
<ul>
<li>结构体 <code>data</code> 虽然使用 <code>packed</code> 属性声明，整个<strong>长度变为7</strong>；</li>
<li>同时又使用了 <code>aligned(8)</code> 指定其按<strong>8字节地址</strong>对齐，所以编译器要在结构体后面<strong>填充1个字节</strong></li>
<li>这样整个结构体的<strong>大小就变为8字节</strong>，按8字节地址对齐。</li>
</ul>
<br>
<hr />
<h5 id="4714-属性-deprecated"><a class="markdownIt-Anchor" href="#4714-属性-deprecated"></a> 4.7.1.4 属性: <code>deprecated</code></h5>
<blockquote>
<p><strong>作用 :</strong>　弃用，如果在源文件在任何地方地方使用<code>__attribute__((deprecated))</code> 函数,编译器将会<strong>发出警告.</strong></p>
<p><strong>注意 :</strong>  该<code>deprecated</code>属性也可用于<strong>函数</strong>和<strong>类型</strong></p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__attribute__((deprecated))  <span class="type">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   test(<span class="number">1</span>);		<span class="comment">// 输出警告: void test(int a) is deprecated </span></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br> <font face="华文彩云" color=red size=5>注意：</font></p>
<p>警告仅在<strong>使用时</strong>出现，并且仅在类型应用于本身未被声明为<strong>已弃用</strong>的<strong>标识符、变量或函数</strong>时才会出现。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 变量 */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> old_var __attribute__ ((deprecated));</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> old_var;					<span class="comment">// 这里不出现警告</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">new_fn</span> <span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> old_var;					<span class="comment">// 警告仅在这里出现</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数 */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">old_fn</span> <span class="params">()</span> __<span class="title function_">attribute__</span> <span class="params">((deprecated))</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">old_fn</span> <span class="params">()</span>;						<span class="comment">// 这里不出现警告</span></span><br><span class="line"><span class="type">int</span> (*fn_ptr)() = old_fn;			<span class="comment">// 出现警告</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 类型 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> T1 __attribute__ ((deprecated));</span><br><span class="line">T1 x;											<span class="comment">// 出现警告 </span></span><br><span class="line"><span class="keyword">typedef</span> T1 T2;									<span class="comment">// 出现警告</span></span><br><span class="line">T2 y;											<span class="comment">// 不出现警告 ，因为未明确弃用 T2。</span></span><br><span class="line"><span class="keyword">typedef</span> T1 T3 __attribute__ ((deprecated));		<span class="comment">// 不出现警告，因为T3 已被明确弃用</span></span><br><span class="line">T3 z __attribute__ ((deprecated));				<span class="comment">// 不出现警告, 因为T3 已被明确弃用</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="472-函数属性说明"><a class="markdownIt-Anchor" href="#472-函数属性说明"></a> 4.7.2 函数属性说明</h4>
<blockquote>
<p>举例说明其中几种属性</p>
</blockquote>
<br>
<blockquote>
<p><mark>函数属性:</mark></p>
<table>
<thead>
<tr>
<th>alias</th>
<th>const</th>
<th>dllimport</th>
</tr>
</thead>
<tbody>
<tr>
<td>always_inline</td>
<td>destructor</td>
<td>eightbit_data</td>
</tr>
<tr>
<td>cdecl</td>
<td>deprecated</td>
<td>far</td>
</tr>
<tr>
<td>fastcall</td>
<td>format</td>
<td>format_arg</td>
</tr>
<tr>
<td>constructor</td>
<td>dllexport</td>
<td>function_vector</td>
</tr>
<tr>
<td>interrupt</td>
<td>long_call/short_call</td>
<td>malloc</td>
</tr>
<tr>
<td>model</td>
<td>naked</td>
<td>near</td>
</tr>
<tr>
<td>no_instrument_function</td>
<td>noinline</td>
<td>nonnull</td>
</tr>
<tr>
<td>noreturn</td>
<td>nothrow</td>
<td>pure</td>
</tr>
<tr>
<td>regparm</td>
<td>saveall</td>
<td>section</td>
</tr>
<tr>
<td>sentinel</td>
<td>signal</td>
<td>tiny_data</td>
</tr>
<tr>
<td>unused</td>
<td>used</td>
<td>weak</td>
</tr>
</tbody>
</table>
</blockquote>
<br>
<p>(官方文档 👇)</p>
<p><a href="https://gcc.gnu.org/onlinedocs/gcc-4.0.0/gcc/Function-Attributes.html#Function-Attributes">(函数属性说明 - 官方文档)</a></p>
<br>
<hr />
<h5 id="4721-属性-format"><a class="markdownIt-Anchor" href="#4721-属性-format"></a> 4.7.2.1 属性 : <code>format</code></h5>
<blockquote>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li>指定变参函数的参数格式检查 (用于解决在使用可变参数的函数调用时 , <strong>编译器检查不出可变参数的类型或者个数是否正确</strong>的问题)</li>
<li>作用是提示编译器检查函数调用的过程中，可变参数部分按照printf或其他的规则进行检查;</li>
<li>若参数的个数或者类型不匹配，编译过程中将会发出警告</li>
</ul>
</blockquote>
<br>
<p><strong>用途 ：</strong>　比如实现对自定义的打印函数 传入的可变参数的检查</p>
<p><strong>格式:</strong>　<code>format (archetype, string-index, first-to-check)</code></p>
<blockquote>
<ul>
<li><strong><code>archetype</code>参数 :</strong> <code>printf</code>, <code>scanf</code>,<code>strftime</code> , <code>strfmon</code></li>
<li><strong><code>string-index</code>参数 :</strong> 指定哪个参数是格式字符串参数（从 1 开始）</li>
<li><strong><code>first-to-check</code>参数 :</strong>  是要检查格式字符串的第一个参数的编号*(即从函数的第几个参数开始按上述规则进行检查)<em>。对于无法检查参数的函数，将第三个参数指定为零。</em>(在这种情况下，编译器只检查格式字符串的一致性)*</li>
<li>C++有隐式的<code>this</code>函数 , <code>string-index</code>, <code>first-to-check</code>应该向后一位开始</li>
</ul>
</blockquote>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font> 以自定义的打印函数为例</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 如下所示:</span></span><br><span class="line"><span class="comment">			printf参数表示: 告诉编译器按照 printf 函数的检查标准来检查</span></span><br><span class="line"><span class="comment">			第二个参数1表示: 格式化字符串在LOG函数的第一个传入参数</span></span><br><span class="line"><span class="comment">			第二个参数2表示: LOG函数中要替代&quot;%&quot;占位符的参数排在第二位 ; (即“…”里的第一个参数在LOG函数参数总数排在第2)*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LOG</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *fmt, ...)</span>  __<span class="title function_">attribute__</span><span class="params">((format(<span class="built_in">printf</span>,<span class="number">1</span>,<span class="number">2</span>)))</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 如下所示:</span></span><br><span class="line"><span class="comment">			LOG函数多了个新的传入参数num , 则</span></span><br><span class="line"><span class="comment">            format函数的 string-index和first-to-check参数应向后移动一位*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LOG</span><span class="params">(<span class="type">int</span> num, <span class="type">char</span> *fmt, ...)</span>  __<span class="title function_">attribute__</span><span class="params">((format(<span class="built_in">printf</span>,<span class="number">2</span>,<span class="number">3</span>)))</span>;</span><br></pre></td></tr></table></figure>
  <br>
<hr />
<h6 id="47211-拓展-变参函数的实现"><a class="markdownIt-Anchor" href="#47211-拓展-变参函数的实现"></a> 4.7.2.1.1 拓展 ——变参函数的实现</h6>
<blockquote>
<p>简单介绍怎么设计一个 变参函数 , 打印传入的实参</p>
</blockquote>
<p><br><span id="three" name="three"></span></p>
<p><strong>基本思路:</strong></p>
<ul>
<li>变参函数的参数存储由一个<strong>连续的</strong>参数列表组成，列表里存放的是每个参数的地址。</li>
<li>有一个固定参数<code>count</code> , 该参数后面连续储存着后面一系列参数的地址</li>
<li>通过获取<code>count</code>的地址 , 再通过<code>&amp;count + 1</code>就可以依次访问下一个地址</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">my_print</span><span class="params">(<span class="type">int</span> count, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *args;							<span class="comment">// 用于保存下一个参数地址(用char *类型指针实现,以兼容更多数据类型) )</span></span><br><span class="line">    args = &amp;count + <span class="number">4</span>;					<span class="comment">// 获取第一个可变参数的地址(涉及指针运算,注意每个地址大小都是4字节)</span></span><br><span class="line">    <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;*args: %d\n&quot;</span>, *args);</span><br><span class="line">        args+=<span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    my_print(<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);			<span class="comment">// 依次打印出1,2,3,4,5</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h6 id="47212-变参函数的优化"><a class="markdownIt-Anchor" href="#47212-变参函数的优化"></a> 4.7.2.1.2 变参函数的优化</h6>
<blockquote>
<p>可通过调用<strong>变参函数宏</strong> 来获取参数列表 , 解决解析参数的问题</p>
</blockquote>
 <br>
<p><font face="华文彩云" color=red size=5>说明：</font></p>
<ul>
<li><code>va_list</code></li>
</ul>
<blockquote>
<ul>
<li>通过一个类型为 <code>va_list</code> 的对象，包含了参数信息 , 称为<strong>参数指针</strong></li>
<li>它包含了栈中至少一个参数的位置 , 可以使用这个参数指针从一个可选参数移动到下一个可选参数</li>
<li>va_list 类型被定义在头文件 stdarg.h 中。</li>
</ul>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">va_list argptr;  <span class="comment">// 用 va_list 类型定义参数指针，以获取可选参数。</span></span><br></pre></td></tr></table></figure>
<br>
<ul>
<li><code>va_start</code></li>
</ul>
<blockquote>
<ul>
<li>宏 <code>va_start</code> 使用第一个可选参数的位置来初始化 <strong>参数指针</strong>。</li>
<li>该宏的第二个参数必须是该函数最后一个有名称参数的名称。</li>
<li>必须先调用该宏，才可以开始使用可选参数。</li>
</ul>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">va_start</span><span class="params">(va_list argptr, lastparam)</span>; </span><br></pre></td></tr></table></figure>
<br>
<ul>
<li><code>va_arg</code></li>
</ul>
<blockquote>
<ul>
<li>展开宏 va_arg 会得到当前 argptr 所引用的可选参数</li>
<li>同时将 <strong>参数指针</strong> 移动到列表中的下一个参数。</li>
<li>宏 <code>va_arg</code> 的第二个参数是刚刚被读入的参数的类型。</li>
</ul>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">type <span class="title function_">va_arg</span><span class="params">(va_list argptr, type)</span>;</span><br></pre></td></tr></table></figure>
<br>
<ul>
<li><code>va_end</code></li>
</ul>
<blockquote>
<ul>
<li>当不再需要使用参数指针时，必须调用宏 <code>va_end</code></li>
<li>如果想使用宏 <code>va_start</code> 或者宏 <code>va_copy</code> 来重新初始化一个之前用过的参数指针，也必须先调用宏 <code>va_end</code>。</li>
</ul>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">va_end</span><span class="params">(va_list argptr)</span>;</span><br></pre></td></tr></table></figure>
<br>
<ul>
<li><code>va_copy</code></li>
</ul>
<blockquote>
<ul>
<li>宏 <code>va_copy</code> 使用当前的 src 值来初始化参数指针 dest。</li>
<li>就可以使用 <code>dest</code> 中的备份获取从 <code>src</code> 所引用的位置开始的<strong>参数列表</strong></li>
</ul>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">va_copy</span><span class="params">(va_list dest, va_list src)</span>;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>优化后：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span>						<span class="comment">// 可变参数宏定义在stdarg.h中</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">my_print</span><span class="params">(<span class="type">int</span> count,...)</span></span><br><span class="line">&#123;</span><br><span class="line">    va_list args;						<span class="comment">// 定义一个参数指针</span></span><br><span class="line">    va_start(args,count);				<span class="comment">// 初始化参数指针</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> val = va_arg(args,<span class="type">int</span>);		<span class="comment">// 取得int类型的可变参数值</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;*args: %d\n&quot;</span>, val);		<span class="comment">// 打印取出的值</span></span><br><span class="line">    &#125;</span><br><span class="line">    va_end(args); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    my_print(<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h6 id="47213-简单日志打印函数的实现"><a class="markdownIt-Anchor" href="#47213-简单日志打印函数的实现"></a> 4.7.2.1.3  简单日志打印函数的实现</h6>
<blockquote>
<p>通过<code>vsnprintf</code>函数 , 解决<strong>打印功能</strong>实现的问题</p>
</blockquote>
<br>
<p><font face="黑体" color=red size=5>printf系列函数说明：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">       <span class="type">int</span> <span class="title function_">printf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *format, ...)</span>; 			   <span class="comment">//输出到标准输出</span></span><br><span class="line">       <span class="type">int</span> <span class="title function_">fprintf</span><span class="params">(FILE *stream, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>; <span class="comment">//输出到文件</span></span><br><span class="line">       <span class="type">int</span> <span class="title function_">sprintf</span><span class="params">(<span class="type">char</span> *str, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>;    <span class="comment">//输出到字符串str中</span></span><br><span class="line">       <span class="type">int</span> <span class="title function_">snprintf</span><span class="params">(<span class="type">char</span> *str, <span class="type">size_t</span> size, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>; <span class="comment">//按size大小输出到字符串str中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以下函数功能与上面的一一对应相同，只是在函数调用时，把上面的...对应的一个个变量用va_list调用所替代。在函数调用前ap要通过va_start()宏来动态获取。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line">       <span class="type">int</span> <span class="title function_">vprintf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *format, va_list ap)</span>;</span><br><span class="line">       <span class="type">int</span> <span class="title function_">vfprintf</span><span class="params">(FILE *stream, <span class="type">const</span> <span class="type">char</span> *format, va_list ap)</span>;</span><br><span class="line">       <span class="type">int</span> <span class="title function_">vsprintf</span><span class="params">(<span class="type">char</span> *str, <span class="type">const</span> <span class="type">char</span> *format, va_list ap)</span>;</span><br><span class="line">       <span class="type">int</span> <span class="title function_">vsnprintf</span><span class="params">(<span class="type">char</span> *str, <span class="type">size_t</span> size, <span class="type">const</span> <span class="type">char</span> *format, va_list ap)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	vsnprintf函数说明</span></span><br><span class="line"><span class="comment">  * @param[out] str : 把生成的格式化的字符串存放在这里</span></span><br><span class="line"><span class="comment">  * @param[in]  size ：接受的最大字符数(无符号数) (非字节数，UNICODE一个字符两个字节),防止产生数组越界.</span></span><br><span class="line"><span class="comment">  * @param[in]  format :指定输出格式的字符串，它决定了需要提供的可变参数的类型、个数和顺序。</span></span><br><span class="line"><span class="comment">  * @param[in]  ap  :va_list变量.</span></span><br><span class="line"><span class="comment">  * @retval    执行成功，返回最终生成字符串的长度，</span></span><br><span class="line"><span class="comment">  *       	   若生成字符串的长度大于size，则将字符串的前size个字符复制到str，同时将原串的长度返回（不包含终止符）；</span></span><br><span class="line"><span class="comment">  *            执行失败，返回负值，并置errno</span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">vsnprintf</span><span class="params">(<span class="type">char</span> *str, <span class="type">size_t</span> size, <span class="type">const</span> <span class="type">char</span> *format, va_list ap)</span>;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>代码实现：</font></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">log_printf</span><span class="params">(<span class="type">char</span> *fmt, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> log_str[LOG_OUTPUT_MAX_LEN];			<span class="comment">// 输出缓冲区(把生成的格式化的字符串存放在这里)</span></span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;								<span class="comment">// 用于记录当前已使用的长度</span></span><br><span class="line">    va_list arg;								<span class="comment">// 定义一个可变参数指针</span></span><br><span class="line">    va_start(arg, fmt);							<span class="comment">// 初始化参数指针</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* len累加用于记录已使用的缓冲区长度 ;  </span></span><br><span class="line"><span class="comment">     	(LOG_OUTPUT_MAX_LEN - len)表示缓冲区剩余长度*/</span>   	</span><br><span class="line">    len += vsnprintf(log_str, LOG_OUTPUT_MAX_LEN - len, fmt, arg);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* &amp;log_str[len]等效于( log_str + len ) 表示地址偏移,将目标缓冲区指向字符串尾部 */</span></span><br><span class="line">    len += <span class="built_in">snprintf</span>(&amp;log_str[len],LOG_OUTPUT_MAX_LEN - len, <span class="string">&quot;[len = %d]&quot;</span>,len)	<span class="comment">//&amp;log_str[len]等同于log_str + len</span></span><br><span class="line">    </span><br><span class="line">	va_end(arg);</span><br><span class="line">    </span><br><span class="line">   <span class="comment">/* 将格式化字符串输出,此处是用串口输出 */</span></span><br><span class="line">    __log_output((<span class="type">uint8_t</span> *)log_str, len);		<span class="comment">//  类似printf(&quot;%s&quot;,log_str);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    log_printf(<span class="string">&quot;test \r\n&quot;</span> );</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<p><br><font face="华文彩云" color=red size=5>运行结果：</font ></p>
<p><img src="https://pic.imgdb.cn/item/632ea1b016f2c2beb1c18a66.png" alt="image-20220917215405446" /></p>
<br>
<hr />
<h6 id="47214-日志打印函数优化"><a class="markdownIt-Anchor" href="#47214-日志打印函数优化"></a> 4.7.2.1.4  日志打印函数优化</h6>
<blockquote>
<p><strong>优化方向:</strong></p>
<ul>
<li>添加打印等级 , 根据设置的打印等级，模块打印的 log 信息也会不一样</li>
<li>添加<code>format</code>属性声明 , 用于让编译器在编译的时候 , 检查<code>log_printf</code>函数的参数格式</li>
</ul>
</blockquote>
<br>
<p><span id="four" name="four"></span></p>
<p><font face="华文彩云" color=red size=5>代码实现一：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*********************************** log.c ************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_OUTPUT_LEVEL 4			<span class="comment">// 输出等级(最大为4)</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_TIMESTAMP_EN 0			<span class="comment">// 时间信息输出使能</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_FUNCTION_EN  0			<span class="comment">// 函数信息输出使能</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_FILE_LINE_EN 0			<span class="comment">// 文件信息输出使能</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 打印等级 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_ASSERT   1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_ERROR    2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_WARINING 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_INFO     4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 打印等级输出信息表 */</span></span><br><span class="line"><span class="type">char</span> *LOG_LEVEL_TAGS[<span class="number">6</span>] = &#123;<span class="string">&quot;NULL&quot;</span>, <span class="string">&quot;ASSERT&quot;</span>, <span class="string">&quot;ERROR&quot;</span>, <span class="string">&quot;WARNING&quot;</span>, <span class="string">&quot;INFO&quot;</span>, <span class="string">&quot;DEBUG&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief     	将打印信息缓存到缓冲区</span></span><br><span class="line"><span class="comment">  * @param[out] buff : 把生成的格式化的字符串存放在这里</span></span><br><span class="line"><span class="comment">  * @param[in]  size ：接受的最大字符数(传入vsnprintf)</span></span><br><span class="line"><span class="comment">  * @param[in]  fmt  : 格式化字符串</span></span><br><span class="line"><span class="comment">  * @retval    执行成功，返回最终生成字符串的长度，</span></span><br><span class="line"><span class="comment">  *       	   </span></span><br><span class="line"><span class="comment">  * @attention  none</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">log_printf_to_buffer</span><span class="params">(<span class="type">char</span> *buff, <span class="type">int</span> size, <span class="type">char</span> *fmt, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;					<span class="comment">// 用于记录当前已使用的长度</span></span><br><span class="line">    va_list arg;  </span><br><span class="line">    va_start(arg, fmt);</span><br><span class="line">   </span><br><span class="line">    len += vsnprintf(buff, size, fmt, arg);</span><br><span class="line">    va_end(arg);</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************** log.h ************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 因为需要打印实时信息,如运行时间,当前函数和调用位置等 ; 所以使用函数宏的方式 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __log_with_level(level, ...)                                                                                                              \</span></span><br><span class="line"><span class="meta">    do                                                                                                                                       \</span></span><br><span class="line"><span class="meta">    &#123;                                                                                                                                        \</span></span><br><span class="line"><span class="meta">        char log_str[LOG_OUTPUT_MAX_LEN];                                                                                                    \</span></span><br><span class="line"><span class="meta">        int len = 0;                                                                                                                         \</span></span><br><span class="line"><span class="meta">                <span class="keyword">if</span> ((level &lt;= LOG_OUTPUT_LEVEL) &amp;&amp; (level &lt;= 5))                                                                             \</span></span><br><span class="line"><span class="meta">        &#123;                                                                                                                                    \</span></span><br><span class="line"><span class="meta">            len += snprintf(&amp;log_str[len], LOG_OUTPUT_MAX_LEN - len, <span class="string">&quot;\r\n&quot;</span>);                                                                \</span></span><br><span class="line"><span class="meta">            <span class="keyword">if</span> (LOG_TIMESTAMP_EN)                                                                                                            \</span></span><br><span class="line"><span class="meta">            &#123;                                                                                                                                \</span></span><br><span class="line"><span class="meta">                len += snprintf(&amp;log_str[len], LOG_OUTPUT_MAX_LEN - len, <span class="string">&quot;[%s]&quot;</span>,__TIME__ );                                                  \</span></span><br><span class="line"><span class="meta">            &#125;                                                                                                                                \</span></span><br><span class="line"><span class="meta">            len += snprintf(&amp;log_str[len], LOG_OUTPUT_MAX_LEN - len, <span class="string">&quot;[%s][%s]&quot;</span>, <span class="string">&quot;LOG&quot;</span>, LOG_LEVEL_TAGS[level]);                              \</span></span><br><span class="line"><span class="meta">            <span class="keyword">if</span> (LOG_FUNCTION_EN)                                                                                                             \</span></span><br><span class="line"><span class="meta">            &#123;                                                                                                                                \</span></span><br><span class="line"><span class="meta">                len += snprintf(&amp;log_str[len], LOG_OUTPUT_MAX_LEN - len, <span class="string">&quot;[%s]&quot;</span>, __FUNCTION__);                                              \</span></span><br><span class="line"><span class="meta">            &#125;                                                                                                                                \</span></span><br><span class="line"><span class="meta">            <span class="keyword">if</span> ((LOG_FILE_LINE_EN) &amp;&amp; (level &lt;= LOG_ERROR))                                                                                  \</span></span><br><span class="line"><span class="meta">            &#123;                                                                                                                                \</span></span><br><span class="line"><span class="meta">                len += snprintf(&amp;log_str[len], LOG_OUTPUT_MAX_LEN - len, <span class="string">&quot;(%s,%d)&quot;</span>, __FILE__, __LINE__);                                     \</span></span><br><span class="line"><span class="meta">            &#125;                                                                                                                                \</span></span><br><span class="line"><span class="meta">            len += log_printf_to_buffer(&amp;log_str[len], LOG_OUTPUT_MAX_LEN - len, __VA_ARGS__);                                               \</span></span><br><span class="line"><span class="meta">            printf(<span class="string">&quot;%s&quot;</span>,log_str);                                                                                                            \</span></span><br><span class="line"><span class="meta">                                                                                                                                             \</span></span><br><span class="line"><span class="meta">        &#125;                                                                                                                                    \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 各输出等级打印函数 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _log_assert(...) __log_with_level(LOG_ASSERT, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _log_error(...) __log_with_level(LOG_ERROR, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _log_waring(...) __log_with_level(LOG_WARINING, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _log_info(...) __log_with_level(LOG_INFO, __VA_ARGS__)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意:</strong>  为什么要使用do { … } while(0)</p>
<ul>
<li>为了防止宏在条件、选择等分支中展开后 ，产生歧义</li>
<li>使用do { … } while(0)这种结构 ， 在宏展开后，是一个代码块，避免发生歧义</li>
</ul>
<p><br><strong>缺陷:</strong></p>
<ul>
<li>因为 <code>__attribute__</code>  关键字不能作用于宏 , 所以没办法让编译器进行可变参数的检查</li>
<li>也无法使用<strong>内联函数</strong> , 因为使用了变参数列表 , 所以内联函数无法展开</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>代码实现二：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_OUTPUT_LEVEL 3			<span class="comment">// 输出等级(最大为4)</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	0: 关闭打印</span></span><br><span class="line"><span class="comment">	1: 只打印错误信息</span></span><br><span class="line"><span class="comment">	2: 打印警告和错误信息</span></span><br><span class="line"><span class="comment">	3: 打印所有信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 打印等级 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_ERROR    1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_WARINING 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_INFO     3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 打印函数 */</span></span><br><span class="line"><span class="type">void</span> __attribute__((format(<span class="built_in">printf</span>,<span class="number">1</span>,<span class="number">2</span>))) Log_warn(<span class="type">char</span> *fmt, ...)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 若打印等级不符合,则只输出空函数 */</span></span><br><span class="line"> <span class="meta">#<span class="keyword">if</span> (LOG_OUTPUT_LEVEL &gt;= LOG_WARINING)   </span></span><br><span class="line">    <span class="type">char</span> log_str[LOG_OUTPUT_MAX_LEN];</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">    va_list arg;</span><br><span class="line">    va_start(arg, fmt);</span><br><span class="line">    </span><br><span class="line">    len += vsnprintf(log_str, LOG_OUTPUT_MAX_LEN - len, fmt, arg);</span><br><span class="line">    </span><br><span class="line">    va_end(arg);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,log_str);  </span><br><span class="line"> <span class="meta">#<span class="keyword">endif</span>   </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __attribute__((format(<span class="built_in">printf</span>,<span class="number">1</span>,<span class="number">2</span>))) Log_info(<span class="type">char</span> *fmt, ...)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __attribute__((format(<span class="built_in">printf</span>,<span class="number">1</span>,<span class="number">2</span>))) Log_error(<span class="type">char</span> *fmt, ...)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="4722-属性-weak"><a class="markdownIt-Anchor" href="#4722-属性-weak"></a> 4.7.2.2 属性:  <code>weak</code></h5>
<blockquote>
<p><strong>作用 :</strong>　将一个<strong>强符号</strong>转换为<strong>弱符号</strong> , 可用于函数和变量</p>
<p><strong>用途 :</strong>   主要用于定义可以在用户代码中覆盖的库函数</p>
<p><strong>格式:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span>  __attribute__((weak))  func(<span class="type">void</span>);			<span class="comment">// 函数声明</span></span><br><span class="line"><span class="type">int</span>  num  __attribte__((weak);						<span class="comment">// 变量声明</span></span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>说明：</font ></p>
<ul>
<li><strong>强符号：</strong> 函数名、初始化的全局变量名；</li>
<li><strong>弱符号：</strong> 未初始化的全局变量名。</li>
</ul>
<br>
<p><strong>不同场景下的同名符号:</strong></p>
<ul>
<li><strong>（强符号 + 强符号）:</strong> 在一个工程中同时定义两个同名的<strong>函数</strong>或<strong>全局变量</strong> , 在链接器链接目标文件的时候会报<strong>重定义错误</strong></li>
<li><strong>(强符号 + 弱符号) :</strong>   在一个工程中同时定义两个同名的<strong>初始化全局变量</strong>或<strong>未初始化全局变量</strong> , 编译器一般会<strong>选用强符号</strong>，<strong>丢掉弱符号</strong>。</li>
<li><strong>(弱符号 + 弱符号) :</strong>  谁的体积大，即谁在内存中存储空间大，使用谁。</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5>使用示例：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//func.c</span></span><br><span class="line"><span class="type">int</span> a __attribute__((weak)) = <span class="number">1</span>;		<span class="comment">// 将一个初始化的全局变量声明为弱符号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">4</span>;</span><br><span class="line"><span class="type">void</span> __attribute__((weak)) func(<span class="type">void</span>);	<span class="comment">// 将一个函数声明为弱符号</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;main：a = %d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">if</span> (func)							<span class="comment">// 在调用弱符号函数时 , 先判断函数地址是否为0</span></span><br><span class="line">        func();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><strong>输出结果:</strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">main</span>: <span class="selector-tag">a</span> = <span class="number">4</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>如上所示 ：</strong></p>
<ul>
<li>链接器在链接时会选择 main.c 中的这个强符号(即a = 4)</li>
<li>当函数被声明为一个弱符号时 , 如果链接器找不到定义时 , 不会报错 ,而是将这个弱符号设置为0</li>
<li>只有当程序运行时 , 调用到这个函数时 , 才会产生内存错误</li>
</ul>
</blockquote>
<br>
<hr />
<h5 id="4723-属性-alias"><a class="markdownIt-Anchor" href="#4723-属性-alias"></a> 4.7.2.3 属性 : <code>alias</code></h5>
<blockquote>
<p><strong>作用 :</strong>  用于给函数定义一个别名</p>
<p><strong>用途 :</strong>  主要与<code>weak</code>属性一起使用 , 通过<code>alias</code>属性对旧的函数接口做封装 , 起一个新接口的名字</p>
<p><strong>格式 :</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* __f()函数定义一个别名f() , 可以通过调用f()函数来直接调用_f() */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">()</span> __<span class="title function_">attribute__</span><span class="params">((alias(<span class="string">&quot;__f&quot;</span>)))</span>;  </span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font ></p>
<ul>
<li>将<code>alias</code> 有时会和 <code>weak</code> <code>属性一起使用</code></li>
<li>如果<code>mian.c</code>新定义了<code>f()</code>函数 , 则调用的新定义的<code>f()</code>函数</li>
<li>当<code>f()</code> 没有定义时 , 就会调用<code>_f()</code>函数</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//f.c</span></span><br><span class="line"><span class="type">void</span> __f(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;__f()\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 给_f()函数声明一个别名f(), 并声明为弱符号函数 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">()</span> __<span class="title function_">attribute__</span><span class="params">((weak,alias(<span class="string">&quot;__f&quot;</span>)))</span>;	</span><br><span class="line"></span><br><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="type">void</span> __attribute__((weak)) f(<span class="type">void</span>);</span><br><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;f()\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    f();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="4724-属性-noinline-always_inline"><a class="markdownIt-Anchor" href="#4724-属性-noinline-always_inline"></a> 4.7.2.4 属性:  <code>noinline</code> &amp; <code>always_inline</code></h5>
<blockquote>
<p><strong>作用:</strong></p>
<blockquote>
<ul>
<li><strong>noinline:</strong>  通过声明<code>noinline</code>使指定的内联函数<strong>不展开</strong></li>
<li><strong>always_inline:</strong> 通过声明<code>always_inline</code>使指定的内联函数<strong>展开</strong></li>
</ul>
</blockquote>
<p><strong>用途:</strong></p>
<blockquote>
<ul>
<li>因为通过inline关键字修饰的函数 , 并不一定在编译时会展开</li>
<li>如函数体太大、存在循环、存在指针、函数调用频繁等情况 ，编译器一般不会做内联展开</li>
<li>通过使用<code>noinline</code>和<code>always_inline</code> 来<strong>显式的</strong>指定编译器是否做内联展开</li>
</ul>
</blockquote>
<p><strong>格式：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span>  <span class="keyword">inline</span> __attribute__((noinline)) <span class="type">int</span> <span class="title function_">func</span><span class="params">()</span>;</span><br><span class="line"><span class="type">static</span>  <span class="keyword">inline</span> __attribute__((always_inline)) <span class="type">int</span> <span class="title function_">func</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>
</blockquote>
<hr />
<h4 id="473-类型属性说明"><a class="markdownIt-Anchor" href="#473-类型属性说明"></a> 4.7.3 类型属性说明</h4>
<br>
<blockquote>
<p><mark>类型属性 :</mark></p>
<ul>
<li>aligned</li>
<li>packed</li>
<li>transparent_union</li>
<li>unused</li>
<li>deprecated</li>
<li>may_alias</li>
</ul>
</blockquote>
<br>
<p>(官方文档 👇)</p>
<p><a href="https://gcc.gnu.org/onlinedocs/gcc-4.0.0/gcc/Type-Attributes.html#Type-Attributes">(类型属性说明 - 官方文档)</a></p>
<br>
<hr />
<h3 id="48-内建函数"><a class="markdownIt-Anchor" href="#48-内建函数"></a> 4.8  内建函数</h3>
<blockquote>
<p><strong>内建函数 :</strong></p>
<blockquote>
<ul>
<li>GNU C提供了大量内建函数 , 内建函数是在编译器内部实现的函数 , 可以如关键字一样直接调用</li>
<li>通常以<code>__builtin</code>开头</li>
<li>主要是在编译器内部使用 , 为编译器服务的</li>
</ul>
</blockquote>
<p><br><strong>用途:</strong></p>
<blockquote>
<ul>
<li>用来处理变长参数列表；</li>
<li>用来处理程序运行异常、编译优化、性能优化；</li>
<li>查看函数运行中的底层信息、堆栈信息等；</li>
<li>C 标准库函数的内建版本。</li>
</ul>
</blockquote>
<p><br><strong>说明 :</strong></p>
<blockquote>
<ul>
<li>在开发中 , 一般不会使用内建函数</li>
<li>因为有些函数 , 有助于我们对程序运行的底层机制、编译优化等的理解</li>
<li>而且在Linux内核中也经常会使用 ， 所以还是应该去了解</li>
</ul>
</blockquote>
</blockquote>
 <br>
<hr />
<blockquote>
<p>简单介绍几种常见的内建函数</p>
</blockquote>
<h4 id="481-__builtin_return_addresslevel"><a class="markdownIt-Anchor" href="#481-__builtin_return_addresslevel"></a> 4.8.1   <code>__builtin_*return_*address(LEVEL)</code></h4>
<blockquote>
<p><strong>作用 :</strong></p>
<ul>
<li>
<p>返回当前函数或其调用者的返回地址</p>
</li>
<li>
<p>参数<code>LEVEL</code>指定调用栈的级数;</p>
<blockquote>
<ul>
<li>0 : 表示当前函数的返回地址;</li>
<li>1 :表示当前函数的调用者的返回地址;</li>
<li>2: 获取上二级函数的返回地址</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="type">int</span> *p;</span><br><span class="line">     p = __builtin_return_address(<span class="number">0</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;main return address: %p\n&quot;</span>,p);		<span class="comment">// 获取当前函数的返回地址</span></span><br><span class="line">    </span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p><br><font face="华文彩云" color=red size=5>说明：</font ></p>
<ul>
<li>C 语言函数在<strong>调用过程</strong>中，会将当前函数的<strong>返回地址</strong>、<strong>寄存器等现场信息</strong>保存在堆栈中，然后才会跳到被调用函数中去执行。</li>
<li>当被调用函数执行结束后，根据保存在堆栈中的返回地址，就可以直接返回到原来的函数中继续执行。</li>
</ul>
<br>  
<hr />
<h4 id="482-__builtin_constant_pexp"><a class="markdownIt-Anchor" href="#482-__builtin_constant_pexp"></a> 4.8.2 <code>__builtin_constant_p(EXP)</code></h4>
<blockquote>
<p><strong>作用 :</strong>  用于判断参数<code>EXP</code>在编译时 是否为<strong>常量</strong></p>
<p><strong>说明 :</strong>  如果<code>EXP</code>是常量返回 1 ; 否则返回 0</p>
<p><strong>用途 ;</strong>  主要用于宏定义中 , 根据宏的参数是常量还是变量 , 实现的方法也不同</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 根据参数是否为常数 , 实现不同的版本 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _dma_cache_sync(addr, sz, dir)        		\</span></span><br><span class="line"><span class="meta">do &#123;                            			  		\</span></span><br><span class="line"><span class="meta">    <span class="keyword">if</span> (__builtin_constant_p(dir))          		\</span></span><br><span class="line"><span class="meta">        __inline_dma_cache_sync(addr, sz, dir); 	\</span></span><br><span class="line"><span class="meta">    <span class="keyword">else</span>                        					\</span></span><br><span class="line"><span class="meta">        __arc_dma_cache_sync(addr, sz, dir);   	    \</span></span><br><span class="line"><span class="meta">&#125;                           					    \</span></span><br><span class="line"><span class="meta">while (0);</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="483-__builtin_expectexpc"><a class="markdownIt-Anchor" href="#483-__builtin_expectexpc"></a> 4.8.3 <code>__builtin_expect(exp,c)</code></h4>
<blockquote>
<p><strong>作用 :</strong>  用于为编译器提供分支预测信息 ,</p>
<p><strong>说明 :</strong>   无论参数<code>C</code>的值是什么 , 该内建函数的返回值都是<code>exp</code> , <code>c</code>必须是编译时的常数</p>
<p><strong>用途 ：</strong> <code>Linux</code>内核编程时常用的<code>likely（）</code>和<code>unlikely（）</code>就是通过<code>__builtin_expect(exp,c)</code>实现的</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 将参数x转换为布尔类型 , 然后与1和0直接做比较 , 告诉编译器x为真或假的可能性很高 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> likely_notrace(x) __builtin_expect(!!(x), 1) 		<span class="comment">// 告诉编译器x发生的概率很高</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> unlikely_notrace(x) __builtin_expect(!!(x), 0)		<span class="comment">// 告诉编译器x发生的概率很低</span></span></span><br></pre></td></tr></table></figure>
<p><br><font face="华文彩云" color=red size=5>注意：</font ></p>
<blockquote>
<p>为什么要进行两次取非操作</p>
<ul>
<li>为了把传入参数转换为布尔类型</li>
<li>如果参数x是0, 两次取非后还是0</li>
<li>如果参数是非0 , 两次取非后会变成1</li>
</ul>
</blockquote>
<br>
<hr />
<h3 id="49-可变参数宏"><a class="markdownIt-Anchor" href="#49-可变参数宏"></a> 4.9 可变参数宏</h3>
<blockquote>
<p><strong>说明 :</strong></p>
<blockquote>
<p>在标准<code>C</code>语言中支持可变参数函数( 具体见<a href="#three">变参函数的实现</a> ) ;</p>
<p>而在<code>GNU C</code>中，宏也可以接受可变数目的参数</p>
</blockquote>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font >变参宏的实现形式其实跟变参函数差不多 :</p>
<ul>
<li>用 <code>...</code> 表示<strong>变参列表</strong>，变参列表由不确定的参数组成，各个参数之间用逗号隔开。</li>
<li>可变参数宏使用 <code>__VA_ARGS__</code> 预定义<strong>标识符</strong>来表示前面的变参列表</li>
<li>预处理器在将<strong>宏展开</strong>时，会用变参列表<strong>替换</strong>掉宏定义中的所有 <code>__VA_ARGS__</code> 标识符。</li>
<li>也可以用<code>args...</code>表示变参列表 , 在后面的宏定义中直接使用<code>arg</code>表示变参</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 使用__VA_ARGS__ */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _log_info(...) __log_with_level(LOG_INFO, __VA_ARGS__)	</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用args... */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _log_info(args...) __log_with_level(LOG_INFO, arg)	</span></span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="491-拓展-宏定义中的特殊符号"><a class="markdownIt-Anchor" href="#491-拓展-宏定义中的特殊符号"></a> 4.9.1 拓展 —— 宏定义中的特殊符号</h4>
<blockquote>
<p>宏定义语句中存在一些特殊的符号 ：</p>
<ul>
<li>
<p>语句连接符 <code>\</code> ： 用于在复杂宏定义中 ， 将上下行连接起来 ， 表示上下行同属于一行</p>
</li>
<li>
<p>符号<code>#</code> ：将其后面的宏参数进行<strong>字符串化</strong>操作，简单说就是在对它所引用的<strong>宏变量</strong> 通过替换后在其左右各加上一个双引号。</p>
</li>
<li>
<p>符号<code>#@</code> :  将标记转换为相应的单个字符 , 注意：仅对单一标记转换有效 .</p>
</li>
</ul>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> B(x) #@x     <span class="comment">// B(1) 即&#x27;1&#x27; ; B(a)即&#x27;a&#x27; ; 对B(abc)无效</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>义参数连接符 <code>##</code>：主要用于将宏定义中的两个<code>token</code>链接起来，这里的<code>token</code>可以是宏的变量，也可以是任意参数或者标记。(宏展开时会将<code>##</code> 两边的字符合并 , 并删除<code>##</code>这个连接符)</li>
</ul>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> f(a,b) a##b     <span class="comment">// 输入f(a,1)输出为a1</span></span></span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<hr />
<h4 id="492-通过连接符对宏进行优化"><a class="markdownIt-Anchor" href="#492-通过连接符对宏进行优化"></a> 4.9.2 通过<code>##</code>连接符对宏进行优化</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> LOG(fmt, ...) printf(fmt, __VA_ARGS__)  <span class="comment">// 定义一个简单的可变参数宏 </span></span></span><br></pre></td></tr></table></figure>
<p><strong>如上所示 :</strong></p>
<ul>
<li>
<p>如上的定义方式存在漏洞　：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">printf(&quot;test&quot;,);		// 如果变参为空时,宏展开后会产生语法错误</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>可以使用<code>##</code>连接符来避免产生这个语法错误</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">define LOG(<span class="built_in">fmt</span>, ...) <span class="built_in">printf</span>(<span class="built_in">fmt</span>, <span class="comment">##__VA_ARGS__)</span></span> </span><br></pre></td></tr></table></figure>
</li>
<li>
<p>当变参列表非空时，## 的作用是连接 <code>fmt</code>，和变参列表，各个参数之间用逗号隔开，宏可以正常使用</p>
</li>
<li>
<p>当变参列表为空时，<code>##</code>会将固定参数 <code>fmt</code> 后面的逗号删除掉，这样宏也就可以正常使用了。</p>
</li>
</ul>
<br>
<hr />
<br>
<h2 id="5️⃣-c语言补充"><a class="markdownIt-Anchor" href="#5️⃣-c语言补充"></a> 5️⃣ C语言补充</h2>
<h3 id="51-内联函数与宏"><a class="markdownIt-Anchor" href="#51-内联函数与宏"></a> 5.1 内联函数与宏</h3>
<h4 id="511-宏与带参宏"><a class="markdownIt-Anchor" href="#511-宏与带参宏"></a> 5.1.1 宏与带参宏</h4>
<p>宏定义<code>#define</code>  本质是替换，从宏变成最终替换文本的过程称为<mark>宏展开</mark>。</p>
<br>
<h5 id="5111-带参宏"><a class="markdownIt-Anchor" href="#5111-带参宏"></a> 5.1.1.1 带参宏</h5>
<p>带参宏的用法与函数调用不完全相同，可能存在部分<strong>陷阱</strong>。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">define</span> SQUARE(X) X*X</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    x = <span class="number">5</span>;</span><br><span class="line">	SQUARE(x+<span class="number">2</span>);</span><br><span class="line">    SQUARE(++x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意 ：</strong> 上面两个运行结果分别是 <mark>17</mark> ；<mark>42</mark></p>
<p><strong>原因如下:</strong></p>
<ul>
<li><code>SQUARE(x+2);</code> 被替换成（5+2 * 5 +2 = 17）</li>
<li><code>SQUARE(++x);</code> 被替换成（++x * ++x = 6*7 =42）</li>
</ul>
</blockquote>
<br>
<h5 id="5112-总结"><a class="markdownIt-Anchor" href="#5112-总结"></a> 5.1.1.2 总结：</h5>
<ul>
<li>宏起到的作用只是替换，而不提供计算；</li>
<li>宏是在代码处不加任何验证的简单替代</li>
<li>宏不可以在运行时调试</li>
</ul>
<hr />
<h4 id="512-内联函数"><a class="markdownIt-Anchor" href="#512-内联函数"></a> 5.1.2  内联函数</h4>
<h5 id="5121-定义"><a class="markdownIt-Anchor" href="#5121-定义"></a> 5.1.2.1 定义：</h5>
<blockquote>
<p>一个用<code>inline</code>声明的函数称为内联函数 , 内联函数一般前面会使用<code>static</code>和<code>extern</code>修饰</p>
</blockquote>
<p>如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="type">double</span> <span class="title function_">square</span><span class="params">(<span class="type">double</span> x)</span>&#123;<span class="keyword">return</span> x*x;&#125;</span><br></pre></td></tr></table></figure>
<p><strong>内联函数可以定义在头文件中，因为内联函数具有内部链接，所以在多个文件中定义同一个内联函数不会产生什么问题</strong></p>
<hr />
<br>
<ul>
<li><code>inline</code>是指嵌入代码，就是在调用函数的地方不是跳转，而是把代码直接写到那里去。</li>
<li><strong>对于短小的代码来说，inline可以带来一定的效率提升</strong>，而且和函数宏相比，<code>inline</code> <strong>更安全可靠</strong>。</li>
<li>可是这个是以<strong>增加空间消耗为代价</strong>的 , 因为内联函数相当于<strong>代码复制</strong>，在运行时，将内联的代码复制上去。</li>
</ul>
<br>
<p><strong>内联函数一般使用情况：</strong></p>
<ul>
<li>一个函数不断被重复调用。</li>
<li>函数体积小</li>
<li>且函数不包含<strong>指针赋值</strong>、<strong>递归</strong>、<strong>循环</strong>等语句。</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font ></p>
<ul>
<li>一般来说，我们写小程序没有必要定义成<code>inline</code></li>
<li>但是如果要完成一个工程项目，<mark>当一个简单函数被调用多次时</mark>，则应该考虑用<code>inline</code>。</li>
<li>使用static和inline关键字修饰它 , 并可以视情况使用<code>noinline</code>或<code>always_inline</code>进行声明</li>
</ul>
<br>
<hr />
<h4 id="513-宏与内联函数"><a class="markdownIt-Anchor" href="#513-宏与内联函数"></a> 5.1.3 宏与内联函数</h4>
<p>相比于函数宏 , 内联函数具有以下<strong>优势:</strong></p>
<ul>
<li>参数类型检查。内联函数虽然具有宏的展开特性，但其本质仍是函数，编译过程中，编译器仍可以对其进行参数检查，而宏就不具备这个功能。</li>
<li>便于调试。函数支持的调试功能有断点、单步……，内联函数也同样可以。</li>
<li>返回值。内联函数有返回值，返回一个结果给调用者。这个优势是相对于 ANSI C 而言的。不过现在宏也可以有返回值和类型了，比如使用<strong>语句表达式</strong>定义的宏。</li>
<li>接口封装。有些内联函数可以用来封装一个接口，而宏不具备这个特性。</li>
</ul>
<br>
<hr />
<h5 id="5131-总结"><a class="markdownIt-Anchor" href="#5131-总结"></a> 5.1.3.1 总结：</h5>
<ul>
<li>宏是在代码处不加任何验证的简单替代，而内联函数是将代码直接插入调用处，而减少了普通函数调用时的资源消耗。</li>
<li>宏<strong>不是函数</strong>，只是在编译前（编译预处理阶段）将程序中有关字符串替换成宏体。</li>
<li><code>inline</code>函数<strong>是函数</strong>，但在编译中不单独产生代码，而是将有关代码嵌入到调用处。</li>
<li>编译器会对内联函数的参数类型做安全检查或自动类型转换（同普通函数），而宏定义则不会；</li>
</ul>
<br>
<hr />
<h4 id="514内联函数为什么用static修饰"><a class="markdownIt-Anchor" href="#514内联函数为什么用static修饰"></a> 5.1.4内联函数为什么用static修饰</h4>
<blockquote>
<p>内联函数为什么定义在头文件中</p>
<blockquote>
<ul>
<li>内联函数的使用方法和宏类似</li>
<li>通过定义在头文件中 , 任何想要使用该内联函数的源文件 ,只需要包含该头文件 ,而不需要重新定义一遍</li>
</ul>
</blockquote>
<br>
<p>内联函数为什么要用static修饰</p>
<blockquote>
<ul>
<li>因为我们使用 inline 定义的内联函数，编译器<strong>不一定会内联展开</strong></li>
<li>那么当多个文件都包含这个内联函数的定义时，编译时就有可能报<strong>重定义错误</strong>。</li>
<li>而使用 static 修饰，可以将这个函数的<strong>作用域</strong>局限在各自<strong>本地文件内</strong>，避免了重定义错误。</li>
</ul>
</blockquote>
</blockquote>
<br>
<hr />
<br>
<hr />
<h3 id="52-预定义宏"><a class="markdownIt-Anchor" href="#52-预定义宏"></a> 5.2 预定义宏</h3>
<blockquote>
<p>C标准规定了一些预定义宏( 前文关于<a href="#four">日志函数优化</a> 部分就使用了部分预定义宏)</p>
</blockquote>
<br>
<p><mark>预定义宏:</mark></p>
<p><img src="https://pic.imgdb.cn/item/632ea1b616f2c2beb1c1914d.png" alt="image-20220920221113126" /></p>
<br>
<p><strong>注意:</strong>  使用时注意这些宏的作用域</p>
<hr />
<h3 id="53-pragma"><a class="markdownIt-Anchor" href="#53-pragma"></a> 5.3 #pragma</h3>
<blockquote>
<p><strong>作用 ：</strong> <code>#pragma</code> 是一个C语言中的预处理指令，用于设定编译器的状态或者指示编译器完成一些特定的动作</p>
<p><strong>注意:</strong></p>
<blockquote>
<ul>
<li><code>#pragma</code> 所定义的很多指示字是编译器特有的</li>
<li><code>#pragma</code> 在不同的编译器间是不可移植的</li>
<li>预处理器将忽略它不认识的 <code>#pragma</code> 指令</li>
</ul>
</blockquote>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font ></p>
<p><code>ARM-MDK</code>下支持的<code>#pragma</code>指令:</p>
<p><img src="https://pic.imgdb.cn/item/632ea1bc16f2c2beb1c19b07.png" alt="image-20220922201802679" /></p>
<hr />
<blockquote>
<p>介绍其中几种 , 但不同编译器对其指令的支持不同</p>
</blockquote>
<br>
<h4 id="531-pragma-packn"><a class="markdownIt-Anchor" href="#531-pragma-packn"></a> 5.3.1  #pragma pack(n)</h4>
<blockquote>
<p><strong>作用  :</strong>   告诉编译器 ,  <em><strong>结构体或类</strong></em> 内部的成员变量相对于 <em><strong>第一个变量</strong></em> 的地址的偏移量的对齐方式</p>
<p><strong>注意  :</strong></p>
<blockquote>
<ul>
<li>在参数n缺省的情况下 , 编译器按自然边界对齐</li>
<li>当变量所需的自然对齐边界比n大时 , 按照n对齐</li>
<li>否则按自然边界对齐</li>
</ul>
</blockquote>
</blockquote>
<br>
<p>[👇  关于结构体对齐,  前文已经介绍过了 ]</p>
<p>(<a href="#two">结构体对齐</a>)</p>
<p><font face="华文彩云" color=red size=5>使用示例：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(1)		<span class="comment">// 使结构体按一字节对齐</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span>		<span class="comment">// 结构体size为7 (1 + 4 + 2 = 7)</span></span><br><span class="line">     <span class="type">char</span> a;		<span class="comment">// 偏移为0; 占用1字节; 填充0字节</span></span><br><span class="line">     <span class="type">int</span> b ;		<span class="comment">// 偏移为1; 占用4字节; 填充0字节</span></span><br><span class="line">     <span class="type">short</span> c ;		<span class="comment">// 偏移为5; 占用2字节; 填充0字节</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p><strong>如上所示:</strong></p>
<ul>
<li>结构体成员的大小取其内部<strong>长度最大</strong>的数据成员作为其大小;</li>
<li>因为pack 参数默认为 8，所以对齐参数为 4 ;</li>
<li>一般的 pack 对齐格式分别是 1，2，4，8，16;</li>
<li>在默认的对齐格式，也就是<code>#pragmapack()</code> 的情况下，会在结构体中挑选占用字节最多的类型</li>
</ul>
<br>
<hr />
<h5 id="5311-pragma-pack-和-__attribute__packed-和-__attribute__aligned"><a class="markdownIt-Anchor" href="#5311-pragma-pack-和-__attribute__packed-和-__attribute__aligned"></a> 5.3.1.1 <code>#pragma pack</code> 和  <code>__attribute__(packed)</code> 和 <code>__attribute__(aligned)</code></h5>
<br>
<ul>
<li>
<p><code>#pragma pack</code>设置结构体和联合体的字节对齐方式 , 一般参数是 1，2，4，8，16;</p>
<br>
</li>
<li>
<p><code>__attribute__ ((__packed__))</code>关键字用于指定一个<strong>变量或类型</strong>以最小的方式对齐</p>
<ul>
<li>用于告诉编译器 , <strong>不对结构体进行</strong>对齐处理 , 即按照它原有的类型大小分配空间</li>
<li><code>__attribute__ ((__packed__))</code>是个<strong>类型属性</strong>可用于单独的结构体成员,也可用于变量</li>
</ul>
<br>
</li>
<li>
<p><code>__attribute__((aligned(n)))</code> 作用与<code>#pragma pack</code>类似, 也是指定<strong>变量或类型</strong>对齐方式</p>
<ul>
<li><code>__attribute__((aligned(n)))</code>同样是一个<strong>类型属性</strong> , 不仅可以显性指定结构体<strong>某个成员的地址对齐</strong> ; 也可以显式指定<strong>整个结构体</strong>的对齐方式</li>
<li><code>__attribute__((aligned(n)))</code>的参数必须的<strong>2的幂次方</strong></li>
</ul>
</li>
</ul>
<br>
<p>[👇 关于和 , 可查看前文  ]</p>
<p>(<a href="#five"><strong>attribute</strong>(packed)</a> ; <a href="#six"><strong>attribute</strong>(aligned)</a>)</p>
<hr />
<h4 id="532-pragma-message"><a class="markdownIt-Anchor" href="#532-pragma-message"></a> 5.3.2  <code>#pragma message</code></h4>
<blockquote>
<p><strong>作用 :</strong>  在编译到该处代码时会在 <em><strong>编译输出窗口</strong></em> 中将制定 消息文本 打印出来。</p>
<p><strong>格式 :</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> message(<span class="string">&quot;消息文本&quot;</span>)</span></span><br></pre></td></tr></table></figure>
<p><strong>用途 :</strong>  可用于在版本更替的时候 , 输出版本信息等</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined(version V1.0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> message(<span class="string">&quot;version V1.0...&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> defined(version V1.3)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> message(<span class="string">&quot;version V1.3...&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> defined(version V2.0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> message(<span class="string">&quot;version V2.0...&quot;</span>)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<hr />
<h4 id="533-pragma-once"><a class="markdownIt-Anchor" href="#533-pragma-once"></a> 5.3.3  <code>#pragma once</code></h4>
<blockquote>
<p><em><strong>作用 :</strong></em>   <code>#pragma once</code> 用于保证头文件只被编译一次</p>
<p><em><strong>注意 :</strong></em>   <code>#pragma once</code> 不一定会被编译器支持</p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>使用示例：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _GLOBAL_H_				<span class="comment">// 条件编译</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _GLOBAL_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> g_value = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><em><strong>如上所示 :</strong></em></p>
<ul>
<li>条件编译
<ul>
<li>被 C 语言所支持的，并不是只包含一次头文件 , 而是包含多次</li>
<li>通过宏控制 , 可以保证头文件里面的内容只被嵌入一次</li>
<li>由于在编译之前 , 预处理器还是处理了多次 , 所以效率上比较低</li>
</ul>
</li>
<li><code>#pragma once</code>
<ul>
<li>是告诉预处理器当前文件只编译一次，所以说效率较高</li>
<li>通过与条件编译指令一起使用 , 即保证了移植性 , 又保证了效率</li>
</ul>
</li>
</ul>
<br>
<hr />
<h3 id="54-assert断言"><a class="markdownIt-Anchor" href="#54-assert断言"></a> 5.4  assert断言</h3>
<blockquote>
<p><em><strong>作用 :</strong></em>  计算表达式 <code>expression</code> ，如果其值为假（即为0），那么它先向<code>stderr</code>打印一条出错信息，然后通过调用 <code>abort</code> 来终止程序运行</p>
<br>
<p><em><strong>宏原型 :</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">assert</span> <span class="params">(<span class="type">int</span> expression)</span>;</span><br></pre></td></tr></table></figure>
<p>参数<code>expression</code>可以是一个条件表达式或逻辑表达式:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">assert(n != <span class="number">0</span> );</span><br></pre></td></tr></table></figure>
<br>
<p><em><strong>说明 :</strong></em></p>
<blockquote>
<ul>
<li>assert宏的原型定义在<code>&lt;assert.h&gt;</code>中</li>
<li><strong>assert是宏，而不是函数。</strong></li>
<li><code>assert</code> 的调用会增加额外的开销 ;</li>
<li>一般可以用于在函数开始出 <em><strong>检验传入参数</strong></em> 的合法性</li>
<li>在调试结束后，可以通过插入 <code>#define NDEBUG</code> 来禁用 <code>assert</code> 调用</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* NDEBUG宏和assert宏原型 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NDEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> assert(e) ((void)0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> assert(e)  \</span></span><br><span class="line"><span class="meta">    ((void) ((e) ? ((void)0) : __assert (#e, __FILE__, __LINE__)))</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><em><strong>注意 :</strong></em></p>
<blockquote>
<ul>
<li><strong>每个assert只检验一个条件</strong> ( 存在多个条件时 , 无法<strong>直观的判断是哪个条件失败</strong>)</li>
<li>因为<code>assert</code>只在<code>DEBUG</code>个生效 , 所以不能使用改变环境的语句 <em><strong>(如 :   <code>assert(i++ &lt; 100)</code>)</strong></em></li>
</ul>
</blockquote>
<br>
<p><em><strong>优点 :</strong></em></p>
<ul>
<li>使用<code>assert()</code>能自动标识出文件和出问题的行号</li>
<li>而且提供了一种无需更改代码就能开启或关闭的断言机制</li>
</ul>
</blockquote>
<br>
<hr />
<h3 id="55-共用体-union"><a class="markdownIt-Anchor" href="#55-共用体-union"></a> 5.5 共用体 <code>union</code></h3>
<blockquote>
<p><em><strong>一般形式:</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> 联合名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">成员表</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<br>
<p><em><strong>结构体和共用体的区别在于 :</strong></em></p>
<ul>
<li>结构体的各个成员会 <em><strong>占用不同的内存</strong></em> ，互相之间没有影响；</li>
<li>而共用体的所有成员 <em><strong>占用同一段内存</strong></em> ，修改一个成员会影响其余所有成员。</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>使用实例：</font ></p>
<hr />
<h4 id="551-数据传输"><a class="markdownIt-Anchor" href="#551-数据传输"></a> 5.5.1  数据传输</h4>
<blockquote>
<p>用于传输浮点数据</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">f_data</span> &#123;</span></span><br><span class="line">    <span class="type">float</span> f;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">uint8_t</span> byte[<span class="number">4</span>];</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>这样在进行数据传输的时候会方便很多，比如<strong>串口传输</strong>只需要把这个数组 <code>byte[4]</code> 进行传输就可以了。</p>
<br>
<hr />
<h4 id="552-管理状态变量"><a class="markdownIt-Anchor" href="#552-管理状态变量"></a> 5.5.2 管理状态变量</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">sys_status</span> &#123;</span></span><br><span class="line">    <span class="type">uint32_t</span> all_status;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">bool</span> status1 : <span class="number">1</span>;   <span class="comment">// FALSE / TRUE</span></span><br><span class="line">        <span class="type">bool</span> status2 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status3 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status4 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status5 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status6 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status7 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status8 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status9 : <span class="number">1</span>;   <span class="comment">//</span></span><br><span class="line">        <span class="type">bool</span> status10 : <span class="number">1</span>;  <span class="comment">//</span></span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125; bit;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><em><strong>如上所示 :</strong></em></p>
<ul>
<li>
<p>将各个状态封装成联合体类型;</p>
</li>
<li>
<p>联合体里边的成员是一个<code>32bit</code>的 <em><strong>整数</strong></em> 及一个 <em><strong>结构体</strong></em> ，该结构体以 <em><strong>位域</strong></em> 的形式体现。</p>
</li>
<li>
<p><strong>由于每个字段恰好为 1位 ，所以只能为其赋值 1 或 0 。</strong></p>
</li>
<li>
<p>这样就可以方便的操作 <em><strong>每个</strong></em> 状态标志位了</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sys_status.bit.status1 = <span class="number">1</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>也可以直接操作 <em><strong>全部</strong></em> 标志位</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sys_status.all_status = <span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>补充说明：</font ></p>
<blockquote>
<p><em><strong>位域:</strong></em></p>
<ul>
<li>
<p>C语言允许在一个结构体中 <em><strong>以位为单位来指定其成员所占内存长度</strong></em> ，这种以位为单位的成员称为“<em><strong>位段</strong></em>”或称“<em><strong>位域</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span> &#123;</span></span><br><span class="line">    <span class="type">uint8_t</span> a : <span class="number">2</span>;</span><br><span class="line">    <span class="type">uint8_t</span> b : <span class="number">6</span>;</span><br><span class="line">    <span class="type">uint8_t</span> c : <span class="number">4</span>;</span><br><span class="line">    <span class="type">uint8_t</span> d : <span class="number">4</span>;</span><br><span class="line">    <span class="type">uint32_t</span> i;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>利用位段能够用较少的位数存储数据， <code>:</code> 后面的数字用来限定成员变量占用的位数。</p>
</li>
</ul>
<br>
<p><em><strong>其他应用:</strong></em></p>
<ul>
<li>
<p>寄存器的封装 , 也是这样通过联合体封装的</p>
<p><img src="https://pic.imgdb.cn/item/632ea1c316f2c2beb1c1a38f.png" alt="image-20220923222927253" /></p>
</li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="553-数据的拆分组合"><a class="markdownIt-Anchor" href="#553-数据的拆分组合"></a> 5.5.3 数据的拆分组合</h4>
<p>比如想要获取一个整数的 <em><strong>各个字节</strong></em></p>
<br>
<ul>
<li>可以采用 <em><strong>移位</strong></em> 的方式 , 例如:</li>
</ul>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="attr">#define	GET_LOW_BYTE0</span><span class="comment">(x)</span>	<span class="comment">((x &gt;&gt;  0)</span> &amp; <span class="number">0</span>x<span class="number">000000</span>ff)	<span class="comment">/* 获取第0个字节 */</span></span><br><span class="line"><span class="attr">#define	GET_LOW_BYTE1</span><span class="comment">(x)</span>	<span class="comment">((x &gt;&gt;  8)</span> &amp; <span class="number">0</span>x<span class="number">000000</span>ff)	<span class="comment">/* 获取第1个字节 */</span></span><br><span class="line"><span class="attr">#define	GET_LOW_BYTE2</span><span class="comment">(x)</span>	<span class="comment">((x &gt;&gt; 16)</span> &amp; <span class="number">0</span>x<span class="number">000000</span>ff)	<span class="comment">/* 获取第2个字节 */</span></span><br><span class="line"><span class="attr">#define	GET_LOW_BYTE3</span><span class="comment">(x)</span>	<span class="comment">((x &gt;&gt; 24)</span> &amp; <span class="number">0</span>x<span class="number">000000</span>ff)	<span class="comment">/* 获取第3个字节 */</span></span><br></pre></td></tr></table></figure>
<ul>
<li>也可以使用 <em><strong>联合体</strong></em> 进行拆分:</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bit32_data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">uint32_t</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">uint8_t</span> byte0;</span><br><span class="line">        <span class="type">uint8_t</span> byte1;</span><br><span class="line">        <span class="type">uint8_t</span> byte2;</span><br><span class="line">        <span class="type">uint8_t</span> byte3;</span><br><span class="line">    &#125;byte;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">bit32_data</span> <span class="title">num</span>;</span></span><br><span class="line">    </span><br><span class="line">    num.data = <span class="number">0x12345678</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;byte0 = 0x%x\n&quot;</span>, num.byte.byte0);	<span class="comment">// 第一位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;byte1 = 0x%x\n&quot;</span>, num.byte.byte1);	<span class="comment">// 第二位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;byte2 = 0x%x\n&quot;</span>, num.byte.byte2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;byte3 = 0x%x\n&quot;</span>, num.byte.byte3);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>补充说明：</font ></p>
<ul>
<li>
<p>在使用联合体进行数据操作时 , 要明确当前平台的 <em><strong>大小端模式</strong></em></p>
<ul>
<li><strong>大小端</strong> 用于表示数据在存储器中的 <em><strong>存放顺序</strong></em> ：</li>
<li><em><strong>大端模式</strong></em> ，是指数据的低位保存在内存的 高地址 中，而数据的高位，保存在内存的 低地址 中</li>
<li><em><strong>小端模式</strong></em> ，是指数据的低位保存在内存的 低地址 中，而数据的高位，保存在内存的 高地址 中</li>
</ul>
</li>
<li>
<p>同样的,可以使用联合体来进行 <em><strong>数据组合</strong></em>  :</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">bit32_data</span> <span class="title">num</span>;</span></span><br><span class="line">    </span><br><span class="line">    num.byte.byte0 = <span class="number">0x78</span>;</span><br><span class="line"> 	num.byte.byte1 = <span class="number">0x56</span>;</span><br><span class="line"> 	num.byte.byte2 = <span class="number">0x34</span>;</span><br><span class="line"> 	num.byte.byte3 = <span class="number">0x12</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num.data = 0x%x\n&quot;</span>, num.data);	<span class="comment">// num.data即为组合后数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<br>
<hr />
<h3 id="56-const关键字"><a class="markdownIt-Anchor" href="#56-const关键字"></a> 5.6 <code>const</code>关键字</h3>
<blockquote>
<p>摘抄自<a href="https://blog.csdn.net/K_O_R_K/article/details/120579024?spm=1001.2014.3001.5502">嵌入式 C语言 补充</a></p>
</blockquote>
<p>关键字const用来定义常量，如果一个变量被const修饰，那么它的值就不能再被改变，我想一定有人有这样的疑问，C语言中不是有#define吗，干嘛还要用const呢，我想事物的存在一定有它自己的道理，所以说const的存在一定有它的合理性，与预编译指令相比，const修饰符有以下的优点：</p>
<p>预编译指令只是对值进行简单的替换，不能进行类型检查<br />
可以保护被修饰的东西，防止意外修改，增强程序的健壮性<br />
编译器通常不为普通const常量分配存储空间，而是将它们保存在符号表中，这使得它成为一个编译期间的常量，没有了存储与读内存的操作，使得它的效率也很高。<br />
下面我们从几个方面来说一下const的用法：</p>
<br>
<hr />
<h4 id="561修饰局部变量"><a class="markdownIt-Anchor" href="#561修饰局部变量"></a> 5.6.1修饰局部变量</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> n=<span class="number">5</span>; <span class="type">int</span> <span class="type">const</span> n=<span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>这两种写法是一样的，都是表示变量n的值不能被改变了;</li>
<li>需要注意的是，用<code>const</code>修饰变量时，一定要给变量初始化，否则之后就不能再进行赋值了。</li>
</ul>
<br>
<p><code>const</code> 用于修饰常量 <em><strong>静态字符串</strong></em> ，例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span>* str=<span class="string">&quot;fdsafdsa&quot;</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>如果没有 <code>const</code> 的修饰，我们可能会在后面有意无意的写 <code>str[4]=’x’</code> 这样的语句</li>
<li>这样会导致对只读内存区域的赋值，然后程序会立刻异常终止。</li>
<li>有了 <code>const</code> ，这个错误就能在编译期被发现。</li>
</ul>
<br>
<hr />
<h4 id="562常量指针与指针常量"><a class="markdownIt-Anchor" href="#562常量指针与指针常量"></a> 5.6.2常量指针与指针常量</h4>
<p><em><strong>常量指针</strong></em> 是指针指向的内容是常量，可以有一下两种定义方式。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> * n; </span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * n;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>说明：</font ></p>
<ul>
<li>
<p><em><strong>常量指针</strong></em> 说的是不能通过这个指针改变变量的值，但是还是 <em><strong>可以通过其他的引用来改变变量的值的.</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">5</span>; </span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* n=&amp;a; a=<span class="number">6</span>;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><em><strong>常量指针</strong></em> 指向的值不能改变，但是这并不是意味着指针本身不能改变， <em><strong>常量指针可以指向其他的地址。</strong></em></p>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">5</span>; <span class="type">int</span> b=<span class="number">6</span>; </span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* n=&amp;a; n=&amp;b;</span><br></pre></td></tr></table></figure>
<ul>
<li><em><strong>指针常量</strong></em> 是指指针本身是个常量，<em><strong>不能在指向其他的地址</strong></em> ，写法如下：</li>
</ul>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> *<span class="type">const</span> n;</span><br></pre></td></tr></table></figure>
<ul>
<li>指针常量指向的<strong>地址不能改变</strong>，但是地址中保存的数值是可以改变的，可以通过其他指向改地址的指针来修改。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">5</span>; </span><br><span class="line"><span class="type">int</span> *p=&amp;a;</span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> n=&amp;a;</span><br><span class="line">*p=<span class="number">8</span>;</span><br></pre></td></tr></table></figure>
<br>
<p><font face="华文彩云" color=red size=5>注意：</font ></p>
<ul>
<li>区分<strong>常量指针</strong>和<strong>指针常量</strong>的关键就在于星号的位置，以星号为分界线;</li>
<li>如果<code>const</code>在星号的左边，则为<strong>常量指针</strong>; <code>int const *n</code>;是常量指针</li>
<li>如果<code>const</code>在星号的右边则为<strong>指针常量</strong>。<code>int *const n</code>是指针常量</li>
</ul>
<br>
<p><em><strong>指向常量的常指针</strong></em></p>
<ul>
<li>是以上两种的结合，指针 <em><strong>指向的位置不能改变</strong></em> 并且也 <em><strong>不能通过这个指针改变变量的值</strong></em></li>
<li>但是依然可以通过其他的 <em><strong>普通指针改变变量的值</strong></em> 。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="563-修饰函数的参数"><a class="markdownIt-Anchor" href="#563-修饰函数的参数"></a> 5.6.3 修饰函数的参数</h4>
<p>根据<strong>常量指针</strong>与<strong>指针常量</strong>，<code>const</code>修饰函数的参数也是分为三种情况:</p>
<ul>
<li>
<p>防止修改指针指向的内容</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StringCopy</span><span class="params">(<span class="type">char</span> *strDestination, <span class="type">const</span> <span class="type">char</span> *strSource)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>其中 <code>strSource</code> 是<strong>输入参数</strong>，<code>strDestination</code> 是<strong>输出参数</strong>。</li>
<li>给 <code>strSource</code> 加上 <code>const</code> 修饰后，如果函数体内的语句试图改动 <code>strSource</code> 的内容，编译器将指出错误</li>
</ul>
</li>
</ul>
<br>
<ul>
<li>
<p>防止修改指针指向的地址</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*指针p1和指针p2指向的地址都不能修改。*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span> <span class="params">( <span class="type">int</span> *<span class="type">const</span> p1 , <span class="type">int</span> *<span class="type">const</span> p2 )</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<br>
<ul>
<li>以上两种的结合 , <strong>指针和内容都不能改</strong></li>
</ul>
<br>
<hr />
<h4 id="564-修饰函数的返回值"><a class="markdownIt-Anchor" href="#564-修饰函数的返回值"></a> 5.6.4 修饰函数的返回值</h4>
<p>如果给以“<strong>指针传递</strong>”方式的函数返回值加 <code>const</code> 修饰，那么函数返回值（即指针）的内容<strong>不能被修改</strong>，该返回值只能被赋给加<code>const</code> 修饰的同类型指针。</p>
<br>
<p><font face="华文彩云" color=red size=5>例如：</font ></p>
<p><em><strong>函数原型:</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> *<span class="title function_">GetString</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>如下语句将出现<strong>编译错误</strong>：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> *str = GetString();</span><br></pre></td></tr></table></figure>
<p>正确的用法是</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> *str = GetString();</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="565-修饰全局变量"><a class="markdownIt-Anchor" href="#565-修饰全局变量"></a> 5.6.5 修饰全局变量</h4>
<ul>
<li>全局变量的 <em><strong>作用域</strong></em> 是整个文件;</li>
<li>我们应该尽量 <strong>避免使用全局变量</strong>  , 因为一旦有一个函数改变了全局变量的值，它也会影响到其他引用这个变量的函数;</li>
<li>如果一定要用全局变量，我们应该尽量的使用<code>const</code>修饰符进行修饰，这样防止不必要的人为修改，使用的方法与局部变量是相同的。</li>
</ul>
<br>
<h3 id="57-staic关键字"><a class="markdownIt-Anchor" href="#57-staic关键字"></a> 5.7 <code>staic</code>关键字</h3>
<p>static关键字在编写程序时一般有三大类用法：</p>
<ul>
<li>定义局部变量</li>
<li>定义全局变量</li>
<li>定义函数</li>
</ul>
<br>
<hr />
<h4 id="571-static定义局部变量"><a class="markdownIt-Anchor" href="#571-static定义局部变量"></a> 5.7.1 static定义局部变量</h4>
<blockquote>
<p><em><strong>作用域 :</strong></em>  作用域是为代码块内</p>
<p><em><strong>储存属性 :</strong></em> 用<code>static</code>定义的局部变量的生命周期 , 会变成静态储存 , 即全局都存在 ;</p>
<p><strong>储存位置 :</strong> 储存位置由 <em><strong>栈</strong></em> 转移到了 <em><strong>数据段</strong></em> (.data)中</p>
<p><strong>值 :</strong></p>
<ul>
<li>静态局部变量如果没有被用户初始化，则会被编译器自动赋值为0</li>
<li>以后每次调用静态局部变量的时候都用上次调用后的值。</li>
<li>存储在静态数据区的变量会在程序刚开始运行时就完成初始化，<strong>也是唯一的一次初始化</strong>。</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>使用示例：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">2</span>;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i = <span class="number">2</span>;</span><br><span class="line">        <span class="type">static</span> <span class="type">int</span> k = <span class="number">4</span>;   <span class="comment">// 在离开这个函数后,k = 4 不会变 ;在下次进入这个函数时 ,k都是4</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d&quot;</span>, i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;k = %d&quot;</span>, i );		<span class="comment">// 打印k的值 编译器会报错; 因为k的作用域还是局限在&#123;&#125;中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="5711-补充-内存空间分布"><a class="markdownIt-Anchor" href="#5711-补充-内存空间分布"></a> 5.7.1.1 补充 —— 内存空间分布</h5>
<p>可执行文件(.o)在被加载到内存中时 , <em><strong>内存空间分布图</strong></em>:</p>
<p><img src="https://pic.imgdb.cn/item/632ea1e216f2c2beb1c1c7ed.png" alt="image-20220924001131747" /></p>
<br>
<ul>
<li><em><strong>函数</strong></em> 翻译成二进制指令放在 <em><strong>代码段</strong></em> 中</li>
<li><em><strong>初始化的全局变量</strong></em> 和 <em><strong>静态局部变量</strong></em> 放在 <em><strong>数据段</strong></em> 中(.data)</li>
<li><em><strong>未初始化的全局变量</strong></em> 和 <em><strong>静态变量</strong></em> 放在 <em><strong>BSS段</strong></em> 中(.bss)</li>
<li>函数的 <em><strong>局部变量</strong></em> 保存在 <em><strong>栈</strong></em> 中</li>
<li>使用<code>malloc</code>申请的 <em><strong>动态内存</strong></em> 保存在 <em><strong>堆空间</strong></em> 中</li>
</ul>
<br>
<hr />
<h4 id="572-static定义全局变量"><a class="markdownIt-Anchor" href="#572-static定义全局变量"></a> 5.7.2 static定义全局变量</h4>
<blockquote>
<p><em><strong>作用域：</strong></em> 作用域仅为当前文件 ; 其他文件不可访问 ; 其他文件可以定义与其同名的变量</p>
<p><em><strong>储存属性 :</strong></em> 储存<strong>属性不变</strong> ,  还是 <em><strong>静态储存</strong></em>  , 生命周期为整个程序运行期间</p>
<p><em><strong>储存位置:</strong></em> 储存位置 <em><strong>不变</strong></em>  , 都是在在<code>.data</code>段（已初始化）或者<code>.bss</code>段（未初始化）内</p>
<p><em><strong>说明：</strong></em></p>
<blockquote>
<ul>
<li>用static定义的全局变量称为静态全局变量</li>
<li>在定义不需要与其他文件共享的全局变量时，加上static关键字能够有效地降低程序模块之间的耦合，避免不同文件同名变量的冲突，且不会误使用。</li>
</ul>
</blockquote>
</blockquote>
<br>
<hr />
<h4 id="573-static定义函数"><a class="markdownIt-Anchor" href="#573-static定义函数"></a> 5.7.3 static定义函数</h4>
<blockquote>
<p><code>static</code>定义的<strong>函数</strong>与 static定义的<strong>全局变量</strong>特性相似</p>
<p><em><strong>作用域 :</strong></em> static函数的作用域是本源文件 ; 其他文件不能引用该函数 ; 其他文件可以定义 <em><strong>同名函数</strong></em></p>
<p><em><strong>储存属性 :</strong></em> <em><strong>静态储存</strong></em>, 生命周期为整个程序运行期间</p>
<p><em><strong>储存位置 :</strong></em>  储存在<strong>代码段</strong>(.test)中</p>
</blockquote>
<br>
<hr />
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>学习</tag>
        <tag>单片机</tag>
        <tag>gun</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式C语言学习记录(一) —— ARM指令集与作用域</title>
    <url>/2023/04/08/%E5%B5%8C%E5%85%A5%E5%BC%8FC%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95(%E4%B8%80)%E2%80%94%E2%80%94ARM%E6%8C%87%E4%BB%A4%E9%9B%86%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
    <content><![CDATA[<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.9.11」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<br>
<p><strong>摘要：</strong> 记录汇总自己在嵌入式开发过程中 学习的一些零散知识</p>
<br>
<p><strong>简介：</strong> 简单汇总,方便自己查看</p>
</blockquote>
<br>
<span id="more"></span>
<p>（👇 第二部分）</p>
<p><a href="https://ye2020.github.io/2023/04/08/%E5%B5%8C%E5%85%A5%E5%BC%8FC%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95(%E4%BA%8C)%E2%80%94%E2%80%94GNU%E6%8B%93%E5%B1%95%E8%AF%AD%E6%B3%95%E4%B8%8EC%E8%AF%AD%E8%A8%80%E8%A1%A5%E5%85%85/#more">嵌入式C语言学习记录(二) —— GNU拓展语法与C语言补充</a><br />
(👇 PDF 版)<br />
<a href="https://download.csdn.net/download/weixin_51330198/86701430?spm=1001.2014.3001.5501">PDF 文件</a></p>
<br>
<hr />
<br>
<br>
<hr />
<br>
<h2 id="1️⃣-stringh-库函数"><a class="markdownIt-Anchor" href="#1️⃣-stringh-库函数"></a> 1️⃣ string.h 库函数</h2>
<p><strong>下面是头文件 string.h 中定义的函数：</strong></p>
<table>
<thead>
<tr>
<th>序号</th>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><code>void *memchr(const void *str, int c, size_t n</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-memchr.html">在参数 <em>str</em> 所指向的字符串的前 n 个字节中搜索第一次出现字符 c（一个无符号字符）的位置。</a></td>
</tr>
<tr>
<td>2</td>
<td><code>int memcmp(const void *str1, const void *str2, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-memcmp.html">把 <em>str1</em> 和 <em>str2</em> 的前 n 个字节进行比较。</a></td>
</tr>
<tr>
<td>3</td>
<td><code>void *memcpy(void *dest, const void *src, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-memcpy.html">从 src 复制 n 个字符到 <em>dest</em>。</a></td>
</tr>
<tr>
<td>4</td>
<td><code>void *memmove(void *dest, const void *src, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-memmove.html">另一个用于从 <em>src</em> 复制 n 个字符到 <em>dest</em> 的函数。</a></td>
</tr>
<tr>
<td>5</td>
<td><code>void *memset(void *str, int c, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-memset.html">复制字符 c（一个无符号字符）到参数 <em>str</em> 所指向的字符串的前 n 个字符。</a></td>
</tr>
<tr>
<td>6</td>
<td><code>char *strcat(char *dest, const char *src)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strcat.html">把 <em>src</em> 所指向的字符串追加到 <em>dest</em> 所指向的字符串的结尾。</a></td>
</tr>
<tr>
<td>7</td>
<td><code>char *strncat(char *dest, const char *src, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strncat.html">把 <em>src</em> 所指向的字符串追加到 <em>dest</em> 所指向的字符串的结尾，直到 n 字符长度为止。</a></td>
</tr>
<tr>
<td>8</td>
<td><code>char *strchr(const char *str, int c)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strchr.html">在参数 <em>str</em> 所指向的字符串中搜索第一次出现字符 c（一个无符号字符）的位置。</a></td>
</tr>
<tr>
<td>9</td>
<td><code>int strcmp(const char *str1, const char *str2)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strcmp.html">把 <em>str1</em> 所指向的字符串和 <em>str2</em> 所指向的字符串进行比较。</a></td>
</tr>
<tr>
<td>10</td>
<td><code>int strncmp(const char *str1, const char *str2, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strncmp.html">把 <em>str1</em> 和 <em>str2</em> 进行比较，最多比较前 n 个字节。</a></td>
</tr>
<tr>
<td>11</td>
<td><code>int strcoll(const char *str1, const char *str2)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strcoll.html">把 <em>str1</em> 和 <em>str2</em> 进行比较，结果取决于 LC_COLLATE 的位置设置</a></td>
</tr>
<tr>
<td>12</td>
<td><code>char *strcpy(char *dest, const char *src)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strcpy.html">把 <em>src</em> 所指向的字符串复制到 <em>dest</em>。</a></td>
</tr>
<tr>
<td>13</td>
<td><code>char *strncpy(char *dest, const char *src, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strncpy.html">把 <em>src</em> 所指向的字符串复制到 <em>dest</em>，最多复制 n 个字符。</a></td>
</tr>
<tr>
<td>14</td>
<td><code>size_t strcspn(const char *str1, const char *str2)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strcspn.html">检索字符串 str1 开头连续有几个字符都不含字符串 str2 中的字符。</a></td>
</tr>
<tr>
<td>15</td>
<td><code>char *strerror(int errnum)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strerror.html">从内部数组中搜索错误号 errnum，并返回一个指向错误消息字符串的指针。</a></td>
</tr>
<tr>
<td>16</td>
<td><code>size_t strlen(const char *str)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strlen.html">计算字符串 str 的长度，直到空结束字符，但不包括空结束字符。</a></td>
</tr>
<tr>
<td>17</td>
<td><code>char *strpbrk(const char *str1, const char *str2)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strpbrk.html">检索字符串 <em>str1</em> 中第一个匹配字符串 <em>str2</em> 中字符的字符，不包含空结束字符。也就是说，依次检验字符串 str1 中的字符，当被检验字符在字符串 str2 中也包含时，则停止检验，并返回该字符位置。</a></td>
</tr>
<tr>
<td>18</td>
<td><code>char *strrchr(const char *str, int c)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strrchr.html">在参数 <em>str</em> 所指向的字符串中搜索最后一次出现字符 c（一个无符号字符）的位置。</a></td>
</tr>
<tr>
<td>19</td>
<td><code>size_t strspn(const char *str1, const char *str2)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strspn.html">检索字符串 <em>str1</em> 中第一个不在字符串 <em>str2</em> 中出现的字符下标。</a></td>
</tr>
<tr>
<td>20</td>
<td><code>char *strstr(const char *haystack, const char *needle)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strstr.html"> 在字符串 <em>haystack</em> 中查找第一次出现字符串 <em>needle</em>（不包含空结束字符）的位置。</a></td>
</tr>
<tr>
<td>21</td>
<td><code>char *strtok(char *str, const char *delim)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strtok.html">分解字符串 <em>str</em> 为一组字符串，<em>delim</em> 为分隔符。</a></td>
</tr>
<tr>
<td>22</td>
<td><code>size_t strxfrm(char *dest, const char *src, size_t n)</code></td>
<td><a href="https://www.runoob.com/cprogramming/c-function-strxfrm.html">根据程序当前的区域选项中的 LC_COLLATE 来转换字符串 <strong>src</strong> 的前 <strong>n</strong> 个字符，并把它们放置在字符串 <strong>dest</strong> 中。</a></td>
</tr>
</tbody>
</table>
<br>
<hr />
<br>
<h2 id="2️⃣-arm汇编指令集"><a class="markdownIt-Anchor" href="#2️⃣-arm汇编指令集"></a> 2️⃣ ARM汇编指令集</h2>
<p><img src="https://pic.imgdb.cn/item/632ea0db16f2c2beb1c0781d.png" alt="在这里插入图片描述" /></p>
<br>
<ul>
<li><strong>R0~R3</strong>通常用来传递函数参数,</li>
<li><strong>R4~R11</strong>用来保存程序运算的中间结果或函数的局部变量等,</li>
<li><strong>R12</strong>常用来作为函数调用过程中的临时寄存器。</li>
<li><strong>R13</strong>寄存器又称为堆栈指针寄存器(StackPointer, SP) ,用来维护和管理函数调用过程中的栈帧变化, R13总是指向当前正在运行的函数的栈帧,一般不能再用作其他用途。</li>
<li><strong>R14</strong>寄存器又称为链接寄存器(Link Register, LR) ,在函数调用过程中主要用来保存上一级函数调用者的返回地址。寄存器</li>
<li><strong>R15</strong>又称为程序计数器(Program Counter, PC) , CPU从内存取指令执行,就是默认从PC保存的地址中取的,每取一次指令, PC寄存器的地址值自动增加。</li>
<li><strong>CPSR</strong> (当前处理器状态寄存器), 主要用来表征当前处理器的运行状态。除了各种状态位、标志位,CPSR寄存器里也有一些控制位,用来切换处理器的工作模式和中断使能控制。</li>
</ul>
<br>
<p><mark>CPSR寄存器标志位:</mark></p>
<img src="https://pic.imgdb.cn/item/632ea0f016f2c2beb1c08fc1.png" alt="image-20220910142630412" style="zoom:150%;" />
<br>
<h3 id="21-arm汇编指令"><a class="markdownIt-Anchor" href="#21-arm汇编指令"></a> 2.1 ARM汇编指令</h3>
<blockquote>
<p>一个完整的ARM指令通常是由<mark>操作码</mark> + <mark>操作数</mark></p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&lt;opcode&gt; &#123;&lt;cond&gt; &#123;s&#125; &lt;Rd&gt;,&lt;Rn&gt; &#123;,&lt;operand2&gt;&#125;&#125;</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 格式说明：</font></p>
<ul>
<li>使用<code>&lt;&gt;</code>标起来的是<strong>必选项</strong>,使用<code>&#123; &#125;</code>标起来的是<strong>可选项</strong>。</li>
<li><code>&lt;opcode&gt;</code>是二进制机器指令的操作码助记符,如<code>MOV</code>、<code>ADD</code>这些汇编指令都是操作码的<strong>指令助记符</strong>。</li>
<li><strong>cond</strong> : 执行条件, <code>ARM</code>为减少分支跳转指令个数,允许类似<code>BEQ</code>、<code>BNE</code>等形式的组合指令。</li>
<li><strong>S</strong>: 是否影响<code>CPSR</code>寄存器中的标志位,如SUBS指令会影响CPSR寄存器中的<code>N、Z、C、V</code>标志位,而<code>SUB</code>指令不会。</li>
<li><strong>Rd</strong> :目标寄存器。</li>
<li><strong>Rn</strong> :第一个操作数的寄存器。</li>
<li><strong>operand2</strong> :第二个可选操作数,灵活使用第二个操作数可以提高代码效率。</li>
</ul>
<br>
<hr />
<h5 id="211-操作数2operand2"><a class="markdownIt-Anchor" href="#211-操作数2operand2"></a> 2.1.1 操作数2(operand2)</h5>
<p>操作数operand2在汇编程序中经常出现的两种格式如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#constant		; 操作数是一个立即数</span><br><span class="line">Rm&#123;,shift&#125;		; 使用寄存器值作为操作数</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<p>在第二种格式中,通过<code>&#123;, shift&#125;</code>可选项,我们还可以通过多种移位或循环移位的方式,构建更加灵活的操作数。可选项<code>&#123;, shift&#125;</code>可以选择的移位方式如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#constant,n 	;将立即数 constant循环右移n位</span><br><span class="line">ASR #			;算术右移n位, n的取值范围: [1,32]</span><br><span class="line">LSL #n			;逻辑左移n位, n的取值范围: [0,31]</span><br><span class="line">LSR #n			;逻辑右移n位, n的取值范围: [1,32]</span><br><span class="line">ROR #n			;向右循环移n位, n的取值范围: [1,31]</span><br><span class="line">RRX				;向右循环移1位,带扩展</span><br><span class="line">type Rs			;仅在ARM中可用,其中type指ASP、LSL、LSR、ROR, Rs是提供位移量的寄存器名称</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ADD R3, R2, R1, LSL #3		;R3=R2+R1&lt;&lt;3</span><br><span class="line">ADD R3, R2, R1, LSL R0		;R3=R2+R1&lt;&lt;R20</span><br><span class="line">ADD IP, IP, #16, 20			;IP=IP+立即数16循环右移20位</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h3 id="22-基本指令"><a class="markdownIt-Anchor" href="#22-基本指令"></a> 2.2 基本指令</h3>
<h4 id="221-储存访问指令"><a class="markdownIt-Anchor" href="#221-储存访问指令"></a> 2.2.1 储存访问指令</h4>
<h5 id="2211-ldr指令"><a class="markdownIt-Anchor" href="#2211-ldr指令"></a> 2.2.1.1 [<code>LDR</code>指令]</h5>
<blockquote>
<p><strong>格式 :</strong>  LDR{条件} 目的寄存器，&lt;存储器地址&gt;;</p>
<p><strong>作用 :</strong> LDR指令用于从存储器中将一个32位的字数据传送到目的寄存器中。该指令通常用于从存储器中读取32位的字数据到通用寄存器，然后对数据进行处理。当程序计数器PC作为目的寄存器时，指令从存储器中读取的字数据被当作目的地址，从而可以实现程序流程的跳转。</p>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LDR  R0，[R1]               ;将存储器地址为R1的字数据读入寄存器R0。</span><br><span class="line">LDR  R0，[R1，R2]           ;将存储器地址为R1+R2的字数据读入寄存器R0。</span><br><span class="line">LDR  R0，[R1，＃8]          ;将存储器地址为R1+8的字数据读入寄存器R0。</span><br><span class="line">LDR  R0，[R1，R2] ！        ;将存储器地址为R1+R2的字数据读入寄存器R0，并将新地址R1＋R2写入R1。</span><br><span class="line">LDR  R0，[R1，＃8] ！       ;将存储器地址为R1+8的字数据读入寄存器R0，并将新地址R1＋8写入R1。</span><br><span class="line">LDR  R0，[R1]，R2          ;将存储器地址为R1的字数据读入寄存器R0，并将新地址R1＋R2写入R1。</span><br><span class="line">LDR  R0，[R1，R2，LSL＃2]！ ;将存储器地址为R1＋R2×4的字数据读入寄存器R0，并将新地址R1＋R2×4写入R1。</span><br><span class="line">LDR  R0，[R1]，R2，LSL＃2   ;将存储器地址为R1的字数据读入寄存器R0，并将新地址R1＋R2×4写入R1。</span><br></pre></td></tr></table></figure>
<blockquote>
<p>{！}为可选后缀，若选用该后缀，则当数据传送完毕之后，将最后的地址写入基址寄存器，否则基址寄存器的内容不改变。</p>
</blockquote>
<br>
<hr />
<br>
<h5 id="2212-str指令"><a class="markdownIt-Anchor" href="#2212-str指令"></a> 2.2.1.2 [<code>STR</code>指令]</h5>
<p><font face="华文彩云" color=red size=5> 注意：</font>  <code>LDR/STR</code>指令是<code>ARM</code>汇编中使用频率最高的一对指令</p>
<blockquote>
<p><strong>格式 :</strong>  STR{条件} 源寄存器，&lt;存储器地址&gt;;</p>
<p><strong>作用 :</strong>  STR指令用于从源寄存器中将一个32位的字数据传送到存储器中。</p>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">STR R0，[R1]，＃8  	;将R0中的字数据写入以R1为地址的存储器中，并将新地址R1＋8写入R1。</span><br><span class="line">STR R0，[R1，＃8] 		;将R0中的字数据写入以R1＋8为地址的存储器中。</span><br></pre></td></tr></table></figure>
<hr />
<br>
<hr />
<br>
<h5 id="2213-ldrb-指令"><a class="markdownIt-Anchor" href="#2213-ldrb-指令"></a> 2.2.1.3 [<code>LDRB</code> 指令]</h5>
<blockquote>
<p><strong>格式 :</strong>  LDR{条件}B 目的寄存器，&lt;存储器地址&gt;</p>
<p><strong>作用 :</strong>  LDRB指令用于从存储器中将一个<strong>8位</strong>的字节数据传送到目的寄存器中，同时将寄存器的高24位清零。<br />
该指令通常用于从存储器中读取8位的字节数据到通用寄存器，然后对数据进行处理。当程序计数器PC作为目的寄存器时，指令从存储器中读取的字数据被当作目的地址，从而可以实现程序流程的跳转。</p>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LDRB  R0，[R1]        ;将存储器地址为R1的字节数据读入寄存器R0，并将R0的高24位清零。</span><br><span class="line">LDRB  R0，[R1，＃8]    ;将存储器地址为R1＋8的字节数据读入寄存器R0，并将R0的高24位清零。</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2214-strb-指令"><a class="markdownIt-Anchor" href="#2214-strb-指令"></a> 2.2.1.4 [<code>STRB</code> 指令]</h5>
<blockquote>
<p><strong>格式 :</strong>  STR{条件}B 源寄存器，&lt;存储器地址&gt;</p>
<p><strong>作用 :</strong>  STRB指令用于从源寄存器中将一个8位的字节数据传送到存储器中。该字节数据为源寄存器中的低8位。</p>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">STRB  R0，[R1]      ;将寄存器R0中的字节数据写入以R1为地址的存储器中。</span><br><span class="line">STRB  R0，[R1，＃8]  ;将寄存器R0中的字节数据写入以R1＋8为地址的存储器中。</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2215-ldrh-strh-指令"><a class="markdownIt-Anchor" href="#2215-ldrh-strh-指令"></a> 2.2.1.5 [<code>LDRH / STRH</code> 指令]</h5>
<blockquote>
<p><strong>格式:</strong></p>
<blockquote>
<ul>
<li>STR{条件}H 源寄存器，&lt;存储器地址&gt;</li>
<li>LDR{条件}H 目的寄存器，&lt;存储器地址&gt;</li>
</ul>
</blockquote>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li>STRH指令用于从源寄存器中将一个16位的半字数据传送到存储器中。该半字数据为源寄存器中的低16位。</li>
<li>LDRH指令用于从存储器中将一个16位的半字数据传送到目的寄存器中，同时将寄存器的高16位清零。</li>
</ul>
</blockquote>
</blockquote>
<br>
<hr />
<br>
<p>2.2.1.6 [<code>LDM / STM</code> 指令]</p>
<blockquote>
<p><strong>格式 :</strong>  LDM（或STM）{条件}{类型} 基址寄存器{！}，寄存器列表{∧}</p>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li>批量加载/储存指令 , 在一组寄存器和内存间传输数据</li>
<li>常与堆栈格式组合使用 . 以模拟堆栈操作</li>
</ul>
</blockquote>
</blockquote>
<br>
<p><strong>不同类型的堆栈:</strong></p>
<p><img src="https://pic.imgdb.cn/item/632ea0fd16f2c2beb1c0a098.png" alt="image-20220909162156729" /></p>
<br>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LDMFD SP!,&#123;R0-R2,R14&#125;    ;将内存栈中的数据依次弹出到R14、R2、R1、R0</span><br><span class="line">STMFD SP!,&#123;R0-R2,R14&#125;	 ;将R0、R1、R2、R14依次压入内存栈</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<ul>
<li>每入栈一个元素, 栈指针<code>SP</code>都会往栈增长的方向移动一个存储单元.</li>
<li>栈是<strong>先入后出(FILO)</strong> , 所以<code>STMFD</code>指令会根据<code>&#123; &#125;</code>中的寄存器列表 ,<strong>从左到右</strong>压入栈</li>
<li><code>LDMFD</code> 指令出栈时,<strong>顺序相反</strong></li>
</ul>
<br>
<p><strong>入栈与出栈:</strong></p>
<p><img src="https://pic.imgdb.cn/item/632ea11016f2c2beb1c0b8ba.png" alt="image-20220909163300314" /></p>
<p><br> <font face="华文彩云" color=red size=5> 注意：</font></p>
<p>也可以通过<code>PUSH</code>/<code>POP</code> 指令来执行栈元素的<strong>入栈和出栈</strong>操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUSH &#123;R0-R2, R14&#125;	;将RO、R1、R2、R14依次压入栈,</span><br><span class="line">POP &#123;R0-R2,R14&#125; 	;将中的数据依次弹出到R14、R2、R1、R0</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h4 id="222-数据传送指令"><a class="markdownIt-Anchor" href="#222-数据传送指令"></a> 2.2.2 数据传送指令</h4>
<h5 id="2221-mov指令"><a class="markdownIt-Anchor" href="#2221-mov指令"></a> 2.2.2.1 [<code>MOV</code>指令]</h5>
<blockquote>
<p><strong>格式:</strong>  MOV{条件}{S} 目的寄存器，源操作数</p>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li>是把一个寄存器的值(要能用立即数表示)赋给另一个寄存器，或者将一个常量赋给寄存器，将后边的量赋给前边的量。</li>
<li><code>MOV</code>指令中，条件缺省时指令无条件执行；</li>
<li>{S}用来表示是否影响<code>CPSR</code>寄存器的值,如<code>MOVS</code>指令就会影响寄存器<code>CPSR</code>的值,而<code>MOV</code>则不会</li>
</ul>
</blockquote>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV R1，R0   		;将寄存器R0的值传送到寄存器R1</span><br><span class="line">MOV PC，R14   		;将寄存器R14的值传送到PC，常用于子程序返回</span><br><span class="line">MOV R1，R0，LSL＃3    ;将寄存器R0的值左移3位后传送到R1（即乘8）</span><br><span class="line">MOVS PC, R14	     ;将寄存器R14的值传送到PC中，返回到调用代码并恢复标志位</span><br></pre></td></tr></table></figure>
<br>
<h5 id="2222-mvn-指令"><a class="markdownIt-Anchor" href="#2222-mvn-指令"></a> 2.2.2.2 [<code>MVN</code> 指令]</h5>
<blockquote>
<p><strong>格式 :</strong> MVN{条件}{S} 目的寄存器，源操作数</p>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li>MVN指令用来将操作数operand2按位取反后传送到目标寄存器Rd</li>
<li>与MOV指令不同的是 ,在传送之前就按位取反了</li>
</ul>
</blockquote>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MVN R0，＃0xFF   ;将立即数0xFF取反后赋值给R0</span><br><span class="line">MVN R0，R1 	    ;将R1寄存器的值取反后赋值给R0</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h4 id="223-算术逻辑运算指令"><a class="markdownIt-Anchor" href="#223-算术逻辑运算指令"></a> 2.2.3 算术逻辑运算指令</h4>
<h5 id="2231-算术指令"><a class="markdownIt-Anchor" href="#2231-算术指令"></a> 2.2.3.1 算术指令</h5>
<blockquote>
<p>算术指令包括 基本的加、减、乘、除</p>
</blockquote>
<p><strong>格式：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ADD &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;加法</span><br><span class="line">ADC &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;带进位加法</span><br><span class="line">SUB &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;减法</span><br><span class="line">SBC &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;带借位减法</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ADD  R0，R1，R2           ; R0 = R1 + R2</span><br><span class="line">ADD  R0，R1，#256         ; R0 = R1 + 256</span><br><span class="line">ADD  R0，R2，R3，LSL#1     ; R0 = R2 + (R3 &lt;&lt; 1)</span><br><span class="line"></span><br><span class="line">ADC  R1,R1,#1			 ; R1 = R1 + 1 + C (其中C为CPSR寄存器中的进位) </span><br><span class="line"></span><br><span class="line">SUB  R0，R1，R2           ; R0 = R1 - R2</span><br><span class="line">SUB  R0，R1，#256         ; R0 = R1 - 256</span><br><span class="line">SUB  R0，R2，R3，LSL#1     ; R0 = R2 - (R3 &lt;&lt; 1)</span><br><span class="line"></span><br><span class="line">;BC指令用于把操作数1减去操作数2，再减去CPSR中的C条件标志位的反码，并将结果存放到目的寄存器中。</span><br><span class="line">SUBS  R0，R1，R2           ;R0 = R1 - R2 - ！C，并根据结果设置CPSR的进位标志位</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h5 id="2232-逻辑指令"><a class="markdownIt-Anchor" href="#2232-逻辑指令"></a> 2.2.3.2 逻辑指令</h5>
<blockquote>
<p>逻辑运算指令包括 (与、或、非、异或、清除等</p>
</blockquote>
<p><strong>格式：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AND &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;逻辑与运算(常用于屏蔽操作数1 中的某些位 )</span><br><span class="line">ORR &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;逻辑或运算(常用于设置操作数1的某些位。)</span><br><span class="line">EOR &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;异或运算(常用于反转操作数1的某些位。)</span><br><span class="line">BIC &#123;cond&#125; &#123;S&#125; Rd, Rn, operand2 ;位清除运算</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AND  R0，R0，＃3           ; 该指令保持R0的0、1位，其余位清零。   ( R0 = R0 &amp; 0011 )</span><br><span class="line">ORR  R0，R0，＃3           ; 该指令设置R0的0、1位，其余位保持不变。( R0 = R0 | 0011)</span><br><span class="line">EOR  R0，R0，＃3           ; 该指令反转R0的0、1位，其余位保持不变。( R0 = R0 ^ 0011)</span><br><span class="line">BIC  R0，R0，＃％1011       ; 该指令清除 R0 中的位 0、1、和 3，其余的位保持不变。</span><br></pre></td></tr></table></figure>
<br>
<hr />
<br>
<h4 id="224-比较指令"><a class="markdownIt-Anchor" href="#224-比较指令"></a> 2.2.4 比较指令</h4>
<h5 id="2241-cmp直接比较指令"><a class="markdownIt-Anchor" href="#2241-cmp直接比较指令"></a> 2.2.4.1 [<code>CMP</code>直接比较指令]</h5>
<blockquote>
<p><strong>格式 :</strong>  CMP{条件} 操作数1，操作数2</p>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li><code>CMP</code>指令用于把一个寄存器的内容和另一个寄存器的内容或立即数进行比较 , 同时影响CPSR寄存器的N、Z、C、V标志位</li>
<li>该指令进行一次减法运算，但不存储结果，只更改条件标志位。标志位表示的是操作数1与操作数2的关系(大、小、相等)</li>
</ul>
</blockquote>
</blockquote>
<br>
<p><mark>CPSR寄存器标志位:</mark></p>
<p><img src="https://pic.imgdb.cn/item/632ea0f016f2c2beb1c08fc1.png" alt="image-20220910142718682" /></p>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CMP R1，R0     ;将寄存器R1的值与寄存器R0的值相减，并根据结果设置CPSR的标志位</span><br><span class="line">CMP R1，＃100  ;将寄存器R1的值与立即数100相减，并根据结果设置CPSR的标志位</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5>注意：</font></p>
<ul>
<li>
<p>比较指令的运行结果<strong>Z=1</strong>时,表示运算结果为零,<strong>两个数相等</strong>;</p>
</li>
<li>
<p><strong>N=1</strong>表示运算结果为负,</p>
</li>
<li>
<p><strong>N=0</strong>表示运算结果为非负,即运算结果为正或者为零。</p>
<br>
</li>
</ul>
<hr />
<h5 id="2242-cmn负数比较指令"><a class="markdownIt-Anchor" href="#2242-cmn负数比较指令"></a> 2.2.4.2 [<code>CMN</code>负数比较指令]</h5>
<blockquote>
<p><strong>格式:</strong>  CMN{条件} 操作数1，操作数2</p>
<p><strong>作用:</strong>  CMN指令用于把一个寄存器的内容和另一个寄存器的内容或立即数取反后进行比较，同时更新CPSR中条件标志位的值。</p>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CMN R0, #1			;将立即数取负,然后比较大小</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="225-跳转指令"><a class="markdownIt-Anchor" href="#225-跳转指令"></a> 2.2.5 跳转指令</h4>
<h5 id="2251-b-label-指令"><a class="markdownIt-Anchor" href="#2251-b-label-指令"></a> 2.2.5.1 [<code>B label</code> 指令]</h5>
<blockquote>
<p><strong>格式 :</strong>  B {cond} Label</p>
<p><strong>作用:</strong></p>
<blockquote>
<ul>
<li>程序无条件跳转到标号Label处执行,</li>
<li>它是 24 位有符号数，左移两位后有符号扩展为 32 位. 表示跳转范围[0 , 32MB]</li>
<li>无条件跳转指令B主要用在循环 , 分支结构</li>
</ul>
</blockquote>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">B  Label  	;程序无条件跳转到标号Label处执行</span><br><span class="line">CMP R1，＃0  ;当CPSR寄存器中的Z条件码置位时，程序跳转到标号Label处执行</span><br><span class="line">BEQ Label  </span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2252-bl-带链接的跳转"><a class="markdownIt-Anchor" href="#2252-bl-带链接的跳转"></a> 2.2.5.2 [<code>BL</code> 带链接的跳转]</h5>
<blockquote>
<p><strong>格式 :</strong>  BL{条件} 目标地址</p>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li>但跳转之前，会在寄存器<code>RL</code>(即<code>R14</code>)中保存PC的当前内容</li>
<li>BL指令一般用在函数调用的场合</li>
</ul>
</blockquote>
</blockquote>
<p><font face="华文彩云" color=red size=5> 示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BL Label  ;当程序无条件跳转到标号Label处执行时，同时将当前的PC值保存到R14中</span><br><span class="line">...		  ; 子程序返回后接着从此处继续执行</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2253-bx-带状态切换的跳转"><a class="markdownIt-Anchor" href="#2253-bx-带状态切换的跳转"></a> 2.2.5.3 [<code>BX</code> 带状态切换的跳转]</h5>
<blockquote>
<p><strong>格式 :</strong>　BX{条件} 目标地址</p>
<p><strong>作用　:</strong> BX指令跳转到指令中所指定的目标地址，目标地址处的指令既可以是ARM指令，也可以是Thumb指令。</p>
</blockquote>
<br>
<hr />
<h5 id="2254-blx-指令"><a class="markdownIt-Anchor" href="#2254-blx-指令"></a> 2.2.5.4 [<code>BLX</code> 指令]</h5>
<blockquote>
<p><strong>格式 :</strong>  BX{条件} 目标地址</p>
<p><strong>作用:</strong>   BLX指令是BL指令和BX指令的综合 , 表示带链接和状态切换的跳转</p>
</blockquote>
<br>
<hr />
<h4 id="226-条件执行指令"><a class="markdownIt-Anchor" href="#226-条件执行指令"></a> 2.2.6 条件执行指令</h4>
<p>为了提高代码密度,减少ARM指令的数量,几乎所有的ARM指令都可以根据CPSR寄存器中的标志位,通过指令组合实现条件执行。</p>
<p><font face="华文彩云" color=red size=5> 如：</font></p>
<ul>
<li>无条件跳转指令B,我们可以在后面加上条件码组成BEQ、BNE组合指令。</li>
<li>BEQ指令表示两个数比较,结果相等时跳转;</li>
<li>BNE指令则表示结果不相等时跳转</li>
</ul>
<br>
<p><mark>ARM 指令的条件码:</mark></p>
<p><img src="https://pic.imgdb.cn/item/632ea12916f2c2beb1c0d5c3.png" alt="image-20220910151306942" /></p>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font></p>
<blockquote>
<p>通过循环结构,我们可以实现数据块的搬运功能。我们可以将无条件跳转指令B和条件码NE组合在一起使用,构成一个循环程序结构。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AREA COPY,CODE,READOLY</span><br><span class="line">	ENTRY</span><br><span class="line">START</span><br><span class="line">	LDR R0,=SRC	; 源地址</span><br><span class="line">	LDR R1,=DST	; 目的地址</span><br><span class="line">	MOV R2,=#10	; 复制循环次数</span><br><span class="line">LOOP</span><br><span class="line">	LDR R3,[R0],#4 ;</span><br><span class="line">	STR R3,[R1],#4 ;</span><br><span class="line">	SUBS R2,R2,#4  ; </span><br><span class="line">	BNE LOOP	   ;</span><br><span class="line">	</span><br><span class="line">AREA COPYDATA, DATA, READWRITE</span><br><span class="line">SRC DCD 1,2,3,4,5,6,7,8,9,0</span><br><span class="line">DST DCD 0,0,0,0,0,0,0,0,0,0</span><br><span class="line">	END	</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h3 id="23-伪指令"><a class="markdownIt-Anchor" href="#23-伪指令"></a> 2.3 伪指令</h3>
<p>伪指令有点类似C语言中的<strong>预处理命令</strong>,在程序编译时,这些伪指令会被<strong>翻译为一条或多条ARM标准指令</strong>。常见的ARM伪指令主要有4个: <code>ADR、ADRL、LDR、NOP,</code>它们的使用示例如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ADR RO, LOOP		;将标号LOOP的地址保存到R0寄存器中</span><br><span class="line">ADRL RO, LOOP		;中等范围的地址读取</span><br><span class="line">LDR R0, =9x30008000 ;将内存地址0x30008000赋值给R0(主要用途是将一个32位内存地址保存到寄存器中)</span><br><span class="line">NOP					;空操作,用于延时或插入流水线中暂停指令的运行(相当于&quot;MOV R0 R0&quot;)</span><br></pre></td></tr></table></figure>
<p><font face="华文彩云" color=red size=5>备注：</font> 为什么要用<code>LDR</code> 伪指令将一个32位内存地址保存到寄存器中</p>
<ul>
<li>因为指令的长度一般都是固定的。在一个32位的系统中,一条指令通常是32位的,</li>
<li>指令中包括<strong>操作码</strong>和<strong>操作数</strong></li>
<li>指令中的操作码和操作数共享32位的存储空间;</li>
<li>一般前面的操作码要占据几个比特位,剩下来的留给操作数的编码空间就小于32位</li>
</ul>
<br>
<p><strong>ARM指令的编码格式:</strong></p>
<p><img src="https://pic.imgdb.cn/item/632ea14816f2c2beb1c0fb30.png" alt="image-20220910154956737" /></p>
<br>
<hr />
<h3 id="24-伪操作"><a class="markdownIt-Anchor" href="#24-伪操作"></a> 2.4 伪操作</h3>
<p>为了编程方便,汇编器也定义了一些特殊的指令<strong>助记符</strong>,以方便对汇编程序做各种处理。如使用<code>AREA</code>来定义一个段(section) ,使用<code>GBLA</code>来定义一个数据,使用<code>ENTRY</code>来指定汇编程序的执行入口等,这些指令助记符统称为<strong>伪操作</strong>。</p>
<br>
<p><mark>常用伪操作:</mark></p>
<p><img src="https://pic.imgdb.cn/item/632ea14f16f2c2beb1c1046a.png" alt="image-20220910160110433" /></p>
<br>
<hr />
<h4 id="241-area"><a class="markdownIt-Anchor" href="#241-area"></a> 2.4.1 [<code>AREA</code>]</h4>
<blockquote>
<p><strong>语法格式 :</strong>   [语法格式：AREA 段名 属性 1 ，属性 2 ，…  ]</p>
<p><strong>作用:</strong>    AREA 伪指令用于定义一个代码段或数据段。其中，段名若以数字开头，则该段名需用 “ | ” 括起来，如 |1_test| 。</p>
</blockquote>
<br>
<p>属性字段表示该代码段（或数据段）的相关属性，多个属性用逗号分隔。常用的属性如下：</p>
<ul>
<li><strong>CODE 属性</strong>：用于定义代码段，默认为 <code>READONLY</code> 。</li>
<li><strong>DATA 属性</strong>：用于定义数据段，默认为 <code>READWRITE</code> 。</li>
<li><strong>READONLY 属性</strong>：指定本段为<strong>只读</strong>，代码段默认为 <code>READONLY</code> 。</li>
<li><strong>READWRITE 属性</strong>：指定本段为<strong>可读可写</strong>，数据段的默认属性为 <code>READWRITE</code> 。</li>
<li><strong>ALIGN 属性</strong>：使用方式为<code>ALIGN</code> 表达式。在默认时，ELF（可执行连接文件）的代码段和数据段是按字对齐的，表达式的取值范围为 0 ～31，相应的对齐方式为2表达式次方。</li>
<li><strong>COMMON 属性</strong>：该属性定义一个通用的段，不包含任何的用户代码和数据。各源文件中同名的 COMMON 段共享同一段存储单元。</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5>使用示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AREA Init ， CODE ， READONLY     ;该伪指令定义了一个代码段，段名为 Init ，属性为只读。 </span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="242-align"><a class="markdownIt-Anchor" href="#242-align"></a> 2.4.2 [<code>ALIGN</code>]</h4>
<blockquote>
<p><strong>语法格式:</strong>  [ALIGN { 表达式 { ，偏移量 }}   ]</p>
<p><strong>作用 :</strong>  地址对齐</p>
<blockquote>
<ul>
<li>ALIGN 伪指令可通过<strong>添加填充字节</strong>的方式，使当前位置满足一定的对齐方式。</li>
<li>其中，表达式的值用于指定对齐方式，可能的取值为<strong>2的幂</strong>，如 1 、2 、4 、8 、16 等。</li>
<li>若未指定表达式，则将当前位置对齐到<strong>下一个字</strong>的位置。</li>
<li>偏移量也为一个数字表达式，若使用该字段，则当前位置的对齐方式为：<strong>2的表达式次幂＋偏移量。</strong></li>
</ul>
</blockquote>
</blockquote>
<p><font face="华文彩云" color=red size=5>使用示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AREA Init，CODE ，READONLY，ALIEN＝3	;指定后面的指令为 8 字节对齐。      </span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">.... </span><br><span class="line">END      </span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="243-code16-code32"><a class="markdownIt-Anchor" href="#243-code16-code32"></a> 2.4.3 [<code>CODE16</code> /  <code>CODE32</code>]</h4>
<blockquote>
<p><strong>语法格式:</strong>  CODE16 （或 CODE32 ）</p>
<p><strong>作用 :</strong></p>
<blockquote>
<ul>
<li>CODE16 伪指令通知编译器，其后的指令序列为 16 位的 Thumb 指令。</li>
<li>CODE32 伪指令通知编译器，其后的指令序列为 32 位的 ARM 指令。</li>
<li>在使用 ARM 指令和 Thumb 指令混合编程的代码里，可用这两条伪指令进行切换，但注意他们只通知编译器其后指令的类型，并不能对处理器进行状态的切换。</li>
</ul>
</blockquote>
</blockquote>
<p><font face="华文彩云" color=red size=5>使用示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AREA Init ，CODE ，READONLY            </span><br><span class="line">....      </span><br><span class="line">CODE32 				;通知编译器其后的指令为 32 位的 ARM 指令            </span><br><span class="line">LDR R0，＝NEXT＋1 	  ;将跳转地址放入寄存器 R0      </span><br><span class="line">BX R0 				;程序跳转到新的位置执行，并将处理器切换到 Thumb 工作状态      </span><br><span class="line">....     </span><br><span class="line">CODE16 				;通知编译器其后的指令为 16 位的 Thumb 指令            </span><br><span class="line">NEXT LDR R3，＝0x3FF            </span><br><span class="line">....     </span><br><span class="line">END 				;程序结束         </span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="244-entry"><a class="markdownIt-Anchor" href="#244-entry"></a> 2.4.4 [<code>ENTRY</code>]</h4>
<blockquote>
<p><strong>语法格式 :</strong>　　ENTRY</p>
<p><strong>作用</strong>:</p>
<blockquote>
<ul>
<li>ENTRY 伪指令用于指定汇编程序的入口点。</li>
<li>在一个完整的汇编程序中至少要有一个 ENTRY （也可以有多个)</li>
<li>当有多个 ENTRY 时，程序的真正入口点由链接器指定），但在一个源文件里最多只能有一个 ENTRY （可以没有）。</li>
</ul>
</blockquote>
</blockquote>
<p><font face="华文彩云" color=red size=5>使用示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AREA Init ， CODE ， READONLY            </span><br><span class="line">ENTRY 				;应用程序的入口点</span><br><span class="line">.....   </span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="245-end"><a class="markdownIt-Anchor" href="#245-end"></a> 2.4.5 [<code>END</code>]</h4>
<blockquote>
<p><strong>语法格式 :</strong>　　END</p>
<p><strong>作用</strong>:  END 伪指令用于通知编译器已经到了源程序的结尾。</p>
</blockquote>
<p><font face="华文彩云" color=red size=5>使用示例：</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AREA Init ， CODE ， READONLY            </span><br><span class="line">......     </span><br><span class="line">END 			;指定应用程序的结尾</span><br></pre></td></tr></table></figure>
<br>
<br>
<hr />
<h2 id="3️⃣-作用域"><a class="markdownIt-Anchor" href="#3️⃣-作用域"></a> 3️⃣ 作用域</h2>
<br>
<h3 id="31-头文件的内容"><a class="markdownIt-Anchor" href="#31-头文件的内容"></a> 3.1 头文件的内容</h3>
<br>
<ul>
<li>函数原型</li>
<li>使用<code>#define</code>和<code>const</code>定义的符号常量</li>
<li>结构声明</li>
<li>类声明</li>
<li>模版声明</li>
<li>内联函数</li>
</ul>
<br>
<p><font face="华文彩云" color=red size=5> 注意：</font> 不要将函数定义和变量声明放在头文件中，容易导致重定义。 除非该函数是内联函数</p>
<br>
<hr />
<h3 id="32-inlcude-中-和-的区别"><a class="markdownIt-Anchor" href="#32-inlcude-中-和-的区别"></a> 3.2 <code>#inlcude</code>  中“ ” 和 &lt; &gt;的区别</h3>
<br>
<p><img src="https://pic.imgdb.cn/item/62f2829016f2c2beb19248e8.png" alt="image-20220802175044341" /></p>
<hr />
<br>
<h3 id="33-内存在程序中保留的时间"><a class="markdownIt-Anchor" href="#33-内存在程序中保留的时间"></a> 3.3 内存在程序中保留的时间</h3>
<br>
<ul>
<li><strong>自动储存</strong>：<strong>局部变量</strong>、<strong>函数参数</strong> 在程序开始执行其所属的函数和代码块时被创建， 在执行完函数和代码块时，内存被释放</li>
<li><strong>静态储存</strong>：<strong>全局变量</strong>、<code>staic</code>关键字定义的<strong>局部变量</strong>和<strong>全局变量</strong> 。在整个程序运行过程中都存在。</li>
<li><strong>动态存储</strong>： 用<code>new</code> 分配的内存会一直存在，直到使用<code>delete</code> 关键字将其释放。 也称为<strong>堆</strong></li>
</ul>
<br>
<hr />
<br>
<h3 id="34-作用域和链接"><a class="markdownIt-Anchor" href="#34-作用域和链接"></a> 3.4 作用域和链接</h3>
<br>
<ul>
<li><strong>作用域：</strong> 值在上面范围内能看到这个（<strong>函数/变量</strong> ），描述了名称在文件的多大范围内可见。</li>
<li><strong>链接性：</strong> 描述了名称在不同单元键的共享</li>
</ul>
<br>
<p><strong>局部变量作用域：</strong> 作用域只在定义它的代码块中</p>
<p><strong>全局变量作用域：</strong> 作用域为定义位置到文件结尾</p>
<p><strong>自动变量作用域：</strong>  作用域为局部</p>
<p><strong>函数体作用域：</strong>  整个类或整个名称空间，但不能是局部的</p>
<br>
<p><em>[<strong>例如：</strong></em>  局部变量和函数形参的 储存持续性为自动,作用域为局部； 没有链接性。 当程序开始执行时，为该变量分配内存，当函数结束时，这些变量会消失。]</p>
<br>
<br>
<br>
<p><font face="华文彩云" color=red size=5> 注意：</font></p>
<p><img src="https://pic.imgdb.cn/item/62f2822116f2c2beb18fd9b9.png" alt="image-20220803173542707" /></p>
<br>
<hr />
<h3 id="35-静态储存的链接性"><a class="markdownIt-Anchor" href="#35-静态储存的链接性"></a> 3.5 静态储存的链接性</h3>
<h4 id="351-静态变量的链接性"><a class="markdownIt-Anchor" href="#351-静态变量的链接性"></a> 3.5.1 静态变量的链接性：</h4>
<ul>
<li><strong>外部链接性:</strong> 可在其他文件中访问</li>
<li><strong>内部链接性：</strong> 只能在当前文件中访问</li>
<li><strong>无链接性：</strong>     只能在当前函数或代码块中访问</li>
</ul>
<p>静态变量的数量在程序运行期间是不变的， 编译器会分配固定的内存块来储存所有的静态变量，这些变量在程序</p>
<p>执行期间一直存在。</p>
<br>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>;    <span class="comment">// 静态持续变量，连接性为外部</span></span><br><span class="line"></span><br><span class="line">staic <span class="type">int</span> b = <span class="number">0</span>; <span class="comment">// 静态持续变量，连接性为内部</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">funct</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    staic <span class="type">int</span> c = <span class="number">0</span>;        <span class="comment">//静态变量，无链接性</span></span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>;              <span class="comment">// 自动变量，无链接性</span></span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>
<br>
<p>特别注意： 变量c是储存在静态数据区的，会在程序刚开始运行时就完成初始化，<strong>也是唯一的一次初始化</strong>。</p>
<p>即使<code>funct</code>函数没有被执行，c变量也是<strong>留在内存</strong>中的，而变量d则会<strong>消失。</strong></p>
<br>
<hr />
<h4 id="352-静态变量的初始化特性"><a class="markdownIt-Anchor" href="#352-静态变量的初始化特性"></a> 3.5.2  静态变量的初始化特性</h4>
<p>所有静态持续变量在初始化时都会被初始化为0 ，称为零初始化 。</p>
<p>在静态数据区，内存中所有的字节默认值都是 <code>0x00</code>，某些时候这一特点可以减少程序员的工作量。比如初始化一个稀疏矩阵，我们可以一个一个地把所有元素都置 0，然后把不是 0 的几个元素赋值。如果定义成静态的，就省去了一开始置 0 的操作。再比如要把一个字符数组当字符串来用，但又觉得每次在字符数组末尾加 <code>\0</code> 太麻烦。如果把字符串定义成静态的，就省去了这个麻烦，因为那里本来就是 <code>\0</code> 。</p>
<br>
<hr />
<h3 id="36-变量储存方式总结"><a class="markdownIt-Anchor" href="#36-变量储存方式总结"></a> 3.6 变量储存方式总结</h3>
<p><img src="https://pic.imgdb.cn/item/62f2822616f2c2beb18ff55f.png" alt="image-20220803181043603" /></p>
<br>
<hr />
<h3 id="37-volatile-限定符"><a class="markdownIt-Anchor" href="#37-volatile-限定符"></a> 3.7 <code>volatile</code> 限定符</h3>
<p><img src="https://pic.imgdb.cn/item/62f2822a16f2c2beb1900f32.png" alt="image-20220803231002719" /></p>
<br>
<hr />
<br>
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>学习</tag>
        <tag>单片机</tag>
        <tag>arm</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 学习笔记(一) —— 杂项</title>
    <url>/2023/05/12/Linux%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)%20%E2%80%94%E2%80%94%20%E6%9D%82%E9%A1%B9/</url>
    <content><![CDATA[<h1 id="linux学习笔记"><a class="markdownIt-Anchor" href="#linux学习笔记"></a> Linux学习笔记</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.28」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<p><strong>简介：</strong> Linux学习笔记 , 写的比较乱 , 属于随记</p>
</blockquote>
<br>
<span id="more"></span>
<hr />
<br>
<h2 id="1️⃣"><a class="markdownIt-Anchor" href="#1️⃣"></a> 1️⃣</h2>
<h3 id="11-ubuntu文件系统结构"><a class="markdownIt-Anchor" href="#11-ubuntu文件系统结构"></a> 1.1 Ubuntu文件系统结构</h3>
<p><code>/bin</code> 	存放二进制可执行文件，这些命令在单用户模式下也能够使用。可以被root和一般的账号使用。</p>
<p><code>/boot</code>	Ubuntu内核和启动文件，比如<code>vmlinuz-xxx</code>。gurb引导装载程序。</p>
<p><code>/dev</code>		设备驱动文件</p>
<p><code>/etc</code>		存放一些系统配置文件，比如用户账号和密码文件，各种服务的起始地址。</p>
<p>​	<code>/home</code>	系统默认的用户主文件夹，一般创建用户账户的时候，默认的用户主文件夹都会放到此目录下。</p>
<p>​	<code>/lib</code>		存放库文件</p>
<p>​	<code>/media</code>	此目录下放置可插拔设备，比如SD卡，或者U盘就是挂载到这个目录中。</p>
<p><code>/mnt</code>	用户可使用的挂载点，如果要挂载一些额外的设备，那么就可以挂载到此处。</p>
<p><code>/opt</code>		可选的文件和程序存放目录，给第三方软件放置的目录。</p>
<p><code>/root</code>	root用户目录，也就是系统管理员目录。</p>
<p>​	<code>/sbin</code>	和/bin类似，也是存放一些二进制可执行文件。sbin下面的一般是系统开机过程中所需要的命令。</p>
<p>​	<code>/srv</code>		服务相关目录。比如网络服务。</p>
<p>​	<code>/sys</code>		记录内核信息，虚拟文件系统。</p>
<p>​	<code>/tmp</code>	临时目录</p>
<p>​	<code>/var</code>		存放一些变化的文件，比如日志文件</p>
<p>​	<code>/usr</code>		usr不是user的缩写，而是UNIX Software Resource的缩写，存放于系统用户有关的文件，会占用很大的存储空间！</p>
<p>​	<code>/proc</code>	虚拟文件系统，数据放置到内存中，存放系统运行信息</p>
<br>
<hr />
<h3 id="12-压缩与解压缩"><a class="markdownIt-Anchor" href="#12-压缩与解压缩"></a> 1.2 压缩与解压缩</h3>
<h4 id="121-gzip压缩工具"><a class="markdownIt-Anchor" href="#121-gzip压缩工具"></a> 1.2.1 gzip压缩工具</h4>
<ul>
<li><code>.gzip</code>工具负责压缩和解压缩<code>.gz</code>格式的压缩包。</li>
<li><code>gzip xxx</code>			//压缩</li>
<li><code>gzip -d xxx.gz</code>	//解压缩</li>
<li>​	<code>gzip</code>对文件夹进行压缩</li>
<li>​	<code>gzip -r xxx</code>		//对文件夹进行压缩</li>
<li>​	<code>gzip -rd xxx.gz</code>	//对文件夹进行解压缩</li>
</ul>
<p>​	<em><strong><code>gzip</code>虽然可以对文件夹进行压缩，但是并不能提供打包的服务，只是对文件夹中的所有文件进行了单独的压缩。</strong></em></p>
<hr />
<h4 id="122-bzip2压缩工具"><a class="markdownIt-Anchor" href="#122-bzip2压缩工具"></a> 1.2.2 bzip2压缩工具</h4>
<p>和<code>gzip</code>类似，只是<code>bzip2</code>工具负责压缩和解压缩<code>.bz2</code>格式的压缩包。</p>
<p><code>bzip2 -z xxx</code>			//压缩</p>
<p><code>bzip2 -d xxx.gz</code>	//解压缩</p>
<br>
<hr />
<h4 id="123-tar-打包工具"><a class="markdownIt-Anchor" href="#123-tar-打包工具"></a> 1.2.3 tar 打包工具</h4>
<p>​	tar工具参数：</p>
<p>-f，使用归档文件或 ARCHIVE 设备</p>
<p>-c：创建新归档，创建压缩文件</p>
<p>-x：从图档中解出文件，解压缩</p>
<p>-j：使用bzip2压缩格式。</p>
<p>-z：使用gzip压缩格式</p>
<p>-v：打印出命令执行过程。</p>
<p>tar工具提供打包服务，就是将多个文件打包，比如</p>
<p><code>tar -vcf</code>  test.tar test	//<code>将test打包成test.tar</code></p>
<p><code>tar -vxf</code>  test.tar		//解包</p>
<hr />
<p>​	<em><strong>上面的tar命令只提供了打包和解包的功能，<code>tar</code>在提供打包和解包的同时使用<code>gzip/bzip2</code>进行压缩，实现类似windwos下winRAR软件的命令。</strong></em></p>
<h5 id="1-对tarbz2进行压缩和解压缩"><a class="markdownIt-Anchor" href="#1-对tarbz2进行压缩和解压缩"></a> 1. 对.tar.bz2进行压缩和解压缩</h5>
<p>​	<code>tar -vxjf</code> xxx.tar.bz2	解压缩</p>
<p>​	<code>tar -vcjf</code> xxx.tar.bz2 xxx 压缩</p>
<h5 id="2-对targz进行压缩和解压缩"><a class="markdownIt-Anchor" href="#2-对targz进行压缩和解压缩"></a> 2、对.tar.gz进行压缩和解压缩</h5>
<p>​	<code>tar -vxzf</code>	xxx.tar.gz		//解压缩</p>
<p>​	<code>tar -vczf</code> xxx.tar.gz xxx 	//压缩</p>
<p>​</p>
<hr />
<h4 id="124-其他格式压缩与解压缩"><a class="markdownIt-Anchor" href="#124-其他格式压缩与解压缩"></a> 1.2.4 其他格式压缩与解压缩</h4>
<h5 id="1-rar格式"><a class="markdownIt-Anchor" href="#1-rar格式"></a> 1、.rar格式</h5>
<p>​	需要先安装<code>rar：sudo apt-get install rar</code></p>
<p>​	<code>rar x</code> xxx.rar		//解压缩</p>
<p>​	<code>rar a</code> xxx.rar xxx	//压缩</p>
<h5 id="2-zip格式"><a class="markdownIt-Anchor" href="#2-zip格式"></a> 2、.zip格式</h5>
<p>​	<strong>zip格式压缩使用“zip“命令：</strong></p>
<p>​	<code>zip -rv</code> xxx.zip xxx</p>
<p>​</p>
<p>​	<strong>zip格式解压缩使用“unzip”命令：</strong></p>
<p>​	<code>unzip -v</code> xxx.zip</p>
<hr />
<h3 id="13-文件权限"><a class="markdownIt-Anchor" href="#13-文件权限"></a> 1.3 文件权限</h3>
<p>文件的权限有三种：读®、写(w)和执行(x)，除了用 r、w 和 x 表示以外，</p>
<p>我们也可以使用二进制数表示，三种权限就可以使用 3 位二进制数来表示，一种权限对应一个</p>
<p>二进制位，如果该位为 1 就表示具备此权限，如果该位为 0 就表示没不具备此权限</p>
<p><img src="https://pic2.imgdb.cn/item/645cfc450d2dde5777515636.png" alt="image-20230404152212833" /></p>
<p><img src="https://pic2.imgdb.cn/item/645cfc5f0d2dde5777517db2.png" alt="image-20230404152223424" /></p>
<br>
<p><em><strong>以这个为例:</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfc6a0d2dde577751864d.png" alt="image-20230404152738341" /></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-rw-rw-r--    </span><br></pre></td></tr></table></figure>
<p>分别表示 <em><strong>文件所属用户</strong></em> 、<em><strong>文件所属用户组</strong></em> 、 <em><strong>其他用户</strong></em> 的权限</p>
<br>
<hr />
<h4 id="132权限修改命令chmod"><a class="markdownIt-Anchor" href="#132权限修改命令chmod"></a> 1.3.2权限修改命令chmod</h4>
<p>命令“chmod”用于修改文件或者文件夹的权限，权限可以使用前面讲的数字表示也可以使</p>
<p>用字母表示，命令格式如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">chmod <span class="selector-attr">[参数]</span>   <span class="selector-attr">[文件名/目录名]</span></span><br></pre></td></tr></table></figure>
<p>主要参数如下：</p>
<p><strong>-c</strong> 效果类似“</p>
<p><em><strong>-v</strong></em> 参数，但仅回显更改的部分。</p>
<p><strong>-f</strong>  不显示错误信息。</p>
<p><strong>-R</strong> 递归处理，指定目录下的所有文件及其子文件目录一起处理。</p>
<p><strong>-v</strong> 显示指令的执行过程</p>
<p><em><strong>例:</strong></em></p>
<p>将<code>file3.c</code>文件权限修改为<code>766</code></p>
<p><img src="https://pic2.imgdb.cn/item/645cfc740d2dde577751a24a.png" alt="image-20230404153715678" /></p>
<br>
<hr />
<h2 id="2️⃣"><a class="markdownIt-Anchor" href="#2️⃣"></a> 2️⃣</h2>
<h3 id="21-gcc编译器"><a class="markdownIt-Anchor" href="#21-gcc编译器"></a> 2.1 gcc编译器</h3>
<p>gcc 命令格式如下:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gcc <span class="selector-attr">[选项]</span> <span class="selector-attr">[文件名字]</span></span><br></pre></td></tr></table></figure>
<p>主要选项如下：</p>
<p><strong>-c</strong>：只编译不链接为可执行文件，编译器将输入的.c 文件编译为.o 的目标文件。</p>
<p><strong>-o</strong>：&lt;输出文件名&gt;用来指定编译结束以后的输出文件名，如果不使用这个选项的话 GCC 默认编译出来的可执行文件名字为 a.out。</p>
<p><strong>-g</strong>：添加调试信息，如果要使用调试工具(如 GDB)的话就必须加入此选项，此选项指示编译的时候生成调试所需的符号信息。(生成debug模式的可执行文件)</p>
<p><strong>-O</strong>：对程序进行优化编译，如果使用此选项的话整个源代码在编译、链接的的时候都会进</p>
<p>行优化，这样产生的可执行文件执行效率就高。</p>
<p><strong>-O2</strong>：比-O 更幅度更大的优化，生成的可执行效率更高，但是整个编译过程会很慢。</p>
<br>
<hr />
<h3 id="22-shell-script"><a class="markdownIt-Anchor" href="#22-shell-script"></a> 2.2 shell script</h3>
<blockquote>
<p>Shell 脚本（shell script），是一种为 shell 编写的脚本程序。</p>
</blockquote>
<h4 id="221-写法"><a class="markdownIt-Anchor" href="#221-写法"></a> 2.2.1 写法</h4>
<p>shell脚本是个纯文本文件，命令从上而下，一行一行的开始执行。<code>shell</code>脚本扩展名为<code>.sh</code>。</p>
<p>shell脚本第一行 <em><strong>一定</strong></em> 要为:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">表示使用bash。</span></span><br></pre></td></tr></table></figure>
<br>
<p><em><strong>shell基本写法</strong></em></p>
<p>​</p>
<p>下面是一个简单的<code>&quot;hello world&quot;</code> 的shell脚本 <code>test.sh</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo &quot;Hello World !&quot;</span><br></pre></td></tr></table></figure>
<br>
<p>运行<code>shell</code>脚本:</p>
<p>因为<code>.sh</code>文件默认没有执行权限 , 所以要给其权限:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x ./test.sh  #使脚本具有执行权限</span><br><span class="line">./test.sh  #执行脚本</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h4 id="222-shell-变量"><a class="markdownIt-Anchor" href="#222-shell-变量"></a> 2.2.2 shell 变量</h4>
<blockquote>
<ul>
<li>
<p>定义变量时，变量名不加美元符号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">name=&quot;yzt&quot;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>变量名和等号之间不能有空格 , 变量的命名需要遵循以下规则:</p>
<ul>
<li>命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。</li>
<li>中间不能有空格，可以使用下划线 <code>_</code>。</li>
<li>不能使用标点符号。</li>
<li>不能使用<code>bash</code>里的关键字（可用help命令查看保留关键字）。</li>
</ul>
</li>
<li>
<p>使用变量的时候 , 只要在变量前面加一个美元<code>($)</code>符号就行 ,</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo $name</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">也可以在变量外面加上花括号</span></span><br><span class="line">echo $&#123;name&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<br>
<p><em><strong>系统变量:</strong></em></p>
<table>
<thead>
<tr>
<th>$n</th>
<th>n 的值为0~n , 表示shell脚本的参数 , <code>$0</code>表示当前运行的脚本文件本身 ,  <code>$1</code> 表示第一个参数 , <code>$2</code> 表示第二个参数 . …</th>
</tr>
</thead>
<tbody>
<tr>
<td><em><strong>$#</strong></em></td>
<td>命令行的参数 <em><strong>个数</strong></em></td>
</tr>
<tr>
<td><em><strong>$?</strong></em></td>
<td>shell运行的前一个命令的返回码</td>
</tr>
<tr>
<td><em><strong>$*</strong></em></td>
<td>以&quot;(<code>$1</code>) (<code>$2</code>) …&quot; 形式的所有参数组成的字符串</td>
</tr>
<tr>
<td><em><strong>$@</strong></em></td>
<td>以 “(<code>$1</code>)” “( <code>$2</code> )” … 形式的所有参数组成的字符串</td>
</tr>
<tr>
<td><em><strong>$$</strong></em></td>
<td>当前脚本程序的进程ID</td>
</tr>
<tr>
<td><em><strong>$!</strong></em></td>
<td>shell运行的前一个命令的进程ID</td>
</tr>
</tbody>
</table>
<p><em><strong>只读变量</strong></em></p>
<blockquote>
<p>使用 <code>readonly</code> 命令可以将变量定义为只读变量，只读变量的值不能被改变。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">name=&quot;yzt&quot;</span><br><span class="line">readonly myUrl</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><em><strong>删除变量</strong></em></p>
<blockquote>
<p>使用<code>unset</code> 命令可以删除变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unset name</span><br></pre></td></tr></table></figure>
<ul>
<li>变量被删除后不能再次使用, <code>unset</code> 命令不能删除 <em><strong>只读变量</strong></em></li>
</ul>
</blockquote>
<br>
<p><em><strong>变量类型</strong></em></p>
<blockquote>
<p><code>shell</code>中的变量存在三种类型</p>
<ul>
<li><em><strong>局部变量</strong></em> : 局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。</li>
<li><em><strong>环境变量</strong></em> :  所有的程序，包括<code>shell</code>启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候<code>shell</code>脚本也可以定义环境变量</li>
<li><em><strong>shell变量</strong></em> :  <code>shell</code>变量是由<code>shell</code>程序设置的特殊变量。<code>shell</code>变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了<code>shell</code>的正常运行</li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="223-字符串"><a class="markdownIt-Anchor" href="#223-字符串"></a> 2.2.3 字符串</h4>
<p><em><strong>单引号字符串</strong></em></p>
<blockquote>
<ul>
<li>单引号里的任何字符都会原样输出，单引号字符串中的 <em><strong>变量是无效</strong></em> 的；</li>
<li>单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">str=&#x27;string&#x27;</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><em><strong>双引号字符串</strong></em></p>
<blockquote>
<ul>
<li>双引号里可以有变量</li>
<li>双引号里可以出现转义字符</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">name=<span class="string">&quot;yzt&quot;</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">str=<span class="string">&quot;name :\&quot;<span class="variable">$&#123;name&#125;</span>\&quot; &quot;</span></span></span><br></pre></td></tr></table></figure>
<p>输出结果为 <code>name : &quot;yzt&quot;</code></p>
</blockquote>
<br>
<hr />
<p><em><strong>拼接字符串</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">your_name=&quot;runoob&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用双引号拼接</span></span><br><span class="line">greeting=&quot;hello, &quot;$your_name&quot; !&quot;</span><br><span class="line">greeting_1=&quot;hello, $&#123;your_name&#125; !&quot;</span><br><span class="line">echo $greeting  $greeting_1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用单引号拼接</span></span><br><span class="line">greeting_2=&#x27;hello, &#x27;$your_name&#x27; !&#x27;</span><br><span class="line">greeting_3=&#x27;hello, $&#123;your_name&#125; !&#x27;</span><br><span class="line">echo $greeting_2  $greeting_3</span><br></pre></td></tr></table></figure>
<p><em><strong>输出结果</strong></em></p>
<figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">hello, runoob ! hello, runoob !</span><br><span class="line">hello, runoob ! hello, $&#123;your_name&#125; !</span><br></pre></td></tr></table></figure>
<hr />
<p><em><strong>获取字符串长度</strong></em></p>
<blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">string=&quot;abcd&quot;</span><br><span class="line">echo $&#123;#string&#125;   # 输出 4</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">变量为数组时，`<span class="variable">$&#123;#string&#125;</span>` 等价于 `<span class="variable">$&#123;#string[0]&#125;</span>`</span></span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><em><strong>提取子字符串</strong></em></p>
<blockquote>
<p><em><strong>例:</strong></em></p>
<p>从字符串第 <strong>2</strong> 个字符开始截取 <strong>4</strong> 个字符：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">string=&quot;runoob is a great site&quot;</span><br><span class="line">echo $&#123;string:1:4&#125; </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出 unoo</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>注意</strong>：第一个字符的索引值为 <strong>0</strong></li>
</ul>
</blockquote>
<br>
<p><em><strong>查找子字符串</strong></em></p>
<blockquote>
<p><em><strong>例</strong></em>: 查找字符 <strong>i</strong> 或 <strong>o</strong> 的位置(哪个字母先出现就计算哪个)：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">string=&quot;runoob is a great site&quot;</span><br><span class="line">echo `expr index &quot;$string&quot; io`  # 输出 4</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>注意：</strong> 以上脚本中 <strong>`</strong> 是反引号，而不是单引号 <strong>'</strong></li>
</ul>
</blockquote>
<br>
<hr />
<h4 id="224-数组"><a class="markdownIt-Anchor" href="#224-数组"></a> 2.2.4 数组</h4>
<blockquote>
<p>bash支持一维数组（不支持多维数组），并且没有限定数组的大小。</p>
<p>类似于 C 语言，数组元素的下标由 0 开始编号。获取数组中的元素要利用下标，下标可以是整数或算术表达式，其值应大于或等于 0。</p>
</blockquote>
<br>
<p><em><strong>定义数组</strong></em></p>
<blockquote>
<p>在 <code>Shell</code> 中，用括号来表示数组，数组元素用&quot;空格&quot;符号分割开。定义数组的一般形式为：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">数组名=(值1 值2 ... 值n)</span><br></pre></td></tr></table></figure>
<p><em><strong>例如：</strong></em></p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">array_name=(value0 value1 value2 value3)</span><br></pre></td></tr></table></figure>
<p><em><strong>或者</strong></em> :</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">array_name=(</span><br><span class="line">value0</span><br><span class="line">value1</span><br><span class="line">value2</span><br><span class="line">value3</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p><em><strong>还可以单独定义数组的各个分量：</strong></em></p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">array_name[0]=value0</span><br><span class="line">array_name[1]=value1</span><br><span class="line">array_name[n]=valuen</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><em><strong>读取数组</strong></em> :</p>
<blockquote>
<p><em><strong>读取数组元素值的一般格式是：</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;数组名[下标]&#125;</span></span><br></pre></td></tr></table></figure>
<p><em><strong>例如：</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">valuen=$&#123;array_name[n]&#125;</span><br></pre></td></tr></table></figure>
<p>使用 <code>@</code> 符号可以获取数组中的所有元素，<em><strong>例如：</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo $&#123;array_name[@]&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<hr />
<h4 id="225-运算符"><a class="markdownIt-Anchor" href="#225-运算符"></a> 2.2.5 运算符</h4>
<p>原生<code>bash</code>不支持简单的数学运算，但是可以通过其他命令来实现，例如 <code>awk</code> 和 <code>expr</code>，<code>expr</code> 最常用。</p>
<p><code>expr</code> 是一款表达式计算工具，使用它能完成表达式的求值操作。</p>
<p>例如，两个数相加( <strong>注意使用的是反引号 `  而不是单引号 ’</strong>  )：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">val=`expr 2 + 2`</span><br><span class="line">echo &quot;两数之和为 : $val&quot;</span><br></pre></td></tr></table></figure>
<p><em><strong>运行结果:</strong></em></p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">两数之和为 : 4</span><br></pre></td></tr></table></figure>
<p><em><strong>注意:</strong></em></p>
<ul>
<li>表达式和运算符之间要有空格，例如 <code>2+2</code> 是不对的，必须写成 <code>2 + 2</code></li>
<li>完整的表达式要被反引号 ` ` 包含</li>
</ul>
<br>
<hr />
<h5 id="2251-算术运算符"><a class="markdownIt-Anchor" href="#2251-算术运算符"></a> 2.2.5.1  算术运算符</h5>
<table>
<thead>
<tr>
<th>+</th>
<th>加法</th>
<th><code>expr $a + $b</code> 结果为 30。</th>
</tr>
</thead>
<tbody>
<tr>
<td>-</td>
<td>减法</td>
<td><code>expr $a - $b</code> 结果为 -10。</td>
</tr>
<tr>
<td>*</td>
<td>乘法</td>
<td><code>expr $a \* $b</code> 结果为  200。</td>
</tr>
<tr>
<td>/</td>
<td>除法</td>
<td><code>expr $b $/ $a</code> 结果为 2。</td>
</tr>
<tr>
<td>%</td>
<td>取余</td>
<td><code>expr $b % $a</code> 结果为 0。</td>
</tr>
<tr>
<td>=</td>
<td>赋值</td>
<td>a=$b 把变量 b 的值赋给 a。</td>
</tr>
<tr>
<td>==</td>
<td>相等。用于比较两个数字，相同则返回 true。</td>
<td>[ $a == $b ] 返回 false。</td>
</tr>
<tr>
<td>!=</td>
<td>不相等。用于比较两个数字，不相同则返回 true。</td>
<td>[ $a != $b ] 返回 true。</td>
</tr>
</tbody>
</table>
<p><strong>注意：</strong></p>
<ul>
<li>条件表达式要放在方括号之间，并且要有空格，例如: <strong>[$a==$b]</strong> 是错误的，必须写成 <strong>[ $a == $b ]</strong>。</li>
<li>乘号(<code>*</code>)前边必须加反斜杠( <code>\</code>)才能实现乘法运算；</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">val=`expr $a \* $b`</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2252-关系运算符"><a class="markdownIt-Anchor" href="#2252-关系运算符"></a> 2.2.5.2 关系运算符</h5>
<blockquote>
<p>关系运算符只支持数字，不支持字符串，除非字符串的值是数字</p>
</blockquote>
<p><em><strong>例:</strong></em> 假定变量 a 为 10，变量 b 为 20：</p>
<table>
<thead>
<tr>
<th>-eq</th>
<th>检测两个数是否相等，相等返回 true。</th>
<th><code>[ $a -eq $b ]</code> 返回 false。</th>
</tr>
</thead>
<tbody>
<tr>
<td>-ne</td>
<td>检测两个数是否不相等，不相等返回 true。</td>
<td><code>[ $a -ne $b ]</code> 返回 true。</td>
</tr>
<tr>
<td>-gt</td>
<td>检测左边的数是否大于右边的，如果是，则返回 true。</td>
<td><code>[ $a -gt $b ]</code> 返回 false。</td>
</tr>
<tr>
<td>-lt</td>
<td>检测左边的数是否小于右边的，如果是，则返回 true。</td>
<td><code>[ $a -lt $b ]</code> 返回 true。</td>
</tr>
<tr>
<td>-ge</td>
<td>检测左边的数是否大于等于右边的，如果是，则返回 true。</td>
<td><code>[ $a -ge $b ]</code> 返回 false。</td>
</tr>
<tr>
<td>-le</td>
<td>检测左边的数是否小于等于右边的，如果是，则返回 true。</td>
<td><code>[ $a -le $b ]</code> 返回 true。</td>
</tr>
</tbody>
</table>
<br>
<hr />
<h5 id="2253-布尔运算符"><a class="markdownIt-Anchor" href="#2253-布尔运算符"></a> 2.2.5.3 布尔运算符</h5>
<p><em><strong>例:</strong></em> 假定变量 a 为 10，变量 b 为 20：</p>
<table>
<thead>
<tr>
<th>!</th>
<th>非运算，表达式为 true 则返回 false，否则返回 true。</th>
<th><code>[ ! false ]</code> 返回 true。</th>
</tr>
</thead>
<tbody>
<tr>
<td>-o</td>
<td>或运算，有一个表达式为 true 则返回 true。</td>
<td><code>[ $a -lt 20 -o $b -gt 100 ]</code> 返回 true。</td>
</tr>
<tr>
<td>-a</td>
<td>与运算，两个表达式都为 true 才返回 true。</td>
<td><code>[ $a -lt 20 -a $b -gt 100 ]</code> 返回 false。</td>
</tr>
</tbody>
</table>
<br>
<hr />
<h5 id="2254-逻辑运算符"><a class="markdownIt-Anchor" href="#2254-逻辑运算符"></a> 2.2.5.4 逻辑运算符</h5>
<p><em><strong>例:</strong></em> 假定变量 a 为 10，变量 b 为 20：</p>
<table>
<thead>
<tr>
<th>&amp;&amp;</th>
<th>逻辑的 AND</th>
<th><code>[[ $a -lt 100 &amp;&amp; $b -gt 100 ]]</code> 返回 false</th>
</tr>
</thead>
<tbody>
<tr>
<td>||</td>
<td>逻辑的 OR</td>
<td><code>[[ $a -lt 100 || $b -gt 100 ]]</code> 返回 true</td>
</tr>
</tbody>
</table>
<br>
<hr />
<h4 id="226-基本流程控制"><a class="markdownIt-Anchor" href="#226-基本流程控制"></a> 2.2.6  基本流程控制</h4>
<blockquote>
<p>在Shell中 , 流程控制不可为空 ,</p>
<p>例如 如果<code>else</code>分支没有语句执行 ,就不要写这个<code>else</code></p>
</blockquote>
<br>
<h5 id="2261-if条件判断"><a class="markdownIt-Anchor" href="#2261-if条件判断"></a> 2.2.6.1 if条件判断</h5>
<p><em><strong>格式:</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">if</span></span></span><br><span class="line">if condition   # condition为条件表达式,  (then 可以写在上面 写成if condition; then)</span><br><span class="line">then</span><br><span class="line">    command1   #</span><br><span class="line">    ...</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">if</span> <span class="keyword">else</span></span></span><br><span class="line">if condition</span><br><span class="line">then</span><br><span class="line">    command1 </span><br><span class="line">else</span><br><span class="line">    command</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">if</span> else-if <span class="keyword">else</span></span></span><br><span class="line">if condition1</span><br><span class="line">then</span><br><span class="line">    command1</span><br><span class="line">elif condition2 </span><br><span class="line">then </span><br><span class="line">    command2</span><br><span class="line">else</span><br><span class="line">    commandN</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">写成一行</span></span><br><span class="line">if condition; then command1; fi</span><br></pre></td></tr></table></figure>
<br>
<p><em><strong>注意事项:</strong></em></p>
<ul>
<li>
<p>如果使用方括号 <code>[…]</code> 作为判断语句 , 大于使用要 <code>-gt</code>，小于使用 <code>-lt</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ &quot;$a&quot; -gt &quot;$b&quot; ]; then</span><br><span class="line">    ...</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果使用 <code>((...))</code> 作为判断语句 ,  大于和小于可以直接使用 <code>&gt;</code> 和 <code>&lt;</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if (( a &gt; b )); then</span><br><span class="line">    ...</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
</li>
</ul>
<br>
<hr />
<h5 id="2262-for循环"><a class="markdownIt-Anchor" href="#2262-for循环"></a> 2.2.6.2 for循环</h5>
<p><em><strong>格式:</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for var in item1 item2 ... itemN</span><br><span class="line">do</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">done</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">或</span></span><br><span class="line">for((初始值;限制值;执行步长))</span><br><span class="line">do</span><br><span class="line">	command</span><br><span class="line">done</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">写成一行</span></span><br><span class="line">for var in item1 item2 ... itemN; do command1; command2… done;</span><br></pre></td></tr></table></figure>
<ul>
<li>当变量值在列表里，for 循环即执行一次所有命令，使用变量名获取 <em><strong>列表中的当前取值</strong></em> 。</li>
<li>命令可为任何有效的 <code>shell</code> 命令和语句。</li>
<li><code>in</code> 列表可以包含替换、字符串和文件名。</li>
<li><code>in</code>列表是可选的，如果不用它，for循环使用命令行的位置参数。</li>
</ul>
<p><em><strong>例:</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for loop in 1 2 3 4 5</span><br><span class="line">do</span><br><span class="line">    echo &quot;The value is: $loop&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p><em><strong>输出结果:</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">The value is: 1</span><br><span class="line">The value is: 2</span><br><span class="line">The value is: 3</span><br><span class="line">The value is: 4</span><br><span class="line">The value is: 5</span><br></pre></td></tr></table></figure>
<p><em><strong>顺序输出字符串中的字符：</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">for str in This is a string</span><br><span class="line">do</span><br><span class="line">    echo $str</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p><em><strong>输出结果:</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">This</span><br><span class="line">is</span><br><span class="line">a</span><br><span class="line">string</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2263-while-循环"><a class="markdownIt-Anchor" href="#2263-while-循环"></a> 2.2.6.3 while 循环</h5>
<blockquote>
<p>while 循环用于不断执行一系列命令，也用于从输入文件中读取数据。</p>
<p><em><strong>格式为：</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">while condition</span><br><span class="line">do</span><br><span class="line">command</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
</blockquote>
<br>
<p><em><strong>例:</strong></em></p>
<blockquote>
<p>如果 int 小于等于 5，那么条件返回真。int 从 1 开始，每次循环处理时，int 加 1</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">int=1</span><br><span class="line">while(( $int&lt;=5 ))</span><br><span class="line">do</span><br><span class="line">    echo $int</span><br><span class="line">    let &quot;int++&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p><em><strong>输出</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h6 id="无限循环"><a class="markdownIt-Anchor" href="#无限循环"></a> 无限循环</h6>
<p>无限循环语法:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">while :</span><br><span class="line">do</span><br><span class="line">    command</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p><em><strong>或</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">while true</span><br><span class="line">do</span><br><span class="line">    command</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p><em><strong>或</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for (( ; ; ))</span><br></pre></td></tr></table></figure>
<br>
<hr />
<h5 id="2264"><a class="markdownIt-Anchor" href="#2264"></a> 2.2.6.4</h5>
<ul>
<li><strong>case … esac</strong> 是一种多分支选择结构，每个 case 分支用右圆括号<code>)</code>开始，</li>
<li>用两个分号 <code>;;</code> 表示 <code>break</code>，即执行结束，跳出整个 case … esac 语句</li>
<li>esac（就是 case 反过来）作为结束标记。</li>
<li>可以用 case 语句匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。</li>
</ul>
<p><em><strong>格式 :</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">case 值 in</span><br><span class="line">模式1)</span><br><span class="line">    command1;;</span><br><span class="line">模式2)</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<ul>
<li>case 工作方式如上所示，取值后面必须为单词 <strong>in</strong>，每一模式必须以右括号<code>)</code> 结束</li>
<li>取值可以为 <em><strong>变量或常数</strong></em> ，匹配发现取值符合某一模式后，其间所有命令开始执行直至 <code>;;</code></li>
</ul>
<br>
<p><em><strong>例</strong></em> :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &#x27;输入 1 到 4 之间的数字:&#x27;</span><br><span class="line">echo &#x27;你输入的数字为:&#x27;</span><br><span class="line">read aNum</span><br><span class="line">case $aNum in</span><br><span class="line">    1)  echo &#x27;你选择了 1&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    2)  echo &#x27;你选择了 2&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    3)  echo &#x27;你选择了 3&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    4)  echo &#x27;你选择了 4&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    *)  echo &#x27;你没有输入 1 到 4 之间的数字&#x27;</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<p><em><strong>输出</strong></em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">输入 1 到 4 之间的数字:</span><br><span class="line">你输入的数字为:</span><br><span class="line">3</span><br><span class="line">你选择了 3</span><br></pre></td></tr></table></figure>
<br>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>随记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>驱动开发</tag>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 学习笔记 (二) —— Cortex -A 架构 、寄存器组与运行模式</title>
    <url>/2023/05/12/Linux%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20(%E4%BA%8C)%20%E2%80%94%E2%80%94%20Cortex%20-A%20%E6%9E%B6%E6%9E%84%20%E3%80%81%E5%AF%84%E5%AD%98%E5%99%A8%E7%BB%84%E4%B8%8E%E8%BF%90%E8%A1%8C%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="linux学习笔记"><a class="markdownIt-Anchor" href="#linux学习笔记"></a> Linux学习笔记</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.28」</em>   最后补充<br />
<br><br />
<strong>author：</strong>  <em>Y.Z.T.</em><br />
<br><br />
<br></p>
<p><strong>简介：</strong> Linux学习笔记 , 写的比较乱 , 属于随记</p>
</blockquote>
<span id="more"></span>
<br>
<hr />
<h2 id="3️⃣-cortex-a-架构"><a class="markdownIt-Anchor" href="#3️⃣-cortex-a-架构"></a> 3️⃣   Cortex -A 架构</h2>
<h3 id="31"><a class="markdownIt-Anchor" href="#31"></a> 3.1</h3>
<blockquote>
<p>ARM指令集分两种,  <em><strong>Thumb指令集</strong></em>，<em><strong>ARM指令集</strong></em></p>
<ul>
<li><code>ARM</code>指令长度为32位，<code>Thumb</code>指令长度为16位。</li>
<li>这种特点使得ARM既能执行16位指令，又能执行32位指令，从而增强了ARM内核的功能</li>
</ul>
</blockquote>
<hr />
<h4 id="310-arm三级流水线技术"><a class="markdownIt-Anchor" href="#310-arm三级流水线技术"></a> 3.1.0  ARM三级流水线技术</h4>
<blockquote>
<p><strong>ARM7</strong>处理器核使用了典型<strong>三级流水线的冯诺伊曼结构</strong></p>
</blockquote>
<p><em><strong>三级流水线技术</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfc940d2dde577751f021.png" alt="image-20230427210653599" /></p>
<br>
<blockquote>
<p>流水线使用三个阶段，因此指令分为三个阶段执行：</p>
<ul>
<li>取指（从存储器装载一条指令）</li>
<li>译码（识别将要被执行的指令）</li>
<li>执行（处理指令并将结果写回寄存器）</li>
</ul>
</blockquote>
<br>
<p><em><strong>为什么发送中断时 , 保存的<code>pc</code>地址是 ( PC - 4 )</strong></em></p>
<ul>
<li><code>R15(PC)</code> 寄存器 总是指向 <em><strong>“正在取指”</strong></em>  的指令，而不是指向 <em><strong>“正在执行”</strong></em> 的指令或正在“译码”的指令。</li>
<li>一般来说，人们习惯性约定将 “ <em><strong>正在执行</strong></em>  的指令作为参考点” ，称之为当前第一条指令，因此 <em><strong>PC总是指向第三条指令</strong></em> 。</li>
<li>当<mark>ARM状态</mark>时，每条指令为 <strong>4字节</strong> 长，所以<code>PC</code>始终指向该指令地址 <em><strong>加8字节</strong></em> 的地址，即： <em><strong>PC值=当前程序执行位置 + 8</strong></em></li>
<li><em><strong>PC指向的是正在取指的地址（下一条指令）</strong></em> ，那么cpu正在 <em><strong>译指的指令地址是<code>PC-4</code></strong></em>  ,  即<code>PC</code>所 <em><strong>指向的地址</strong></em> 和现在所 <em><strong>执行的指令地址</strong></em> 相差8</li>
<li>所以 当突然发生中断的时候，保存的是PC的地址 <code>PC-8+4 = PC-4</code> (下一条指令的地址）</li>
</ul>
<br>
<hr />
<h4 id="311-九种运行模式"><a class="markdownIt-Anchor" href="#311-九种运行模式"></a> 3.1.1 九种运行模式</h4>
<p><img src="https://pic2.imgdb.cn/item/645cfc9d0d2dde577751fa34.png" alt="image-20230427200728000" /></p>
<blockquote>
<ul>
<li>
<p>除了 User(USR)用户模式以外，其它 8 种运行模式都是 <em><strong>特权模式</strong></em> 。</p>
<blockquote>
<p>特权模式具有以下权利:</p>
<ul>
<li>MRS（把状态寄存器的内容放到通用寄存器）；</li>
<li>MSR（把通用寄存器的内容放到状态寄存器中）。</li>
</ul>
<br>
<p>由于状态寄存器中的内容不能够改变，因此，要先把内容复制到通用寄存器中，然后修改通用寄存</p>
<p>器中的内容，再把通用寄存器中的内容复制给状态寄存器中，即可完成“修改状态寄存器”的任务。</p>
</blockquote>
<br>
</li>
<li>
<p>这几个运行模式可以通过软件进行任意切换，也可以通过中断或者异常来进行切换。(这几个模式除去 <em><strong>系统模式(SYS)</strong></em> 外 , 统称异常模式)</p>
</li>
<li>
<p>大多数的程序都运行在 <em><strong>用户模式</strong></em> ，用户模式下是不能访问系统所有资源的，用户模式下需要借助 <em><strong>异常</strong></em> 来完成模式切换</p>
</li>
</ul>
</blockquote>
<br>
<hr />
<h5 id="3111用户模式user"><a class="markdownIt-Anchor" href="#3111用户模式user"></a> 3.1.1.1用户模式(USER)</h5>
<blockquote>
<ul>
<li>用户模式是用户程序的工作模式，它运行在操作系统的用户态，它没有权限去操作其它硬件资源，</li>
<li>用户模式只能执行处理自己的数据，也<strong>不能切换到其它模式下</strong>，要想访问硬件资源或切换到其它模式只能通过软中断或产生异常。</li>
</ul>
</blockquote>
<br>
<hr />
<h5 id="3112-系统模式sys"><a class="markdownIt-Anchor" href="#3112-系统模式sys"></a> 3.1.1.2 系统模式(SYS)</h5>
<ul>
<li>系统模式是特权模式，不受用户模式的限制。</li>
<li>用户模式和系统模式共用一套寄存器，操作系统在该模式下可以方便的访问用户模式的寄存器，</li>
<li>而且操作系统的一些特权任务可以使用这个模式访问一些受控的资源。</li>
</ul>
<blockquote>
<p><em><strong>说明</strong></em>：用户模式与系统模式两者使用相同的寄存器，都没有<code>SPSR</code>（<em>Saved Program</em></p>
<p><em>Statement Register，已保存程序状态寄存器）</em>，但系统模式比用户模式有更高的权限，可</p>
<p>以访问所有系统资源。</p>
</blockquote>
<br>
<hr />
<h5 id="3113-一般中断模式irq"><a class="markdownIt-Anchor" href="#3113-一般中断模式irq"></a> 3.1.1.3   <strong>一般中断模式</strong>(IRQ)</h5>
<blockquote>
<p>一般中断模式也叫 <em><strong>普通中断模式</strong></em>，用于处理一般的中断请求，通常在硬件产生中断信号之后自动进入该模式，该模式为特权模式，可以自由访问系统硬件资源。</p>
</blockquote>
<br>
<hr />
<h5 id="3114-快速中断模式fiq"><a class="markdownIt-Anchor" href="#3114-快速中断模式fiq"></a> 3.1.1.4  快速中断模式(FIQ)</h5>
<blockquote>
<ul>
<li>快速中断模式是相对一般中断模式而言的，它是用来处理对时间要求比较紧急的中断请求，主要用于高速数据传输及通道处中。</li>
<li>快中断有许多 <em><strong>（R8~R14）自己的专用寄存器</strong></em> ，发生中断时，使用自己的寄存器就避免了保存和恢复某些寄存器。</li>
<li>如果异常中断处理程序中使用它自己的物理寄存器之外的其他寄存器，异常中断处理程序必须 <em><strong>保存和恢复</strong></em> 这些寄存器</li>
</ul>
</blockquote>
<br>
<hr />
<h5 id="3115-管理模式svs"><a class="markdownIt-Anchor" href="#3115-管理模式svs"></a> 3.1.1.5 管理模式(SVS)</h5>
<p>管理模式是 <strong>CPU上电后默认模式</strong> ，因此，在该模式下主要用来做 <strong>系统的初始化</strong> ，</p>
<p>软中断处理也在该模式下。当用户模式下的用户程序请求使用硬件资源时，<em><strong>通过软件中断进入该模式。</strong></em></p>
<blockquote>
<p><em><strong>说明：</strong></em>  系统复位或开机、软中断时进入到SVC模式下。</p>
</blockquote>
<br>
<hr />
<h5 id="3116-终止模式abt"><a class="markdownIt-Anchor" href="#3116-终止模式abt"></a> 3.1.1.6 终止模式(ABT)</h5>
<p>终止模式用于支持虚拟内存或存储器保护，当用户程序访问<strong>非法地址</strong>，<strong>没有权限读取的内存地址时</strong>，会进入该模式，linux下编程时经常出现的<code>segment fault</code>通常都是在该模式下抛出返回的。</p>
<br>
<hr />
<h5 id="3117-未定义模式und"><a class="markdownIt-Anchor" href="#3117-未定义模式und"></a> 3.1.1.7 未定义模式(UND)</h5>
<blockquote>
<p>未定义模式用于支持硬件协处理器的软件仿真，CPU在指令的译码阶段不能识别该指令操作时，会进入未定义模式。</p>
</blockquote>
<br>
<hr />
<h4 id="312-arm寄存器组"><a class="markdownIt-Anchor" href="#312-arm寄存器组"></a> 3.1.2 ARM寄存器组</h4>
<blockquote>
<p>ARM处理器共有<strong>37</strong>个寄存器。它包含<strong>31</strong>个通用寄存器和<strong>6</strong>个状态寄存器。</p>
<blockquote>
<ul>
<li><em><strong>34</strong></em> 个通用寄存器，包括 <code>R15</code> 程序计数器(PC)，这些寄存器都是  <em><strong>32 位</strong></em> 的。</li>
<li><em><strong>8 个</strong></em> 状态寄存器，包括 <code>CPSR</code> 和 <code>SPSR</code>。</li>
<li><code>Hyp</code> 模式下独有一个 <code>ELR_Hyp</code> 寄存器。</li>
</ul>
</blockquote>
</blockquote>
<p><em><strong>Contex -A 寄存器组</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfca90d2dde5777521d94.png" alt="image-20230427203917624" /></p>
<blockquote>
<ul>
<li>
<p><em><strong>低等寄存器 (R0-R7)</strong></em></p>
<ul>
<li>
<p>在所有运行模式下，未分组寄存器都指向<strong>同一个物理寄存器</strong>，他们未被系统用作特殊的用途。</p>
</li>
<li>
<p>因此在中断或异常处理进行<strong>异常模式转换</strong>时，由于不同的处理器运行模式均使用相同的物理寄存器，所</p>
<p>以可能造成<strong>寄存器中数据的破坏</strong>。</p>
</li>
</ul>
<br>
</li>
<li>
<p><em><strong>高等寄存器 (R8 -R14)</strong></em></p>
<ul>
<li>
<p>高等寄存器 , 每次所访问的物理寄存器都<strong>与当前的处理器运行模式相关</strong>。</p>
</li>
<li>
<p><code>R13</code>常用作存放 <em><strong>堆栈指针</strong></em> ，用户也可以使用其他寄存器存放堆栈指针，但在<code>Thumb</code>指令集下，某些指令强制要求使用<code>R13</code>存放堆栈指针。</p>
</li>
<li>
<p><code>R14</code>称为链接寄存器<code>（LR，Link Register）</code>，当执行子程序时，<code>R14</code>可得到<code>R15（PC）</code>的备份，执</p>
<p>行完子程序后，又将<code>R14</code>的值复制回<code>PC</code>，即使用<code>R14</code><em><strong>保存返回地址</strong></em>。</p>
<blockquote>
<p><em><strong>例 :</strong></em>  将 <code>R14(LR)</code>中的值赋给 <code>R15(PC)</code>即可完成子函数返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV PC, LR ;寄存器 LR 中的值赋值给 PC，实现跳转</span><br></pre></td></tr></table></figure>
<p>或者以在子函数的入口出将 <em><strong>LR 入栈</strong></em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUSH &#123;LR&#125; ;将 LR 寄存器压栈</span><br><span class="line"></span><br><span class="line">;在子函数最后出栈即可</span><br><span class="line">POP &#123;PC&#125;  ;@将上面压栈的 LR 寄存器数据出栈给 PC 寄存器，严格意义上来讲应该是将@LR-4 赋给 PC(因为是3级流水线)</span><br></pre></td></tr></table></figure>
<br>
</blockquote>
</li>
<li>
<p>寄存器<code>R15</code>用作程序计数器（PC），在<code>ARM</code>状态下，<em><strong>位[1:0]为0</strong></em>，<em><strong>位[31:2]用于保存PC</strong></em>；在<code>Thumb</code>状态下,<em><strong>位[0]为0</strong></em>，<em><strong>位[31:1]用于保存PC</strong></em>。</p>
</li>
</ul>
</li>
</ul>
</blockquote>
<br>
<p><em><strong>各个模式的寄存器</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfcb00d2dde57775234c9.png" alt="image-20230427204254828" /></p>
<blockquote>
<ul>
<li>
<p>浅色字体的是与 User 模式所 <em><strong>共有</strong></em> 的寄存器，蓝绿色背景的是各个模式所 <em><strong>独有</strong></em> 的寄存器。</p>
</li>
<li>
<p>在所有的模式中，低寄存器组 <em><strong>(R0~R7)</strong></em> 是共享同一组物理寄存器的 , 一些高寄存器组在不同的模式有自己独有的寄存器，比如 <code>FIQ</code> 模式下 <code>R8~R14</code> 是独立的物理寄存器。</p>
<blockquote>
<ul>
<li>假如某个程序在 <code>FIQ</code> 模式下访问 <code>R13</code> 寄存器，那它实际访问的是寄存器 <code>R13_fiq</code>，</li>
<li>如果程序处于 <code>SVC</code> 模式下访问 <code>R13</code> 寄存器，那它实际访问的是寄存器 <code>R13_svc</code>。</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<br>
<hr />
<p><em><strong>程序状态寄存器 ( CPSR)</strong></em></p>
<blockquote>
<ul>
<li>除了<code>User</code> 和 <code>Sys</code> 这两个模式 , 其他7个模式都配备 一个备份程序状态寄存器 ( <code>SPSR</code>)</li>
<li>当特定异常中断发生时，<code>SPSR</code> 寄存器用来保存当前程序状态寄存器(<code>CPSR</code>)的值，当异常退出以后可以用 SPSR 中保存的值来恢复 <code>CPSR</code></li>
</ul>
</blockquote>
<br>
<p><strong>CPSR 寄存器结构如图所示:</strong></p>
<p><img src="https://pic2.imgdb.cn/item/645cfcb90d2dde577752442a.png" alt="image-20230501160129286" /></p>
<blockquote>
<ul>
<li>
<p><strong>N(bit31)</strong>：当两个补码表示的 有符号整数运算的时候，<code>N=1</code> 表示运算对的结果为 <em><strong>负数</strong></em> ，<code>N=0</code>表示结果为  <em><strong>正数</strong></em></p>
</li>
<li>
<p><strong>Z(bit30)</strong> :   <code>Z=1</code> 表示运算结果为 <em><strong>零</strong></em> ，<code>Z=0</code> 表示运算结果 <em><strong>不为零</strong></em> ，对于 <code>CMP</code> 指令，<code>Z=1</code> 表示进行比较的两个数 <em><strong>大小相等</strong></em></p>
</li>
<li>
<p><strong>C(bit29)</strong>：</p>
<blockquote>
<ul>
<li>在加法指令中，当结果产生了 <em><strong>进位</strong></em> ，则 <code>C=1</code>，表示无符号数运算发生上溢，其它情况下 <code>C=0</code>。</li>
<li>在减法指令中，当运算中发生 <em><strong>借位</strong></em> ，则 <code>C=0</code>，表示无符号数运算发生下溢，其它情况下 C=1。</li>
<li>对于包含  <em><strong>移位操作</strong></em> 的非加/减法运算指令，C 中包含最后一次溢出的位的数值，对于其它非加/减运算指令，C 位的值通常不受影响。</li>
</ul>
</blockquote>
</li>
<li>
<p><strong>V(bit28)</strong>  :  对于加/减法运算指令，当操作数和运算结果表示为二进制的补码表示的带符号数时，<code>V=1</code> 表示 <em><strong>符号位溢出</strong></em> ，通常其他位不影响 V 位。</p>
</li>
<li>
<p><strong>Q(bit27)</strong> :  仅 <code>ARM v5TE_J</code> 架构支持，表示饱和状态，<code>Q=1</code> 表示累积饱和，<code>Q=0</code> 表示累积不饱和</p>
</li>
<li>
<p><strong>IT[1:0] (bit26:25)</strong> : 和 <code>IT[7:2](bit15:bit10)</code>一起组成 <code>IT[7:0]</code>，作为 <code>IF-THEN</code> 指令执行状态。</p>
</li>
<li>
<p><strong>J(bit24)</strong> :  仅 <code>ARM_v5TE-J</code> 架构支持，<code>J=1</code> 表示处于 <code>Jazelle</code> 状态，此位通常和 <code>T(bit5)</code>位一起表示当前所使用的指令集</p>
<blockquote>
<p><em><strong>如下所示 :</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfcc50d2dde5777524e64.png" alt="image-20230501160804819" /></p>
<p><img src="https://pic2.imgdb.cn/item/645cfccd0d2dde577752569d.png" alt="image-20230501160815446" /></p>
</blockquote>
</li>
<li>
<p><strong>GE[3:0] (bit19:16)</strong>：<code>SIMD</code> 指令有效，大于或等于。</p>
</li>
<li>
<p><strong>IT[7:2] (bit15:10)</strong> ： 参考 <code>IT[1:0]</code></p>
</li>
<li>
<p><strong>E(bit9)</strong> ： 大小端控制位，<code>E=1</code> 表示 <em><strong>大端模式</strong></em> ，<code>E=0</code> 表示 <em><strong>小端模式</strong></em></p>
</li>
<li>
<p><strong>A(bit8)</strong> ： 禁止异步中断位，<code>A=1</code> 表示禁止异步中断。</p>
</li>
<li>
<p><strong>I(bit7)</strong>  ：  <code>I=1</code> 禁止 IRQ，<code>I=0</code> 使能 IRQ</p>
</li>
<li>
<p><strong>F(bit6)</strong> :  <code>F=1</code> 禁止 FIQ，<code>F=0</code> 使能 FIQ</p>
</li>
<li>
<p><strong>T(bit5)</strong> :  控制指令执行状态，表明本指令是 <code>ARM</code> 指令还是 <code>Thumb</code> 指令，通常和 <code>J(bit24)</code>一起表明指令类型，参考 <code>J(bit24)</code>位。</p>
</li>
<li>
<p><strong>M[4:0]</strong>  :  处理器模式控制位</p>
<blockquote>
<p><strong>具体模式如下所示</strong> :</p>
<p><img src="https://pic2.imgdb.cn/item/645cfcd60d2dde57775261b6.png" alt="image-20230501161303446" /></p>
</blockquote>
</li>
</ul>
</blockquote>
<hr />
<h4 id="313-中断系统"><a class="markdownIt-Anchor" href="#313-中断系统"></a> 3.1.3 中断系统</h4>
<p><em><strong>中断向量表</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfcea0d2dde57775277a0.png" alt="image-20230506205800419" /></p>
<br>
<blockquote>
<p><code>Cortex-A</code> 内核 <code>CPU</code> 的所有外部中断 属于 <code>IRQ</code> 中断 , 当任意一个外部中断发生的时候都会触发 IRQ 中断</p>
</blockquote>
<p><em><strong>中断类型介绍:</strong></em></p>
<ul>
<li><em><strong>复位中断</strong></em> <code>(Rest)</code>，<code>CPU</code> 复位以后就会进入复位中断，我们可以在复位中断服务函数里面做一些初始化工作，比如初始化 <code>SP</code> 指针<code>DDR</code> 等等。</li>
<li><em><strong>未定义指令中断</strong></em> <code>(Undefined Instruction)</code>，如果指令不能识别的话就会产生此中断</li>
<li><em><strong>软中断</strong></em> <code>(Software Interrupt,SWI)</code>，由 <code>SWI</code> 指令引起的中断，<code>Linux</code> 的系统调用会用 <code>SWI</code>指令来引起软中断，通过软中断来陷入到内核空间。</li>
<li><em><strong>指令预取中止中断</strong></em> <code>(Prefetch Abort)</code>，预取指令的出错的时候会产生此中断</li>
<li><em><strong>数据访问中止中断</strong></em> <code>(Data Abort)</code>，访问数据出错的时候会产生此中断。</li>
<li><em><strong>IRQ 中断</strong></em> <code>(IRQ Interrupt)</code>，外部中断，芯片内部的 <em><strong>外设中断</strong></em> 都会引起此中断的发生</li>
<li><em><strong>FIQ 中断</strong></em> <code>(FIQ Interrupt)</code>，快速中断，如果需要快速处理中断的话就可以使用此中断。主要用于高速数据传输及通道处理中 , FIQ有 自己的专用寄存器<code>( R8 ~R14 )</code></li>
</ul>
<br>
<p><em><strong>GIC中断控制器 :</strong></em></p>
<blockquote>
<ul>
<li>GIC中断控制器 用于接收到外部中断信号后 , 进行处理最终 通过 <code>VFIQ</code> 、<code>VIRQ</code>、<code>FIQ</code>、<code>IRQ</code> 四个信号报给<code>ARM</code>内核</li>
<li>GIC 将众多的 <em><strong>中断源</strong></em> 分为分为三类：
<ul>
<li><code>SPI(Shared Peripheral Interrupt)</code><em><strong>共享中断</strong></em> ， 这是所有核共享的中断 ， 这些中断所有的<code>Core</code>都可以处理 ， 不限定特定<code>core</code></li>
<li><code>PPI(Private Peripheral Interrupt)</code>，<em><strong>私有中断</strong></em>，每个核有自己独有的中断。这些独有的中断需要指定的核心进行处理</li>
<li><code>SGI(Software-generated Interrupt)</code>，<em><strong>软件中断</strong></em>，由软件触发引起的中断，通过向寄存器<code>GICD_SGIR</code> 写入数据来触发，系统会使用 <code>SGI</code> 中断来完成  <em><strong>多核</strong></em>  之间的通信。</li>
</ul>
</li>
</ul>
</blockquote>
<br>
<hr />
]]></content>
      <categories>
        <category>学习记录</category>
        <category>随记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>驱动开发</tag>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式内存栈 （汇编随记）</title>
    <url>/2023/05/12/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%86%85%E5%AD%98%E6%A0%88%20%EF%BC%88%E6%B1%87%E7%BC%96%E9%9A%8F%E8%AE%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="嵌入式内存栈-汇编随记"><a class="markdownIt-Anchor" href="#嵌入式内存栈-汇编随记"></a> 嵌入式内存栈 （汇编随记）</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.28」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<p><strong>简介：</strong> 随记 , 内存空间分布 与 函数调用过程中的栈帧变化</p>
</blockquote>
 <br>
<span id="more"></span>
<hr />
<h3 id="1️⃣-内存空间分布"><a class="markdownIt-Anchor" href="#1️⃣-内存空间分布"></a> 1️⃣ 内存空间分布</h3>
<p>可执行文件(<code>.o</code>)在被加载到内存中时 , <em><strong>内存空间分布图</strong></em>:</p>
<p><img src="https://pic2.imgdb.cn/item/632ea1e216f2c2beb1c1c7ed.png" alt="image-20220924001131747" /></p>
<br>
<ul>
<li><em><strong>函数</strong></em> 翻译成二进制指令放在 <em><strong>代码段</strong></em> 中</li>
<li><em><strong>初始化的全局变量</strong></em> 和 <em><strong>静态局部变量</strong></em> 放在 <em><strong>数据段</strong></em> 中(.data)</li>
<li><em><strong>未初始化的全局变量</strong></em> 和 <em><strong>静态变量</strong></em> 放在  <em><strong>BSS段</strong></em> 中(.bss)</li>
<li>函数的 <em><strong>局部变量</strong></em> 保存在 <em><strong>栈</strong></em> 中</li>
<li>使用<code>malloc</code>申请的 <em><strong>动态内存</strong></em> 保存在 <em><strong>堆空间</strong></em> 中</li>
</ul>
<br>
<hr />
<h3 id="2️⃣-栈的使用"><a class="markdownIt-Anchor" href="#2️⃣-栈的使用"></a> 2️⃣ 栈的使用</h3>
<br>
<blockquote>
<p><em><strong>栈的基本操作:</strong></em> 入栈(push)和出栈(pop)</p>
<p><em><strong>空栈与满栈:</strong></em></p>
<blockquote>
<ul>
<li>根据栈指针<code>SP</code> 指向栈顶元素的不同, 栈可以分成<strong>满栈</strong>和<strong>空栈</strong></li>
<li><strong>满栈</strong>的栈指针<code>SP</code> 总是指向栈顶元素</li>
<li><strong>空栈</strong>的栈指针总是指向栈顶元素上方的可用元素。</li>
</ul>
</blockquote>
<p><em><strong>递增栈和递减栈：</strong></em></p>
<blockquote>
<ul>
<li>根据栈的生长方向不同 , 栈可以分成<strong>递增栈</strong>和<strong>递减栈</strong></li>
<li>一个元素入栈时, <strong>递增栈</strong>的栈指针从<strong>低地址向高地址</strong>增长</li>
<li>一个元素入栈时, <strong>递减栈</strong>的栈指针从<strong>高地址向低地址</strong>增长</li>
</ul>
</blockquote>
 <br>
<p><em><strong>栈的作用 :</strong></em></p>
<blockquote>
<ul>
<li><strong>栈</strong>是C语言运行的基础</li>
<li>C语言函数中的<strong>局部变量</strong>、传递的<strong>实参</strong>、<strong>返回的结果</strong>、编译器生成的<strong>临时变量</strong>都是保存在栈中的</li>
<li>所以在系统一上电会先运行<strong>汇编</strong>代码 , 先初始化栈空间 , 再跳入第一个C语言函数</li>
</ul>
</blockquote>
<br>
<p><em><strong>ARM处理器使用的是满递减栈</strong></em></p>
 <br>
<p><em><strong>防止栈溢出 :</strong></em></p>
<ul>
<li>尽量不要在函数内使用大数组,如果确实需要大块内存,则可以使用<code>malloc</code>申请动态内存。</li>
<li>函数的嵌套层数不宜过深。</li>
<li>递归的层数不宜太深。</li>
</ul>
</blockquote>
<br>
<p><em><strong>栈的分类</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfa2c0d2dde57774ec4cf.png" alt="image-20221003131823961" /></p>
<br>
<p><em><strong>满递减栈入栈操作</strong></em></p>
<p><img src="https://pic2.imgdb.cn/item/645cfa390d2dde57774ed633.png" alt="image-20221003131921334" /></p>
<br>
<hr />
<h4 id="21-函数调用"><a class="markdownIt-Anchor" href="#21-函数调用"></a> 2.1 函数调用</h4>
<h5 id="211-栈帧"><a class="markdownIt-Anchor" href="#211-栈帧"></a> 2.1.1 栈帧</h5>
<p>每个函数的栈空间被称为<strong>栈帧</strong></p>
<br>
<p><font face="华文彩云" color=red size=5>说明：</font ></p>
<blockquote>
<ul>
<li>每个栈帧都使用两个寄存器维护 , 其中<code>FP</code> 指向栈帧底部 ; <code>SP</code> 指向栈帧的顶部</li>
</ul>
<p><img src="https://pic2.imgdb.cn/item/645cfa4d0d2dde57774ef064.png" alt="image-20221003141511274" /></p>
<ul>
<li>SP总是指向当前<strong>正在运行函数</strong>栈帧的栈顶 ; FP总是指向<strong>当前运行函数</strong>的栈底</li>
</ul>
  <br>
<ul>
<li>栈帧用于保存局部变量和实参, 还用于保存<strong>函数的上下文</strong></li>
</ul>
<blockquote>
<p>例如<code>main</code>函数调用了<code>f()</code>函数</p>
<ul>
<li>
<p>main()的 <em><strong>基址FP</strong></em> , main()的**<em>返回地址LR<em><strong>都保存在f()函数的</strong>栈帧</em></em>中</p>
</li>
<li>
<p>上级函数栈帧的<strong>起始地址(FP)</strong>, 即栈底会保存在当前函数的栈帧中</p>
</li>
<li>
<p>多个栈帧通过FP构成<strong>一个链</strong> , 就是某个进程的函数<strong>调用栈</strong></p>
</li>
<li>
<p>当函数运行结束后, 当前函数的栈帧空间就会释放, SP/FP指向上一级函数栈帧</p>
<p><font face="华文彩云" color=red size=5>示例：</font ></p>
<p><em><strong>C语言原型</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">g</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">300</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="number">1</span> = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">30</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">40</span>;</span><br><span class="line">    g();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i= <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">4</span>;</span><br><span class="line">    f();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em><strong>汇编代码:</strong></em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;main&gt;</span><br><span class="line">push &#123;fp,lr&#125;	;将当前fp所指向的地址,即main的上级函数栈帧基址压入堆栈 ; 同时将mian的上级返回地址压入堆栈</span><br><span class="line">add fp,sp #4    ;将fp指向当前sp指针的前一个地址(即保存基址FP的地方)</span><br><span class="line">sub sp,sp,#16	;开辟栈帧空间 , 将SP指向栈顶(即②位置), </span><br><span class="line">mov r3,#2		;</span><br><span class="line">str r3,[fp,#-16]	;将局部变量2 压入FP偏移4个地址的位置</span><br><span class="line">...				; 同理压入其他局部变量</span><br><span class="line">...</span><br><span class="line">bl(f的地址)&lt;f&gt;		   ; 调用f()函数(带链接跳转 , 跳到f()所在的地址)同时将pc值保存在LR寄存器</span><br><span class="line">mov r3 #0		 ;返回值 </span><br><span class="line">mov r0 r3		 ;保存返回值</span><br><span class="line">mov sp,fp,#4	 ;将SP指向上级函数栈帧栈顶，即位置①（出栈先移动SP指针，再弹出数据）</span><br><span class="line">pop &#123;fp,pc&#125;		 ;将FP、LR的值依次弹出到FP、PC寄存器。实现跳转回上级函数</span><br><span class="line">----------------------------------------------</span><br><span class="line"></span><br><span class="line">(f的地址)&lt;f&gt;		;函数f的内存地址</span><br><span class="line">push &#123;fp,lr&#125;	;将当前fp所指向的地址,即main的栈帧基址压入堆栈 ; 同时将mian的返回地址LR压入堆栈</span><br><span class="line">add fp,sp #4    ;将fp指向当前sp指针的前一个地址(即保存基址FP的地方)</span><br><span class="line">sub sp,sp,#16	;开辟栈帧空间 , 将SP指向栈顶(即②位置), </span><br><span class="line">...				;同理将局部变量压入栈中</span><br><span class="line">...</span><br><span class="line">bl(g的地址)&lt;g&gt;    ;调用g()函数,同时将pc值保存在LR寄存器</span><br><span class="line">mov r3 #50		 ;返回值 </span><br><span class="line">mov r0 r3		 ;保存返回值</span><br><span class="line">mov sp,fp,#4	 ;同理，将SP指向上级函数栈帧栈顶</span><br><span class="line">pop &#123;fp,pc&#125;		 ;同理,将FP、LR的值依次弹出到FP、PC寄存器。实现跳转回main函数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------------</span><br><span class="line"></span><br><span class="line">（g的地址）&lt;g&gt;</span><br><span class="line">push &#123;fp&#125; 		; 同理将 f()的基址FP压入堆栈 (即str fp ,[sp,#-4]!)</span><br><span class="line">; 因为g函数已经不再跳转,所以LR寄存器的值一直是f()的返回地址,所以不需要压入LR</span><br><span class="line">add fp,sp,#0	;同理</span><br><span class="line">sub sp,sp,#12   ;同理将sp指向栈顶</span><br><span class="line">...				;同理保存局部变量</span><br><span class="line">...</span><br><span class="line">mov r3,#300		;返回值</span><br><span class="line">mov r0,r3</span><br><span class="line">sub sp,fp,#0	;sp = fp - 0 </span><br><span class="line">pop &#123;fp&#125;     	;将FP的值弹到fp寄存器 , 即将fp指向f()函数基址(ldr fp,[sp],#4)</span><br><span class="line">bxlr			;直接将lR寄存器的值赋给PC指针 , 实现返回上一级f()函数中运行</span><br></pre></td></tr></table></figure>
<img src="https://pic2.imgdb.cn/item/645cfa5d0d2dde57774efea5.png" alt="image-20221003144546960" style="zoom:67%;" />
</li>
</ul>
</blockquote>
</blockquote>
<br>
<hr />
<h4 id="22-参数传递"><a class="markdownIt-Anchor" href="#22-参数传递"></a> 2.2 参数传递</h4>
<p>ARM处理一般会使用寄存器来传递参数</p>
<blockquote>
<ul>
<li>在函数调用过程, 当要传递的参数个数<strong>小于4时</strong> , 会直接使用r0~r3寄存器传递</li>
<li>当要传递的参数个数<strong>大于4时,</strong> 前4个参数使用寄存器传递 , 剩余的参数则压入堆栈保存</li>
<li>C语言默认参数传递是<strong>从右到左</strong> , 栈的清理方是函数调用者</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font ></p>
<p><em><strong>C语言程序原型</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> ag, <span class="type">int</span> ag2, <span class="type">int</span> ag3, <span class="type">int</span> ag4, <span class="type">int</span> ag5, <span class="type">int</span> ag6)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    S = agl + ag2 + ag3 + ag4 + ag5 + ag6;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum =<span class="number">0</span>;</span><br><span class="line">    f(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; sum:%d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em><strong>汇编语言</strong></em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(f的地址)&lt;f&gt;</span><br><span class="line">push &#123;fp&#125;			; 将 main()的基址FP压入堆栈 (即str fp ,[sp,#-4]!)</span><br><span class="line">add fp,sp,#0</span><br><span class="line">sub sp,sp,#28</span><br><span class="line">str r0,[fp,#-16]	;将main函数通过寄存器r0~r3传递的实参1,2,3,4保存到自己的函数栈帧中</span><br><span class="line">str r1,[fp,#-20]	; r1   </span><br><span class="line">...					; r2</span><br><span class="line">...					; r3</span><br><span class="line">ldr r2,[fp,#-16]	;准备进行累计计算, 将栈帧内的数加载到寄存器</span><br><span class="line">ldr r3,[fp,#-20]	;加载到寄存器</span><br><span class="line">add r2,r2,r3		;r2 = r2 + r3</span><br><span class="line">...					;同理,累计 s = 1+2+3+4;</span><br><span class="line">ldr r3,[fp,#4]		;fp寄存器向后偏移,到上一级函数的栈帧中获取要传递的实参(5)</span><br><span class="line">add r2,r2,r3		;r2 = r2 + r3</span><br><span class="line">ldr r3,[fp,#8]		;读取main栈帧内的实参(6)</span><br><span class="line">add r3,r2,r3		;r3 = r2 + r3</span><br><span class="line">str r3,[fp,#-8]		;将运算结果存入堆栈</span><br><span class="line">ldr r3, [fp, #-8]	</span><br><span class="line">mov r0,r3			;传递返回值</span><br><span class="line">sub sp,fp,#0		;sp指针指向上级函数栈顶</span><br><span class="line">pop &#123;fp&#125;			;fp指向上级函数基址</span><br><span class="line">bxlr				;跳转回函数调用地址</span><br><span class="line">   ----------------------------------</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">&lt;main&gt;    </span><br><span class="line">push &#123;fp,lr&#125;	;同上,保存main上级基址和上级函数调用地址lr</span><br><span class="line">add fp,sp,#4	;将fp指向sp的前一地址位置</span><br><span class="line">sub sp,sp,#16	;开辟栈帧空间 , 将SP指向栈顶</span><br><span class="line">mov r3,#0		;保存局部变量sum = 0</span><br><span class="line">str r3,[fp,#-8]</span><br><span class="line">mov r3,#6		;将传递的参数列表从右向左保存,先将实参6压入mian函数的栈帧</span><br><span class="line">str r3,[sp,#4]	;</span><br><span class="line">mov r3,#5		;将实参5压入栈</span><br><span class="line">str r3,[sp]		;</span><br><span class="line">mov r3,#4		;其他实参通过寄存器传递</span><br><span class="line">mov r3,#3		;3</span><br><span class="line">...				;2</span><br><span class="line">...				;1</span><br><span class="line">bl(f()的地址)&lt;f&gt; ;调用f(),同时将pc的值保存在LR中</span><br><span class="line">...				;同上,将sp指针指向栈顶,以及将跳转</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>随记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>驱动开发</tag>
        <tag>随记</tag>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>TortoiseGit 的安装与使用</title>
    <url>/2023/04/08/TortoiseGit%20%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.08.01」</em>    第一版测试与使用</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<p><strong>摘要：</strong>  <em>推荐一个Git工具，TortoiseGit 的安装与使用</em></p>
<p><strong>简介：</strong> <em>TortoiseGit是一个开放的GIT版本控制系统的源客户端，通过图形化进行git版本控制</em></p>
</blockquote>
<span id="more"></span>
<hr />
<h2 id="1️⃣-tortoisegit概述"><a class="markdownIt-Anchor" href="#1️⃣-tortoisegit概述"></a> 1️⃣ TortoiseGit概述</h2>
<h3 id="11-tortoisegit-是什么"><a class="markdownIt-Anchor" href="#11-tortoisegit-是什么"></a> 1.1 TortoiseGit 是什么</h3>
<p>tortoiseGit是一个开放的git版本控制系统的源客户端，git是命令行操作模式，也叫海龟git。tortoiseGit界面化操作模式，<mark>不用记git相关</mark></p>
<p><mark>命令</mark>就可以直接操作。TortoiseGit提供了人性化的图形化界面，不用像Git一样输入许多语句，像git init、git add、git commit这些语句</p>
<p>就通通不用记了， 轻松使用鼠标，就可以完成代码的提交和上传。</p>
<h3 id="12-tortoisegit与git-bash的简单使用"><a class="markdownIt-Anchor" href="#12-tortoisegit与git-bash的简单使用"></a> 1.2  TortoiseGit与Git Bash的简单使用</h3>
<p>Git作为一个复杂的版本控制系统，命令繁多。即使我们平时常用的功能，如简单的提交推送，也可能出现打错命令的情况。</p>
<p>所以这里以我们常用的推送来举例：</p>
<h4 id="121-git-bash"><a class="markdownIt-Anchor" href="#121-git-bash"></a> 1.2.1 git bash</h4>
<p>用命令行来备份我的typora笔记：</p>
<p>首先打开命令行工具</p>
<p>接着分别进行：</p>
<ul>
<li>路径选择；</li>
<li>暂存文件；</li>
<li>提交文件；</li>
<li>推送文件；</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/643133260d2dde5777675f14.png" alt="im1" /></p>
<br>
<hr />
<h4 id="122-tortoisegit"><a class="markdownIt-Anchor" href="#122-tortoisegit"></a> 1.2.2 TortoiseGit</h4>
<p>直接右键文件夹：</p>
<p><img src="https://pic.imgdb.cn/item/643133660d2dde577767da8a.png" alt="" /></p>
<p>然后直接提交推送即可：</p>
<p><img src="https://pic.imgdb.cn/item/643133760d2dde577767f9d1.png" alt="在这里插入图片描述" /></p>
<hr />
<h2 id="2️⃣-tortoisegit-安装"><a class="markdownIt-Anchor" href="#2️⃣-tortoisegit-安装"></a> 2️⃣ TortoiseGit 安装</h2>
<h3 id="21-tortoisegit安装包及中文语言包下载"><a class="markdownIt-Anchor" href="#21-tortoisegit安装包及中文语言包下载"></a> 2.1 TortoiseGit安装包及中文语言包下载</h3>
<p>首先去官网下载<mark>TortoiseGit的安装包</mark>和<mark>中文语言包</mark></p>
<p>（👇 官网地址）</p>
<p><a href="https://tortoisegit.org/download/">官网</a></p>
<p><strong>两个都要下载</strong></p>
<p><img src="https://pic.imgdb.cn/item/643133930d2dde57776835e7.png" alt="在这里插入图片描述" /></p>
<hr />
<h3 id="22-安装tortoisegit"><a class="markdownIt-Anchor" href="#22-安装tortoisegit"></a> 2.2 安装<strong>TortoiseGit</strong></h3>
<h4 id="221-双击tortoisegit-21301-64bit-开始安装"><a class="markdownIt-Anchor" href="#221-双击tortoisegit-21301-64bit-开始安装"></a> 2.2.1 双击<code>TortoiseGit-2.13.0.1-64bit</code> 开始安装</h4>
<p><img src="https://pic.imgdb.cn/item/643133a70d2dde5777685dc2.png" alt="在这里插入图片描述" /></p>
<h4 id="222-一路-next"><a class="markdownIt-Anchor" href="#222-一路-next"></a> 2.2.2 一路 next</h4>
<p><img src="https://pic.imgdb.cn/item/643133c60d2dde57776897b1.png" alt="" /></p>
<p><img src="https://pic.imgdb.cn/item/643133d70d2dde577768b6e1.png" alt="" /></p>
<br>
<hr />
<h4 id="223-这里选哪个都可以"><a class="markdownIt-Anchor" href="#223-这里选哪个都可以"></a> 2.2.3  这里选哪个都可以</h4>
<p>选择 TortoiseGitPlink(位于TortoiseGit安装目录/bin 下),； 也可以选择 Git 默认的SSH客户端,位于 Git安装目录/bin/ssh.exe(如果配置了 Path,那直接是 ssh.exe)。</p>
<p><img src="https://pic.imgdb.cn/item/643133f90d2dde577769012f.png" alt="在这里插入图片描述" /></p>
<h4 id="224-选择安装目录安装程序组件保持默认"><a class="markdownIt-Anchor" href="#224-选择安装目录安装程序组件保持默认"></a> 2.2.4  选择安装目录，安装程序组件保持默认</h4>
<p><img src="https://pic.imgdb.cn/item/6431340d0d2dde57776935ce.png" alt="在这里插入图片描述" /></p>
<h4 id="225-直接安装即可"><a class="markdownIt-Anchor" href="#225-直接安装即可"></a> 2.2.5  直接安装即可</h4>
<p><img src="https://pic.imgdb.cn/item/643134250d2dde5777696c71.png" alt="在这里插入图片描述" /></p>
<h4 id="226-安装完成后运行启动向导"><a class="markdownIt-Anchor" href="#226-安装完成后运行启动向导"></a> 2.2.6  安装完成后运行启动向导</h4>
<p><img src="https://pic.imgdb.cn/item/643134340d2dde5777698bb1.png" alt="在这里插入图片描述" /></p>
<h4 id="227-选择语言包"><a class="markdownIt-Anchor" href="#227-选择语言包"></a> 2.2.7 选择语言包</h4>
<p>现在暂时只有英文，把中文包安装后刷新就有中文了</p>
<p><img src="https://pic.imgdb.cn/item/643134510d2dde577769dd50.png" alt="" /></p>
<h5 id="2271-安装语言包"><a class="markdownIt-Anchor" href="#2271-安装语言包"></a> 2.2.7.1  安装语言包</h5>
<p>双击运行<code>TortoiseGit-LanguagePack-2.13.0.0-64bit-zh_CN.msi</code>，然后一路next就行。</p>
<h5 id="2272-选择语言"><a class="markdownIt-Anchor" href="#2272-选择语言"></a> 2.2.7.2 选择语言</h5>
<p>重新刷新后就能选择中文了</p>
<p><img src="https://pic.imgdb.cn/item/643134670d2dde57776a138a.png" alt="" /></p>
<h4 id="228-选择git的安装位置"><a class="markdownIt-Anchor" href="#228-选择git的安装位置"></a> 2.2.8 选择git的安装位置</h4>
<p><em>它会自动找到git安装位置，如果找不到可以自己去找到git安装位置</em></p>
<p><img src="https://pic.imgdb.cn/item/6431347c0d2dde57776a401f.jpg" alt="" /></p>
<h4 id="229-输入姓名和邮箱"><a class="markdownIt-Anchor" href="#229-输入姓名和邮箱"></a> 2.2.9 输入姓名和邮箱</h4>
<p>这里留下的姓名会在你推送的的时候 显示作者名字</p>
<p>如这样：</p>
<p><img src="https://pic.imgdb.cn/item/643134a20d2dde57776ab105.png" alt="" /></p>
<h4 id="2210-点击完成即可"><a class="markdownIt-Anchor" href="#2210-点击完成即可"></a> 2.2.10 点击完成即可</h4>
<p><img src="https://pic.imgdb.cn/item/643134b70d2dde57776adf73.png" alt="在这里插入图片描述" /></p>
<hr />
<h2 id="3️⃣-tortoisegit配置"><a class="markdownIt-Anchor" href="#3️⃣-tortoisegit配置"></a> 3️⃣  TortoiseGit配置</h2>
<h3 id="31-进入设置"><a class="markdownIt-Anchor" href="#31-进入设置"></a> 3.1 进入设置</h3>
<p>在桌面右键鼠标进入设置</p>
<p><img src="https://pic.imgdb.cn/item/643134c90d2dde57776b0207.png" alt="在这里插入图片描述" /></p>
<h3 id="32-配置右键菜单"><a class="markdownIt-Anchor" href="#32-配置右键菜单"></a> 3.2 配置右键菜单</h3>
<p>按自己需求自行配置后，点击确定即可</p>
<p><img src="https://pic.imgdb.cn/item/643134df0d2dde57776b3183.png" alt="在这里插入图片描述" /></p>
<h3 id="33-配置ssh客户端"><a class="markdownIt-Anchor" href="#33-配置ssh客户端"></a> 3.3 配置SSH客户端</h3>
<p><span id="two" name="two"></span></p>
<p>可以将<strong>TortoiseGit</strong>的<strong>SSH客户端</strong>修改为<strong>GitBash的SSH</strong>， 这样在<code>TortoiseGit</code>与服务器上的公匙进行匹配的时候，就会使用和<code>GitBash</code></p>
<p>同样的本地密匙</p>
<p><img src="https://pic.imgdb.cn/item/643134f00d2dde57776b58dd.png" alt="在这里插入图片描述" /></p>
<p><img src="https://pic.imgdb.cn/item/6431350a0d2dde57776b93f6.png" alt="在这里插入图片描述" /></p>
<hr />
<h2 id="4️⃣-tortoisegit使用"><a class="markdownIt-Anchor" href="#4️⃣-tortoisegit使用"></a> 4️⃣ TortoiseGit使用</h2>
<p><mark>以提交推送为例</mark></p>
<h3 id="41-右键需要提交的文件"><a class="markdownIt-Anchor" href="#41-右键需要提交的文件"></a> 4.1 右键需要提交的文件</h3>
<p><img src="https://pic.imgdb.cn/item/643133660d2dde577767da8a.png" alt="" /></p>
<h3 id="42-提交文件"><a class="markdownIt-Anchor" href="#42-提交文件"></a> 4.2  提交文件</h3>
<p><img src="https://pic.imgdb.cn/item/6431359a0d2dde57776d0820.png" alt="在这里插入图片描述" /></p>
<h3 id="43-推送文件"><a class="markdownIt-Anchor" href="#43-推送文件"></a> 4.3 推送文件</h3>
<p>提交完直接点推送即可</p>
<p><img src="https://pic.imgdb.cn/item/643135ac0d2dde57776d2b06.png" alt="在这里插入图片描述" /></p>
<h4 id="431-可能会出现弹窗"><a class="markdownIt-Anchor" href="#431-可能会出现弹窗"></a> 4.3.1 可能会出现弹窗</h4>
<p>就是询问是否将该主机添加信任，点击“是”即可</p>
<p><img src="https://pic.imgdb.cn/item/643135bd0d2dde57776d54dd.png" alt="在这里插入图片描述" /></p>
<h3 id="44-推送成功"><a class="markdownIt-Anchor" href="#44-推送成功"></a> 4.4 推送成功</h3>
<p><img src="https://pic.imgdb.cn/item/643133760d2dde577767f9d1.png" alt="在这里插入图片描述" /></p>
<br>
<p><img src="https://pic.imgdb.cn/item/643138ee0d2dde577774a9cf.png" alt="im3" /></p>
<hr />
<h2 id="5️⃣-出现的问题"><a class="markdownIt-Anchor" href="#5️⃣-出现的问题"></a> 5️⃣ 出现的问题</h2>
<blockquote>
<p><strong>问题描述：</strong>  推送时出现报错,而使用git-bash可以正常推送。</p>
<p><img src="https://pic.imgdb.cn/item/643135f20d2dde57776dd75e.png" alt="" /></p>
</blockquote>
<blockquote>
<blockquote>
<ul>
<li>[x] <strong>原因：</strong> <code>TortoiseGit</code>远程仓库的公匙无法和本地的密匙进行匹配认证造成的(主要是<code>TortoiseGit</code>缺少本地密匙)</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>[x] <strong>解决：</strong>  修改<code>TortoiseGit</code>的默认网络<code>SSH client</code>，使其与<code>GitBash</code>的<code>SSH</code>相同，即与<code>GitBash</code>使用相同的密匙。（<a href="#two">详见上文</a> ）</li>
</ul>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>SystemView 介绍与移植</title>
    <url>/2023/04/08/SystemView%20%E4%BB%8B%E7%BB%8D%E4%B8%8E%E7%A7%BB%E6%A4%8D/</url>
    <content><![CDATA[<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.20」</em>    第一版</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em><br />
<br></p>
<p><strong>version :</strong>    <em>v2.0</em>      <em>「2022.7.21」</em>    添加部分漏掉的内容[详见](#  3.1 补充)</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em><br />
<br></p>
<p><strong>摘要：</strong>  <em>介绍systemview，以及移植过程</em></p>
<p><strong>简介：</strong> <em>前几天在看RM官方代码(<strong>RoboRTS-Firmware-icra2021</strong>)时，看到其中对SystemView的应用，稍微花了点时间研究了一下，感觉挺有用的，记录一下</em></p>
</blockquote>
<span id="more"></span>
<br>
<hr />
<h3 id="0️⃣前言"><a class="markdownIt-Anchor" href="#0️⃣前言"></a> 0️⃣前言</h3>
<p>在使用<a href="https://freertos.org/">FreeRTOS</a>进行应用开发时经常会遇到普通的方式难以调试的问题，如栈内存不足等等，同时也希望对运行的多个Task进行实时的</p>
<p>性能及资源占用的分析，通常的调试手段在这里就变的心有余而力不足了。以FreeRTOS为例，如何在长时间的运行过程中收集调试数据</p>
<p>进行分析，以及如何调试不同的组件（如Queue，Notification，Semaphore等等）？这个时候就需要Trace工具帮忙了。针对RTOS的</p>
<p>Trace需求，接下来将针对SEGGER开发的SystemView Trace工具进行介绍。</p>
<hr />
<h3 id="1️⃣什么是systemview"><a class="markdownIt-Anchor" href="#1️⃣什么是systemview"></a> 1️⃣<strong>什么是SystemView？</strong></h3>
<p><a href="https://www.segger.com/products/development-tools/systemview/">SystemView</a>是SEGGER开发的针对嵌入式系统的trace工具，支持多种RTOS，也支持自定义OS的移植（需实现trace API，参见User</p>
<p>Manual）。其核心基于<strong>SEGGER RTT</strong>，一个<strong>Host-Targe</strong>t间的通信框架，可通过多种方式连接，除J-LINK之外还可以使用串口及TCP-IP协</p>
<p>议，对非商业用途免费且无功能限制。</p>
<p>SystemView 是一个用于虚拟分析嵌入式系统的工具包。SystemView 可以完整的深入观察一个应用程序的运行时行为，这远远超出一个</p>
<p>调试器所能提供的。这在开发和处理具有多个线程和事件的复杂系统时尤其有效。</p>
<p><a href="http://www.segger.com/products/development-tools/systemview/">官方介绍</a></p>
<p>SystemView的原理简单来讲是这样的：首先上位机PC端有一个处理程序，下位机ARM上需增加部分代码，用于记录嵌入式系统的一些数</p>
<p>据，通过连接的仿真器接口将数据传输到上位机，然后PC端的处理程序处理这些数据，由于数据传输使用的是<strong>SEGGER J-link</strong>的实时传输</p>
<p>技术（RTT），所以<strong>SystemView</strong>可以实时分析和展示数据。分析的内容包括中断、任务、软件定时器执行的时间，切换的时间，以及发</p>
<p>生的事件等，这些分析都是实时的，丝毫不影响下位机的运行。这样就可以验证我们设计的整个嵌入式系统是否按照我们的预期在工作，</p>
<p>比如任务的<mark>切换逻辑</mark>，<mark>中断的触发</mark>等。它可以应用于带有RTOS的系统，也支持裸机，对于下位机资源的消耗量也是比较少的。</p>
<hr />
<hr />
<h3 id="2️⃣-测试环境"><a class="markdownIt-Anchor" href="#2️⃣-测试环境"></a> 2️⃣ 测试环境</h3>
<blockquote>
<p><strong>开发板：</strong>             <em>ACE实验室H7通用开发板</em>   //   ACE实验室哨兵H7云台板</p>
<blockquote>
<p><strong>主控芯片：</strong>	<em>STM32H750VBT6</em></p>
</blockquote>
<blockquote>
<p><strong>CPU：</strong>			<em>Cortex-M7</em></p>
</blockquote>
<blockquote>
<p><strong>最高主频：</strong>     480MHZ</p>
</blockquote>
<p><strong>测试程序：</strong>     			  <em>[2022_sentryH750_v1.3.5]</em>  / <em>[systemview_test]</em></p>
<blockquote>
<p><strong>FreeRTOS版本：</strong> <em>v10.3.1</em></p>
</blockquote>
<blockquote>
<p><strong>FreeRTOS说明：</strong>  <em>FreeRTOS为STM32CubeMX配置的未修改版本。</em></p>
</blockquote>
<p><strong>开发平台：</strong>	    <em>VSCODE、MDK-ARM</em></p>
<blockquote>
<p><strong>程序编辑：</strong>    <em>VSCODE</em></p>
</blockquote>
<blockquote>
<p><strong>程序调试：</strong>     <em>MDK-ARM     [ v 5.35.0.2]</em></p>
</blockquote>
<p><strong>调试设备：</strong>			<em>J-Link仿真器 ：    [ACE - Sentry-哨兵]  /  [Sentry]</em></p>
<p><strong>Systemview 程序包：</strong>   <em>SystemView_Windows_V332_x86</em></p>
<blockquote>
<p><a href="https://www.segger.com/products/development-tools/systemview/">下载链接</a></p>
</blockquote>
</blockquote>
<hr />
<h3 id="3️⃣移植过程"><a class="markdownIt-Anchor" href="#3️⃣移植过程"></a> 3️⃣移植过程</h3>
<h4 id="pc端程序包下载"><a class="markdownIt-Anchor" href="#pc端程序包下载"></a> PC端程序包下载：</h4>
<p><em>在官网上下载Systemview程序包</em></p>
<p><img src="https://pic.imgdb.cn/item/64311f430d2dde57773effea.png" alt="在这里插入图片描述" /></p>
<h4 id="window端的程序有两种"><a class="markdownIt-Anchor" href="#window端的程序有两种"></a> <strong>window端的程序有两种</strong></h4>
<p><strong>安装包</strong></p>
<p>从<a href="http://www.segger.com/systemview.html">官网</a>下载最新的DEB包或者RPM包并执行。安装向导会指引完成安装。</p>
<p><strong>可移植压缩包</strong></p>
<p>从<a href="http://www.segger.com/systemview.html">官网</a>下载最新的存档，解压到系统的任意目录。<br />
这种方式不需要安装，解压后就可以直接使用程序包内容。</p>
<hr />
<h4 id="代码移植"><a class="markdownIt-Anchor" href="#代码移植"></a> 代码移植</h4>
<p>将程序包内<code>SEGGER</code> 目录下代码以及 <code>Sample</code> 中的<strong>FreeRTOS代码</strong>添加到项目中。</p>
<h6 id="1-首先是config文件夹下面的所有文件"><a class="markdownIt-Anchor" href="#1-首先是config文件夹下面的所有文件"></a> <em><strong>1.  首先是<code>Config</code>文件夹下面的所有文件。</strong></em></h6>
<p><img src="https://pic.imgdb.cn/item/64311f790d2dde57773f56e7.png" alt="在这里插入图片描述" /></p>
<h6 id="2-根据自己的rtos版本选择系统配置文件我的是-freertos-v1031-选择用-freertosv10"><a class="markdownIt-Anchor" href="#2-根据自己的rtos版本选择系统配置文件我的是-freertos-v1031-选择用-freertosv10"></a> <strong>2.  根据自己的RTOS版本选择系统配置文件（我的是 <em>FreeRTOS v10.3.1</em>  选择用 FreeRTOSV10）</strong></h6>
<p><img src="https://pic.imgdb.cn/item/64311f960d2dde57773f808b.png" alt="在这里插入图片描述" /></p>
<h6 id="3-rtt相关文件"><a class="markdownIt-Anchor" href="#3-rtt相关文件"></a> <strong>3.   RTT相关文件</strong></h6>
<p><img src="https://pic.imgdb.cn/item/64311fb10d2dde57773fa45e.png" alt="在这里插入图片描述" /></p>
<h6 id="4-放进项目里面的systemview文件夹"><a class="markdownIt-Anchor" href="#4-放进项目里面的systemview文件夹"></a> <strong>4.    放进项目里面的systemview文件夹</strong></h6>
<p><img src="https://pic.imgdb.cn/item/64311fc40d2dde57773fbefd.png" alt="在这里插入图片描述" /></p>
<h6 id="5-程序添加"><a class="markdownIt-Anchor" href="#5-程序添加"></a> 5.  程序添加</h6>
<ol>
<li>在<code>FreeRTOS.h</code> 中添加  <code>#include &quot;SEGGER_SYSVIEW_FreeRTOS.h&quot;</code></li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">SEGGER_SYSVIEW_Conf();</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/64311fd40d2dde57773fd3fe.png" alt="在这里插入图片描述" /></p>
<ol start="2">
<li>在<code>main.c</code>里面添加<code>#include &quot;SEGGER_SYSVIEW.h&quot;</code></li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SEGGER_SYSVIEW.h&quot;</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/64311fe50d2dde57773feb85.png" alt="在这里插入图片描述" /></p>
<ol start="3">
<li><em>然后还需要在系统启动前添加segger systemview的初始化</em></li>
</ol>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*  systemview 初始化 */</span></span><br><span class="line">   <span class="built_in">SEGGER_SYSVIEW_Conf</span>();</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/64311ff90d2dde5777400992.png" alt="在这里插入图片描述" /></p>
<h6 id="31-补充"><a class="markdownIt-Anchor" href="#31-补充"></a> 3.1 补充</h6>
<p>还要在系统启动前启动DWT计数器</p>
<p><img src="https://pic.imgdb.cn/item/643120110d2dde5777402b8f.png" alt="在这里插入图片描述" /></p>
<p><em>[默认情况下SystemView会从DWT的Cycle counter获取系统当前周期数用于生成时间戳  ;  但在STM32CubeMX的初始化代码中该计数器默认未启用，在这里手工启用。 <mark><strong>详见（stm32延时方式 dwt.pdf）</strong></mark>]</em></p>
<ol start="4">
<li>在<code>FreeRTOSConfig.h</code>中添加宏定义</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> INCLUDE_xTaskGetIdleTaskHandle  1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INCLUDE_pxTaskGetStackStart     1</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/643120520d2dde5777407b3e.png" alt="在这里插入图片描述" /></p>
<ol start="5">
<li>取消勾选keil的GNU勾选模式</li>
</ol>
<p><em>[不然会报错]</em></p>
<p><img src="https://pic.imgdb.cn/item/6431207d0d2dde577740a6b8.png" alt="在这里插入图片描述" /></p>
<p>​														<mark><em>环境问题（未解决）</em></mark></p>
<p><em>[ps: 取消之后目前已知问题，会导致print 重定义出问题]</em></p>
<p><img src="https://pic.imgdb.cn/item/643120900d2dde577740bcc8.png" alt="在这里插入图片描述" /></p>
<p>​													<mark>暂时是注释解决</mark></p>
<p><strong>到这里就完成了在STM32上的程序移植</strong>。</p>
<hr />
<h3 id="4️⃣-使用过程"><a class="markdownIt-Anchor" href="#4️⃣-使用过程"></a> 4️⃣ 使用过程</h3>
<h5 id="1-启动systemview"><a class="markdownIt-Anchor" href="#1-启动systemview"></a> 1. 启动SystemView</h5>
<p><img src="https://pic.imgdb.cn/item/643120aa0d2dde577740d838.png" alt="在这里插入图片描述" /></p>
<h5 id="2-可能会弹出警告说没有商业许可不管他暂时没发现问题"><a class="markdownIt-Anchor" href="#2-可能会弹出警告说没有商业许可不管他暂时没发现问题"></a> 2. 可能会弹出警告，说没有商业许可；不管他，暂时没发现问题</h5>
<p><img src="https://pic.imgdb.cn/item/643120ce0d2dde577741005f.png" alt="在这里插入图片描述" /></p>
<h5 id="3-systemview将加载并分析这些数据展示加载的记录的系统信息"><a class="markdownIt-Anchor" href="#3-systemview将加载并分析这些数据展示加载的记录的系统信息"></a> 3. SystemView将加载并分析这些数据，展示加载的记录的系统信息</h5>
<p><img src="https://pic.imgdb.cn/item/643120f20d2dde5777412621.png" alt="在这里插入图片描述" /></p>
<h5 id="4-点击开始记录"><a class="markdownIt-Anchor" href="#4-点击开始记录"></a> 4. 点击开始记录</h5>
<p><img src="https://pic.imgdb.cn/item/643121070d2dde5777413fd1.png" alt="在这里插入图片描述" /></p>
<h5 id="5-选择jlink"><a class="markdownIt-Anchor" href="#5-选择jlink"></a> 5. 选择JLink</h5>
<p><img src="https://pic.imgdb.cn/item/6431211a0d2dde57774156d2.png" alt="在这里插入图片描述" /></p>
<h5 id="6选择目标板的信息这里我的以及搞过了没弹出来用的网图"><a class="markdownIt-Anchor" href="#6选择目标板的信息这里我的以及搞过了没弹出来用的网图"></a> 6.选择目标板的信息（这里我的以及搞过了，没弹出来，用的网图）</h5>
<p><img src="https://pic.imgdb.cn/item/6431212b0d2dde5777416c7c.png" alt="在这里插入图片描述" /></p>
<h5 id="7进入实时监视"><a class="markdownIt-Anchor" href="#7进入实时监视"></a> 7.进入实时监视</h5>
<p><mark>部分JLINK会因为被检测到盗版而无法使用</mark></p>
<p><img src="https://pic.imgdb.cn/item/64301ce80d2dde5777a8c739.png" alt="在这里插入图片描述" /></p>
<br>
<hr />
<h3 id="5️⃣-窗口介绍"><a class="markdownIt-Anchor" href="#5️⃣-窗口介绍"></a> 5️⃣ 窗口介绍</h3>
<p>总共分大概以下几种窗口：</p>
<p><mark>时间轴窗口（Timeline）</mark>、<mark>事件窗口（Events）</mark>、<mark>终端窗口(Terminal)</mark>、<mark>CPU占用窗口（CPU Load）</mark>、<mark>不知道怎么命名窗口（context）</mark></p>
<p><img src="https://pic.imgdb.cn/item/643121730d2dde577741c3c5.png" alt="在这里插入图片描述" /></p>
<hr />
<h5 id="时间轴窗口timeline"><a class="markdownIt-Anchor" href="#时间轴窗口timeline"></a> 时间轴窗口（Timeline）</h5>
<p><img src="https://pic.imgdb.cn/item/643121840d2dde577741d8b1.png" alt="在这里插入图片描述" /></p>
<p>用于显示各<mark>任务占用的时间</mark>和逻辑顺序</p>
<ul>
<li>处于ready状态的任务，在开始执行前会被显示在<mark>浅灰色的栏</mark>中。</li>
<li>上下文是按<mark>优先级排序</mark>的。第一行显示了一个统一上下文中的所有活动。列表的顶部是中断，用Id来排序的，接下来是scheduler调度器和软件定时器（如果在系统中使用这些的话）。</li>
<li>在调度器(和定时器)下面，任务按优先级排序。当没有其他上下文处于活动状态时，底层上下文显示空闲时间。</li>
</ul>
<hr />
<h5 id="事件窗口events"><a class="markdownIt-Anchor" href="#事件窗口events"></a> 事件窗口（Events）</h5>
<p><img src="https://pic.imgdb.cn/item/643121a80d2dde57774206ce.png" alt="在这里插入图片描述" /></p>
<p><strong>Events窗口显示系统发送的所有事件，并显示它们的信息。每个事件都有以下几项：</strong></p>
<ul>
<li>在目标时间或记录时间内的时间戳，可以用微秒或纳秒分辨率显示</li>
<li>创建Events的上下文，即运行的任务。</li>
<li>Event描述，和事件类型一起显示，(IRS进入和退出，任务活动，API调用)。</li>
<li>Event细节描述事件的参数，即API调用参数。</li>
<li>在列表中定位事件的ID。</li>
</ul>
<p><strong>也可以通过事件滤波器查看对应的事件</strong></p>
<p><img src="https://pic.imgdb.cn/item/643121bc0d2dde5777421cfe.png" alt="在这里插入图片描述" /></p>
<hr />
<h5 id="终端窗口"><a class="markdownIt-Anchor" href="#终端窗口"></a> 终端窗口</h5>
<p><img src="https://pic.imgdb.cn/item/643121d10d2dde57774234db.png" alt="在这里插入图片描述" /></p>
<p><em>终端窗口显示来自目标应用程序的printf输出，以及发出log输出的任务上下文，以及发送消息时的时间</em></p>
<p><em>戳。双击消息，可以显示出该消息在事件列表中的所有信息。</em></p>
<p><em>Timeline窗口显示的是输出的指示器，根据级别排序（错误总是排在顶部）。显示的日志级别可以通过</em></p>
<p><em>View -&gt; Message Indicators… 来配置。</em></p>
<p><strong>可通过systemview的API接口，打印信息</strong></p>
<p><img src="https://pic.imgdb.cn/item/643121e40d2dde577742486c.png" alt="在这里插入图片描述" /></p>
<hr />
<h5 id="cpu占用窗口cpu-load"><a class="markdownIt-Anchor" href="#cpu占用窗口cpu-load"></a> CPU占用窗口（CPU Load）</h5>
<p><img src="https://pic.imgdb.cn/item/643121f50d2dde5777425c36.png" alt="在这里插入图片描述" /></p>
<p>CPU load窗口显示了一个周期内上下文占用的CPU时间。CPU负载是用一个使用Timeline当前分辨率的</p>
<p>bin的宽度来测量的，因此与缩放级别是同步的。</p>
<p>可以通过选择bin的数量用来测量较短或较长时期的负载。使用一个bin，就可以在整个可见的时间轴上</p>
<p>测量CPU负载。</p>
<hr />
<h5 id="context窗口"><a class="markdownIt-Anchor" href="#context窗口"></a> Context窗口</h5>
<p><img src="https://pic.imgdb.cn/item/6431220a0d2dde57774271e2.png" alt="在这里插入图片描述" /></p>
<p><strong>Context窗口信息包括以下内容：</strong></p>
<ul>
<li>上下文名称和类型。</li>
<li>任务堆栈信息。（如果有的话）</li>
<li>上下文的活动计数。</li>
<li>活动频率。</li>
<li>总的运行时间和最后运行时间。</li>
<li>每秒当前的、最小和最大运行时间，单位是ms和%。</li>
</ul>
<br>
<hr />
<h3 id="6️⃣-其他使用"><a class="markdownIt-Anchor" href="#6️⃣-其他使用"></a> 6️⃣ 其他使用</h3>
<h5 id="事件记录"><a class="markdownIt-Anchor" href="#事件记录"></a> 事件记录</h5>
<p><mark>systemview默认的事件有</mark></p>
<p><img src="https://pic.imgdb.cn/item/643122200d2dde5777428a51.png" alt="在这里插入图片描述" /></p>
<hr />
<h5 id="添加中断记录"><a class="markdownIt-Anchor" href="#添加中断记录"></a> 添加中断记录</h5>
<p>可以自己在中断函数中添加对应的API接口，来实现对中断进入的记录。</p>
<p><img src="https://pic.imgdb.cn/item/643122320d2dde5777429bbc.png" alt="在这里插入图片描述" /></p>
<p><strong>结果如图：</strong></p>
<p><img src="https://pic.imgdb.cn/item/643122410d2dde577742ac70.png" alt="在这里插入图片描述" /></p>
<p><strong>可以看到会定期触发can中断，且每次进入中断事件长短不同</strong></p>
<p><img src="https://pic.imgdb.cn/item/643122540d2dde577742bef4.png" alt="在这里插入图片描述" /></p>
<h5 id="分析示例"><a class="markdownIt-Anchor" href="#分析示例"></a> 分析示例</h5>
<p><img src="https://pic.imgdb.cn/item/643122660d2dde577742d299.png" alt="在这里插入图片描述" /></p>
<p>可以看到哨兵云台任务<mark>占用的时间最长</mark>，且可以看到我们现在的任务运行时间在整个周期中占用的都是非常短的。</p>
<br>
<hr />
<h3 id="7️⃣-存在的问题"><a class="markdownIt-Anchor" href="#7️⃣-存在的问题"></a> 7️⃣ 存在的问题</h3>
<blockquote>
<p><strong>问题描述：</strong>    <em>J-Link不同而导致被识别盗版而不能用的问题</em></p>
<blockquote>
<ul>
<li>[x] <strong>原因：</strong>  <em>J-Link被识别盗版</em></li>
<li>[x] <strong>解决：</strong>  换用其他的J-Link仿真器，或利用串口进行收发（详见链接<a href="https://blog.imi.moe/systemview-freertos/">串口移植收发</a>）</li>
</ul>
</blockquote>
</blockquote>
<blockquote>
<p><strong>问题描述：</strong>  出现报错：</p>
<p>Error: L6218E: Undefined symbol SEGGER_SYSVIEW_X_GetInterruptId (referred from segger_sysview.o).<br />
Error: L6218E: Undefined symbol SEGGER_SYSVIEW_X_GetTimestamp (referred from segger_sysview.o).</p>
<blockquote>
<ul>
<li>[x] <strong>原因：</strong> systemview 在keil中与gnu扩展的不兼容</li>
<li>[x] <strong>解决：</strong>  在keil中选择不勾选GNU拓展（[详见]( ######5.  程序添加)）</li>
<li>[ ]  <strong>隐患：</strong>  其他部分代码可能会出现问题</li>
</ul>
</blockquote>
<p><strong>拓展问题表述：</strong> 串口 print重定义代码出现报错</p>
<blockquote>
<ul>
<li>[x] <strong>原因</strong>： 因为没有了GNU拓展，导致这部分代码不可用</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>[ ] <strong>解决：</strong>  暂定先注释掉，待解决。</li>
</ul>
</blockquote>
</blockquote>
<br>
<hr />
<h3 id="8️⃣-应用场景"><a class="markdownIt-Anchor" href="#8️⃣-应用场景"></a> 8️⃣ 应用场景</h3>
<ul>
<li>用于查看每个进程的时间片，查看各个进程时间占用情况。</li>
<li>防止某个进程占用时间过长，而被操作系统强行进入<mark>堵塞状态。</mark></li>
<li>查看中断进入情况，避免因传感器发送频率过高，而频繁进入中断。</li>
</ul>
]]></content>
      <categories>
        <category>调试</category>
      </categories>
      <tags>
        <tag>单片机</tag>
        <tag>arm</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>程序编译过程</title>
    <url>/2023/04/07/%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="程序编译过程"><a class="markdownIt-Anchor" href="#程序编译过程"></a> 程序编译过程</h1>
<br>
<blockquote>
<p><strong>version :</strong>    <em>v1.0</em>      <em>「2022.7.28」</em>   最后补充</p>
<p><strong>author：</strong>  <em>Y.Z.T.</em></p>
<br>
<p><strong>简介：</strong> 简单程序的编译过程</p>
</blockquote>
<br>
<span id="more"></span>
<hr />
<br>
<hr />
<h3 id="1️⃣-编译流程"><a class="markdownIt-Anchor" href="#1️⃣-编译流程"></a> 1️⃣ 编译流程</h3>
<p>程序的整个编译流程大致分成<strong>几个阶段</strong>:</p>
<ul>
<li><em><strong>预处理 :</strong></em>  将预处理指令进行处理 , 预处理器将<strong>源文件(.c)</strong> 经过预处理变成 <strong>文件(.i )</strong></li>
<li><em><strong>编译 :</strong></em>   编译器调用解析工具 , 将预处理后的<strong>源文件( .i )<strong>编译成</strong>汇编文件( .s)</strong></li>
<li><em><strong>汇编 :</strong></em>  这是也是编译的第二阶段 , 通过汇编器将<strong>汇编文件( .s)</strong> 汇编成可重定位的<strong>目标文件( .o)</strong></li>
<li><em><strong>链接 :</strong></em>  将各个<strong>目标文件( .o)<strong>链接成</strong>可执行文件</strong>( 也是可执行文件的一种 )</li>
</ul>
<br>
<p><em><strong>程序编译  , 链接流程图:</strong></em></p>
<p><img src="https://pic1.imgdb.cn/item/633aa48716f2c2beb1e98a0d.png" alt="image-20220928113639502" /></p>
<br>
<hr />
<h3 id="2️⃣-可执行文件"><a class="markdownIt-Anchor" href="#2️⃣-可执行文件"></a> 2️⃣ 可执行文件</h3>
<p>一个可执行文件通常由一系列不同的段<code>(section)</code>构成:<strong>代码段</strong>、<strong>数据段</strong>、<strong>BSS段</strong>、<strong>只读数据段</strong>等。</p>
<p><em><strong>C语言到可执行文件 :</strong></em></p>
<p><img src="https://pic1.imgdb.cn/item/633aa48716f2c2beb1e98a1c.png" alt="image-20220928114314496" /></p>
<ul>
<li><em><strong>函数</strong></em> 翻译成二进制指令放在 <em><strong>代码段</strong></em> 中</li>
<li><em><strong>初始化的全局变量</strong></em> 和 <em><strong>静态局部变量</strong></em> 放在 <em><strong>数据段</strong></em> 中(.data)</li>
<li><em><strong>未初始化的全局变量</strong></em> 和 <em><strong>静态变量</strong></em> 放在 <em><strong>BSS段</strong></em> 中(.bss)</li>
<li>程序中定义的一些<strong>字符串</strong> , <strong>printf函数打印的字符串常量</strong>放在 <strong>只读数据段( .rodata)</strong> 中</li>
</ul>
<br>
<hr />
<h3 id="3️⃣-预处理"><a class="markdownIt-Anchor" href="#3️⃣-预处理"></a> 3️⃣ 预处理</h3>
<blockquote>
<p><em><strong>预处理过程</strong></em> 就是 在编译源程序之前 , 先处理源文件中的各种<strong>预处理指令</strong></p>
</blockquote>
<br>
<p>预处理主要包括以下操作 :</p>
<ul>
<li><em><strong>头文件展开:</strong></em>  将<code>#include</code>包含的头文件内容展开到当前位置 , 并删除<code>#include</code></li>
<li><em><strong>宏展开:</strong></em> 展开所有的宏定义,并删除<code>#define</code>。</li>
<li><em><strong>条件编译:</strong></em>  根据宏定义条件,选择要参与编译的分支代码,其余的分支丢弃。</li>
<li><em><strong>删除注释</strong></em>。</li>
<li><em><strong>添加行号和文件名标识:</strong></em>   编译过程中根据需要可以显示这些信息。</li>
<li><em><strong>保留<code>#pragma</code>命令:</strong></em> 该命令会在程序编译时指示编译器执行一些特定行为。</li>
</ul>
<br>
<hr />
<h3 id="4️⃣-编译"><a class="markdownIt-Anchor" href="#4️⃣-编译"></a> 4️⃣ 编译</h3>
<p><em><strong>汇编过程主要包括以下步骤 :</strong></em></p>
<ul>
<li>
<p>词法分析</p>
</li>
<li>
<p>语法分析</p>
</li>
<li>
<p>语义分析</p>
</li>
<li>
<p>中间代码生成</p>
</li>
<li>
<p>汇编代码生成</p>
</li>
<li>
<p>目标代码生成</p>
<br>
</li>
</ul>
<hr />
<h4 id="41-词法分析"><a class="markdownIt-Anchor" href="#41-词法分析"></a> 4.1  词法分析</h4>
<blockquote>
<p>词法分析主要用来解析C程序语句 , 词法分析一般会通过词法扫描器从左到右 , 将源程序分解为一系列不能再分解的记号单元–token。</p>
</blockquote>
<br>
<p><em><strong>常见<code>token</code></strong></em></p>
<ul>
<li>C语言的各种 <em><strong>关键字</strong></em> : <code>int</code>,<code>float</code>、<code>for</code>,<code>while</code>、<code>break</code>等。</li>
<li>用户定义的各种 <em><strong>标识符</strong></em> :  <strong>函数名</strong>、<strong>变量名</strong>、<strong>标号</strong>等。</li>
<li>字面量: <strong>数字</strong>、<strong>字符串</strong>等。</li>
<li><em><strong>运算符</strong></em>: C语言标准定义的40多个运算符。</li>
<li><em><strong>分隔符</strong></em>: 程序结束符分号、for循环中的等</li>
</ul>
<p><font face="华文彩云" color=red size=5>示例：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sum = a + b / c;</span><br></pre></td></tr></table></figure>
<p><em><strong>如上所示:</strong></em></p>
<ul>
<li>经过词法分析后 分解成 <code>sum</code> ,<code>=</code>, <code>a</code> ,<code>+</code>, <code>b</code>, <code>/</code>, <code>c</code>,<code>;</code>  八个<code>token</code></li>
<li>如果程序出现<strong>中文符号</strong>、<strong>圆角\半角字符</strong> 等 ,程序就会在这个阶段发错编译错误</li>
</ul>
<br>
<hr />
<h4 id="42-语法分析"><a class="markdownIt-Anchor" href="#42-语法分析"></a> 4.2 语法分析</h4>
<blockquote>
<p>语法分析主要是对前一阶段产生的<code>token</code>序列进行解析,  看是否能构建成一个语法上正确的<strong>语法短语</strong>(程序、语句、表达式等)。</p>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>说明：</font ></p>
<ul>
<li>词法分析语法分析工具在对<code>token</code>序列分析过程中, 如果发现不能构建语法上正确的语句或表达式,就会报语法错误: <code>syntax error</code></li>
<li>如果程序语句后 少了 **结束分号 ** 或 <strong>循环中少了分号</strong> ，就会在此阶段产生编译错误</li>
</ul>
<br>
<hr />
<h4 id="43-语义分析"><a class="markdownIt-Anchor" href="#43-语义分析"></a> 4.3 语义分析</h4>
<blockquote>
<p>语义分析主要对语法分析输出的各种表达式、语句进行检查,看看有没有错误。</p>
</blockquote>
<br>
<p><em><strong>例如 :</strong></em></p>
<ul>
<li>传递给函数的实参与函数声明的形参类型不匹配,</li>
<li>使用了一个未声明的变量</li>
<li>除数为零了;</li>
<li><code>break</code>在循环语句或<code>switch</code>语句之外出现了,</li>
<li>在循环语句之外发现了<code>continue</code>语句等</li>
</ul>
<br>
<hr />
<h4 id="44-生成中间代码"><a class="markdownIt-Anchor" href="#44-生成中间代码"></a> 4.4 生成中间代码</h4>
<blockquote>
<p><em><strong>说明:</strong></em></p>
<ul>
<li>中间代码是一维线性结构 , 类似伪代码</li>
<li>通过中间代码 , 可以很容易的将中间代码翻译成汇编代码</li>
</ul>
</blockquote>
<br>
<p><font face="华文彩云" color=red size=5>示例：</font ></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">1</span>;</span><br><span class="line">    sum = a + b / c;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>转换为中间代码 <em><strong>三地址码:</strong></em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">main ()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> D<span class="number">.4227</span>;</span><br><span class="line">    <span class="type">int</span> D<span class="number">.4228</span>;</span><br><span class="line">    </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sum;</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">        <span class="type">int</span> c;</span><br><span class="line">        </span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        a= <span class="number">2</span>;</span><br><span class="line">        b= <span class="number">1</span>;</span><br><span class="line">        C= <span class="number">1</span>;</span><br><span class="line">        D<span class="number">.4227</span> = b / c;</span><br><span class="line">        sum =D<span class="number">.4227</span> + a;</span><br><span class="line">        D<span class="number">.4228</span> = <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">return</span> D<span class="number">.4228</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    D<span class="number">.4228</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> D<span class="number">.4228</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>中间代码转换为 <em><strong>汇编代码</strong></em> :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV R0, #2		</span><br><span class="line">MOV R1, #1</span><br><span class="line">MOV R2, #1</span><br><span class="line">DIV R3, R1, R2		; R3 = R1 / R1</span><br><span class="line">ADD R0 RO.R3		; R0 = R0 + R3</span><br></pre></td></tr></table></figure>
<ul>
<li>将变量变量a、b、c分别放到寄存器R0、R1、R2中,</li>
<li>临时变量<code>D.4427</code>使用R3代替,然后使用<code>ADD</code>命令完成累加。</li>
</ul>
<br>
<hr />
<h4 id="45-汇编过程"><a class="markdownIt-Anchor" href="#45-汇编过程"></a> 4.5 汇编过程</h4>
<blockquote>
<ul>
<li>汇编器主要是 将汇编代码翻译成对应的二进制指令;</li>
<li>同时生成一些必要的信息 , 以section的形式组装到目标文件中</li>
</ul>
</blockquote>
<br>
<p><em><strong>汇编过程:</strong></em></p>
<p><img src="https://pic1.imgdb.cn/item/633aa48716f2c2beb1e98a26.png" alt="image-20220928233023855" /></p>
<br>
<hr />
<h3 id="5️⃣-链接过程"><a class="markdownIt-Anchor" href="#5️⃣-链接过程"></a> 5️⃣ 链接过程</h3>
<blockquote>
<ul>
<li>编译器在编译一个项目时,是以C源文件为单位进行编译的,每一个源文件编译生成一个对应的目标文件(.o)</li>
<li>但这些单独的<strong>目标文件(</strong>.o)是不可执行的 , 属于可重定位的目标文件;</li>
<li>它们要经过链接器 <em><strong>重定位</strong></em> 、<em><strong>链接</strong></em> 之后,才能组装成一个可执行的目标文件a.out。</li>
<li>链接器将各个目标文件组装在一起后, 重新 <strong>修改</strong> 各个目标文件中的变量或函数的 <strong>地址</strong> ,这个过程一般称为 <em><strong>重定位</strong></em> 。</li>
<li>链接过程中 , 将各个目标文件<strong>分段组装</strong> ; 例如 :  将各个目标文件的代码段放在一起,作为最终生成的可执行文件的代码段; 将各个目标文件的数据段放在一起,作为可执行文件的数据段。</li>
</ul>
</blockquote>
<br>
]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>学习记录</tag>
      </tags>
  </entry>
</search>
